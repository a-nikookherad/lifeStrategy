/******/
(function (modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/
    var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/
    function __webpack_require__(moduleId) {
        /******/
        /******/ 		// Check if module is in cache
        /******/
        if (installedModules[moduleId]) {
            /******/
            return installedModules[moduleId].exports;
            /******/
        }
        /******/ 		// Create a new module (and put it into the cache)
        /******/
        var module = installedModules[moduleId] = {
            /******/            i: moduleId,
            /******/            l: false,
            /******/            exports: {}
            /******/
        };
        /******/
        /******/ 		// Execute the module function
        /******/
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ 		// Flag the module as loaded
        /******/
        module.l = true;
        /******/
        /******/ 		// Return the exports of the module
        /******/
        return module.exports;
        /******/
    }

    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/
    __webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/
    __webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/
    __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
            /******/
            Object.defineProperty(exports, name, {enumerable: true, get: getter});
            /******/
        }
        /******/
    };
    /******/
    /******/ 	// define __esModule on exports
    /******/
    __webpack_require__.r = function (exports) {
        /******/
        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
            /******/
            Object.defineProperty(exports, Symbol.toStringTag, {value: 'Module'});
            /******/
        }
        /******/
        Object.defineProperty(exports, '__esModule', {value: true});
        /******/
    };
    /******/
    /******/ 	// create a fake namespace object
    /******/ 	// mode & 1: value is a module id, require it
    /******/ 	// mode & 2: merge all properties of value into the ns
    /******/ 	// mode & 4: return value when already ns object
    /******/ 	// mode & 8|1: behave like require
    /******/
    __webpack_require__.t = function (value, mode) {
        /******/
        if (mode & 1) value = __webpack_require__(value);
        /******/
        if (mode & 8) return value;
        /******/
        if ((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
        /******/
        var ns = Object.create(null);
        /******/
        __webpack_require__.r(ns);
        /******/
        Object.defineProperty(ns, 'default', {enumerable: true, value: value});
        /******/
        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {
            return value[key];
        }.bind(null, key));
        /******/
        return ns;
        /******/
    };
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/
    __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
            /******/            function getDefault() {
                return module['default'];
            } :
            /******/            function getModuleExports() {
                return module;
            };
        /******/
        __webpack_require__.d(getter, 'a', getter);
        /******/
        return getter;
        /******/
    };
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/
    __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    /******/
    /******/ 	// __webpack_public_path__
    /******/
    __webpack_require__.p = "/";
    /******/
    /******/
    /******/ 	// Load entry module and return exports
    /******/
    return __webpack_require__(__webpack_require__.s = 0);
    /******/
})
/************************************************************************/
/******/({

    /***/ "./node_modules/jquery/dist/jquery.js":
    /*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.4.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2019-05-01T21:04Z
 */
        (function (global, factory) {

            "use strict";

            if (true && typeof module.exports === "object") {

                // For CommonJS and CommonJS-like environments where a proper `window`
                // is present, execute the factory and get jQuery.
                // For environments that do not have a `window` with a `document`
                // (such as Node.js), expose a factory as module.exports.
                // This accentuates the need for the creation of a real `window`.
                // e.g. var jQuery = require("jquery")(window);
                // See ticket #14549 for more info.
                module.exports = global.document ?
                    factory(global, true) :
                    function (w) {
                        if (!w.document) {
                            throw new Error("jQuery requires a window with a document");
                        }
                        return factory(w);
                    };
            } else {
                factory(global);
            }

// Pass this if window is not defined yet
        })(typeof window !== "undefined" ? window : this, function (window, noGlobal) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
            "use strict";

            var arr = [];

            var document = window.document;

            var getProto = Object.getPrototypeOf;

            var slice = arr.slice;

            var concat = arr.concat;

            var push = arr.push;

            var indexOf = arr.indexOf;

            var class2type = {};

            var toString = class2type.toString;

            var hasOwn = class2type.hasOwnProperty;

            var fnToString = hasOwn.toString;

            var ObjectFunctionString = fnToString.call(Object);

            var support = {};

            var isFunction = function isFunction(obj) {

                // Support: Chrome <=57, Firefox <=52
                // In some browsers, typeof returns "function" for HTML <object> elements
                // (i.e., `typeof document.createElement( "object" ) === "function"`).
                // We don't want to classify *any* DOM node as a function.
                return typeof obj === "function" && typeof obj.nodeType !== "number";
            };


            var isWindow = function isWindow(obj) {
                return obj != null && obj === obj.window;
            };


            var preservedScriptAttributes = {
                type: true,
                src: true,
                nonce: true,
                noModule: true
            };

            function DOMEval(code, node, doc) {
                doc = doc || document;

                var i, val,
                    script = doc.createElement("script");

                script.text = code;
                if (node) {
                    for (i in preservedScriptAttributes) {

                        // Support: Firefox 64+, Edge 18+
                        // Some browsers don't support the "nonce" property on scripts.
                        // On the other hand, just using `getAttribute` is not enough as
                        // the `nonce` attribute is reset to an empty string whenever it
                        // becomes browsing-context connected.
                        // See https://github.com/whatwg/html/issues/2369
                        // See https://html.spec.whatwg.org/#nonce-attributes
                        // The `node.getAttribute` check was added for the sake of
                        // `jQuery.globalEval` so that it can fake a nonce-containing node
                        // via an object.
                        val = node[i] || node.getAttribute && node.getAttribute(i);
                        if (val) {
                            script.setAttribute(i, val);
                        }
                    }
                }
                doc.head.appendChild(script).parentNode.removeChild(script);
            }


            function toType(obj) {
                if (obj == null) {
                    return obj + "";
                }

                // Support: Android <=2.3 only (functionish RegExp)
                return typeof obj === "object" || typeof obj === "function" ?
                    class2type[toString.call(obj)] || "object" :
                    typeof obj;
            }

            /* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module


            var
                version = "3.4.1",

                // Define a local copy of jQuery
                jQuery = function (selector, context) {

                    // The jQuery object is actually just the init constructor 'enhanced'
                    // Need init if jQuery is called (just allow error to be thrown if not included)
                    return new jQuery.fn.init(selector, context);
                },

                // Support: Android <=4.0 only
                // Make sure we trim BOM and NBSP
                rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

            jQuery.fn = jQuery.prototype = {

                // The current version of jQuery being used
                jquery: version,

                constructor: jQuery,

                // The default length of a jQuery object is 0
                length: 0,

                toArray: function () {
                    return slice.call(this);
                },

                // Get the Nth element in the matched element set OR
                // Get the whole matched element set as a clean array
                get: function (num) {

                    // Return all the elements in a clean array
                    if (num == null) {
                        return slice.call(this);
                    }

                    // Return just the one element from the set
                    return num < 0 ? this[num + this.length] : this[num];
                },

                // Take an array of elements and push it onto the stack
                // (returning the new matched element set)
                pushStack: function (elems) {

                    // Build a new jQuery matched element set
                    var ret = jQuery.merge(this.constructor(), elems);

                    // Add the old object onto the stack (as a reference)
                    ret.prevObject = this;

                    // Return the newly-formed element set
                    return ret;
                },

                // Execute a callback for every element in the matched set.
                each: function (callback) {
                    return jQuery.each(this, callback);
                },

                map: function (callback) {
                    return this.pushStack(jQuery.map(this, function (elem, i) {
                        return callback.call(elem, i, elem);
                    }));
                },

                slice: function () {
                    return this.pushStack(slice.apply(this, arguments));
                },

                first: function () {
                    return this.eq(0);
                },

                last: function () {
                    return this.eq(-1);
                },

                eq: function (i) {
                    var len = this.length,
                        j = +i + (i < 0 ? len : 0);
                    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
                },

                end: function () {
                    return this.prevObject || this.constructor();
                },

                // For internal use only.
                // Behaves like an Array's method, not like a jQuery method.
                push: push,
                sort: arr.sort,
                splice: arr.splice
            };

            jQuery.extend = jQuery.fn.extend = function () {
                var options, name, src, copy, copyIsArray, clone,
                    target = arguments[0] || {},
                    i = 1,
                    length = arguments.length,
                    deep = false;

                // Handle a deep copy situation
                if (typeof target === "boolean") {
                    deep = target;

                    // Skip the boolean and the target
                    target = arguments[i] || {};
                    i++;
                }

                // Handle case when target is a string or something (possible in deep copy)
                if (typeof target !== "object" && !isFunction(target)) {
                    target = {};
                }

                // Extend jQuery itself if only one argument is passed
                if (i === length) {
                    target = this;
                    i--;
                }

                for (; i < length; i++) {

                    // Only deal with non-null/undefined values
                    if ((options = arguments[i]) != null) {

                        // Extend the base object
                        for (name in options) {
                            copy = options[name];

                            // Prevent Object.prototype pollution
                            // Prevent never-ending loop
                            if (name === "__proto__" || target === copy) {
                                continue;
                            }

                            // Recurse if we're merging plain objects or arrays
                            if (deep && copy && (jQuery.isPlainObject(copy) ||
                                (copyIsArray = Array.isArray(copy)))) {
                                src = target[name];

                                // Ensure proper type for the source value
                                if (copyIsArray && !Array.isArray(src)) {
                                    clone = [];
                                } else if (!copyIsArray && !jQuery.isPlainObject(src)) {
                                    clone = {};
                                } else {
                                    clone = src;
                                }
                                copyIsArray = false;

                                // Never move original objects, clone them
                                target[name] = jQuery.extend(deep, clone, copy);

                                // Don't bring in undefined values
                            } else if (copy !== undefined) {
                                target[name] = copy;
                            }
                        }
                    }
                }

                // Return the modified object
                return target;
            };

            jQuery.extend({

                // Unique for each copy of jQuery on the page
                expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),

                // Assume jQuery is ready without the ready module
                isReady: true,

                error: function (msg) {
                    throw new Error(msg);
                },

                noop: function () {
                },

                isPlainObject: function (obj) {
                    var proto, Ctor;

                    // Detect obvious negatives
                    // Use toString instead of jQuery.type to catch host objects
                    if (!obj || toString.call(obj) !== "[object Object]") {
                        return false;
                    }

                    proto = getProto(obj);

                    // Objects with no prototype (e.g., `Object.create( null )`) are plain
                    if (!proto) {
                        return true;
                    }

                    // Objects with prototype are plain iff they were constructed by a global Object function
                    Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
                    return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
                },

                isEmptyObject: function (obj) {
                    var name;

                    for (name in obj) {
                        return false;
                    }
                    return true;
                },

                // Evaluates a script in a global context
                globalEval: function (code, options) {
                    DOMEval(code, {nonce: options && options.nonce});
                },

                each: function (obj, callback) {
                    var length, i = 0;

                    if (isArrayLike(obj)) {
                        length = obj.length;
                        for (; i < length; i++) {
                            if (callback.call(obj[i], i, obj[i]) === false) {
                                break;
                            }
                        }
                    } else {
                        for (i in obj) {
                            if (callback.call(obj[i], i, obj[i]) === false) {
                                break;
                            }
                        }
                    }

                    return obj;
                },

                // Support: Android <=4.0 only
                trim: function (text) {
                    return text == null ?
                        "" :
                        (text + "").replace(rtrim, "");
                },

                // results is for internal usage only
                makeArray: function (arr, results) {
                    var ret = results || [];

                    if (arr != null) {
                        if (isArrayLike(Object(arr))) {
                            jQuery.merge(ret,
                                typeof arr === "string" ?
                                    [arr] : arr
                            );
                        } else {
                            push.call(ret, arr);
                        }
                    }

                    return ret;
                },

                inArray: function (elem, arr, i) {
                    return arr == null ? -1 : indexOf.call(arr, elem, i);
                },

                // Support: Android <=4.0 only, PhantomJS 1 only
                // push.apply(_, arraylike) throws on ancient WebKit
                merge: function (first, second) {
                    var len = +second.length,
                        j = 0,
                        i = first.length;

                    for (; j < len; j++) {
                        first[i++] = second[j];
                    }

                    first.length = i;

                    return first;
                },

                grep: function (elems, callback, invert) {
                    var callbackInverse,
                        matches = [],
                        i = 0,
                        length = elems.length,
                        callbackExpect = !invert;

                    // Go through the array, only saving the items
                    // that pass the validator function
                    for (; i < length; i++) {
                        callbackInverse = !callback(elems[i], i);
                        if (callbackInverse !== callbackExpect) {
                            matches.push(elems[i]);
                        }
                    }

                    return matches;
                },

                // arg is for internal usage only
                map: function (elems, callback, arg) {
                    var length, value,
                        i = 0,
                        ret = [];

                    // Go through the array, translating each of the items to their new values
                    if (isArrayLike(elems)) {
                        length = elems.length;
                        for (; i < length; i++) {
                            value = callback(elems[i], i, arg);

                            if (value != null) {
                                ret.push(value);
                            }
                        }

                        // Go through every key on the object,
                    } else {
                        for (i in elems) {
                            value = callback(elems[i], i, arg);

                            if (value != null) {
                                ret.push(value);
                            }
                        }
                    }

                    // Flatten any nested arrays
                    return concat.apply([], ret);
                },

                // A global GUID counter for objects
                guid: 1,

                // jQuery.support is not used in Core but other projects attach their
                // properties to it so it needs to exist.
                support: support
            });

            if (typeof Symbol === "function") {
                jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
            }

// Populate the class2type map
            jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
                function (i, name) {
                    class2type["[object " + name + "]"] = name.toLowerCase();
                });

            function isArrayLike(obj) {

                // Support: real iOS 8.2 only (not reproducible in simulator)
                // `in` check used to prevent JIT error (gh-2145)
                // hasOwn isn't used here due to false negatives
                // regarding Nodelist length in IE
                var length = !!obj && "length" in obj && obj.length,
                    type = toType(obj);

                if (isFunction(obj) || isWindow(obj)) {
                    return false;
                }

                return type === "array" || length === 0 ||
                    typeof length === "number" && length > 0 && (length - 1) in obj;
            }

            var Sizzle =
                /*!
 * Sizzle CSS Selector Engine v2.3.4
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2019-04-08
 */
                (function (window) {

                    var i,
                        support,
                        Expr,
                        getText,
                        isXML,
                        tokenize,
                        compile,
                        select,
                        outermostContext,
                        sortInput,
                        hasDuplicate,

                        // Local document vars
                        setDocument,
                        document,
                        docElem,
                        documentIsHTML,
                        rbuggyQSA,
                        rbuggyMatches,
                        matches,
                        contains,

                        // Instance-specific data
                        expando = "sizzle" + 1 * new Date(),
                        preferredDoc = window.document,
                        dirruns = 0,
                        done = 0,
                        classCache = createCache(),
                        tokenCache = createCache(),
                        compilerCache = createCache(),
                        nonnativeSelectorCache = createCache(),
                        sortOrder = function (a, b) {
                            if (a === b) {
                                hasDuplicate = true;
                            }
                            return 0;
                        },

                        // Instance methods
                        hasOwn = ({}).hasOwnProperty,
                        arr = [],
                        pop = arr.pop,
                        push_native = arr.push,
                        push = arr.push,
                        slice = arr.slice,
                        // Use a stripped-down indexOf as it's faster than native
                        // https://jsperf.com/thor-indexof-vs-for/5
                        indexOf = function (list, elem) {
                            var i = 0,
                                len = list.length;
                            for (; i < len; i++) {
                                if (list[i] === elem) {
                                    return i;
                                }
                            }
                            return -1;
                        },

                        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

                        // Regular expressions

                        // http://www.w3.org/TR/css3-selectors/#whitespace
                        whitespace = "[\\x20\\t\\r\\n\\f]",

                        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
                        identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

                        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
                        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
                            // Operator (capture 2)
                            "*([*^$|!~]?=)" + whitespace +
                            // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
                            "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
                            "*\\]",

                        pseudos = ":(" + identifier + ")(?:\\((" +
                            // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
                            // 1. quoted (capture 3; capture 4 or capture 5)
                            "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
                            // 2. simple (capture 6)
                            "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
                            // 3. anything else (capture 2)
                            ".*" +
                            ")\\)|)",

                        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
                        rwhitespace = new RegExp(whitespace + "+", "g"),
                        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),

                        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
                        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
                        rdescend = new RegExp(whitespace + "|>"),

                        rpseudo = new RegExp(pseudos),
                        ridentifier = new RegExp("^" + identifier + "$"),

                        matchExpr = {
                            "ID": new RegExp("^#(" + identifier + ")"),
                            "CLASS": new RegExp("^\\.(" + identifier + ")"),
                            "TAG": new RegExp("^(" + identifier + "|[*])"),
                            "ATTR": new RegExp("^" + attributes),
                            "PSEUDO": new RegExp("^" + pseudos),
                            "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
                                "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
                                "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                            "bool": new RegExp("^(?:" + booleans + ")$", "i"),
                            // For use in libraries implementing .is()
                            // We use this for POS matching in `select`
                            "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                                whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
                        },

                        rhtml = /HTML$/i,
                        rinputs = /^(?:input|select|textarea|button)$/i,
                        rheader = /^h\d$/i,

                        rnative = /^[^{]+\{\s*\[native \w/,

                        // Easily-parseable/retrievable ID or TAG or CLASS selectors
                        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

                        rsibling = /[+~]/,

                        // CSS escapes
                        // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
                        runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
                        funescape = function (_, escaped, escapedWhitespace) {
                            var high = "0x" + escaped - 0x10000;
                            // NaN means non-codepoint
                            // Support: Firefox<24
                            // Workaround erroneous numeric interpretation of +"0x"
                            return high !== high || escapedWhitespace ?
                                escaped :
                                high < 0 ?
                                    // BMP codepoint
                                    String.fromCharCode(high + 0x10000) :
                                    // Supplemental Plane codepoint (surrogate pair)
                                    String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
                        },

                        // CSS string/identifier serialization
                        // https://drafts.csswg.org/cssom/#common-serializing-idioms
                        rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                        fcssescape = function (ch, asCodePoint) {
                            if (asCodePoint) {

                                // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                                if (ch === "\0") {
                                    return "\uFFFD";
                                }

                                // Control characters and (dependent upon position) numbers get escaped as code points
                                return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
                            }

                            // Other potentially-special ASCII characters get backslash-escaped
                            return "\\" + ch;
                        },

                        // Used for iframes
                        // See setDocument()
                        // Removing the function wrapper causes a "Permission Denied"
                        // error in IE
                        unloadHandler = function () {
                            setDocument();
                        },

                        inDisabledFieldset = addCombinator(
                            function (elem) {
                                return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
                            },
                            {dir: "parentNode", next: "legend"}
                        );

// Optimize for push.apply( _, NodeList )
                    try {
                        push.apply(
                            (arr = slice.call(preferredDoc.childNodes)),
                            preferredDoc.childNodes
                        );
                        // Support: Android<4.0
                        // Detect silently failing push.apply
                        arr[preferredDoc.childNodes.length].nodeType;
                    } catch (e) {
                        push = {
                            apply: arr.length ?

                                // Leverage slice if possible
                                function (target, els) {
                                    push_native.apply(target, slice.call(els));
                                } :

                                // Support: IE<9
                                // Otherwise append directly
                                function (target, els) {
                                    var j = target.length,
                                        i = 0;
                                    // Can't trust NodeList.length
                                    while ((target[j++] = els[i++])) {
                                    }
                                    target.length = j - 1;
                                }
                        };
                    }

                    function Sizzle(selector, context, results, seed) {
                        var m, i, elem, nid, match, groups, newSelector,
                            newContext = context && context.ownerDocument,

                            // nodeType defaults to 9, since context defaults to document
                            nodeType = context ? context.nodeType : 9;

                        results = results || [];

                        // Return early from calls with invalid selector or context
                        if (typeof selector !== "string" || !selector ||
                            nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {

                            return results;
                        }

                        // Try to shortcut find operations (as opposed to filters) in HTML documents
                        if (!seed) {

                            if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
                                setDocument(context);
                            }
                            context = context || document;

                            if (documentIsHTML) {

                                // If the selector is sufficiently simple, try using a "get*By*" DOM method
                                // (excepting DocumentFragment context, where the methods don't exist)
                                if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {

                                    // ID selector
                                    if ((m = match[1])) {

                                        // Document context
                                        if (nodeType === 9) {
                                            if ((elem = context.getElementById(m))) {

                                                // Support: IE, Opera, Webkit
                                                // TODO: identify versions
                                                // getElementById can match elements by name instead of ID
                                                if (elem.id === m) {
                                                    results.push(elem);
                                                    return results;
                                                }
                                            } else {
                                                return results;
                                            }

                                            // Element context
                                        } else {

                                            // Support: IE, Opera, Webkit
                                            // TODO: identify versions
                                            // getElementById can match elements by name instead of ID
                                            if (newContext && (elem = newContext.getElementById(m)) &&
                                                contains(context, elem) &&
                                                elem.id === m) {

                                                results.push(elem);
                                                return results;
                                            }
                                        }

                                        // Type selector
                                    } else if (match[2]) {
                                        push.apply(results, context.getElementsByTagName(selector));
                                        return results;

                                        // Class selector
                                    } else if ((m = match[3]) && support.getElementsByClassName &&
                                        context.getElementsByClassName) {

                                        push.apply(results, context.getElementsByClassName(m));
                                        return results;
                                    }
                                }

                                // Take advantage of querySelectorAll
                                if (support.qsa &&
                                    !nonnativeSelectorCache[selector + " "] &&
                                    (!rbuggyQSA || !rbuggyQSA.test(selector)) &&

                                    // Support: IE 8 only
                                    // Exclude object elements
                                    (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {

                                    newSelector = selector;
                                    newContext = context;

                                    // qSA considers elements outside a scoping root when evaluating child or
                                    // descendant combinators, which is not what we want.
                                    // In such cases, we work around the behavior by prefixing every selector in the
                                    // list with an ID selector referencing the scope context.
                                    // Thanks to Andrew Dupont for this technique.
                                    if (nodeType === 1 && rdescend.test(selector)) {

                                        // Capture the context ID, setting it first if necessary
                                        if ((nid = context.getAttribute("id"))) {
                                            nid = nid.replace(rcssescape, fcssescape);
                                        } else {
                                            context.setAttribute("id", (nid = expando));
                                        }

                                        // Prefix every selector in the list
                                        groups = tokenize(selector);
                                        i = groups.length;
                                        while (i--) {
                                            groups[i] = "#" + nid + " " + toSelector(groups[i]);
                                        }
                                        newSelector = groups.join(",");

                                        // Expand context for sibling selectors
                                        newContext = rsibling.test(selector) && testContext(context.parentNode) ||
                                            context;
                                    }

                                    try {
                                        push.apply(results,
                                            newContext.querySelectorAll(newSelector)
                                        );
                                        return results;
                                    } catch (qsaError) {
                                        nonnativeSelectorCache(selector, true);
                                    } finally {
                                        if (nid === expando) {
                                            context.removeAttribute("id");
                                        }
                                    }
                                }
                            }
                        }

                        // All others
                        return select(selector.replace(rtrim, "$1"), context, results, seed);
                    }

                    /**
                     * Create key-value caches of limited size
                     * @returns {function(string, object)} Returns the Object data after storing it on itself with
                     *    property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
                     *    deleting the oldest entry
                     */
                    function createCache() {
                        var keys = [];

                        function cache(key, value) {
                            // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                            if (keys.push(key + " ") > Expr.cacheLength) {
                                // Only keep the most recent entries
                                delete cache[keys.shift()];
                            }
                            return (cache[key + " "] = value);
                        }

                        return cache;
                    }

                    /**
                     * Mark a function for special use by Sizzle
                     * @param {Function} fn The function to mark
                     */
                    function markFunction(fn) {
                        fn[expando] = true;
                        return fn;
                    }

                    /**
                     * Support testing using an element
                     * @param {Function} fn Passed the created element and returns a boolean result
                     */
                    function assert(fn) {
                        var el = document.createElement("fieldset");

                        try {
                            return !!fn(el);
                        } catch (e) {
                            return false;
                        } finally {
                            // Remove from its parent by default
                            if (el.parentNode) {
                                el.parentNode.removeChild(el);
                            }
                            // release memory in IE
                            el = null;
                        }
                    }

                    /**
                     * Adds the same handler for all of the specified attrs
                     * @param {String} attrs Pipe-separated list of attributes
                     * @param {Function} handler The method that will be applied
                     */
                    function addHandle(attrs, handler) {
                        var arr = attrs.split("|"),
                            i = arr.length;

                        while (i--) {
                            Expr.attrHandle[arr[i]] = handler;
                        }
                    }

                    /**
                     * Checks document order of two siblings
                     * @param {Element} a
                     * @param {Element} b
                     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
                     */
                    function siblingCheck(a, b) {
                        var cur = b && a,
                            diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
                                a.sourceIndex - b.sourceIndex;

                        // Use IE sourceIndex if available on both nodes
                        if (diff) {
                            return diff;
                        }

                        // Check if b follows a
                        if (cur) {
                            while ((cur = cur.nextSibling)) {
                                if (cur === b) {
                                    return -1;
                                }
                            }
                        }

                        return a ? 1 : -1;
                    }

                    /**
                     * Returns a function to use in pseudos for input types
                     * @param {String} type
                     */
                    function createInputPseudo(type) {
                        return function (elem) {
                            var name = elem.nodeName.toLowerCase();
                            return name === "input" && elem.type === type;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for buttons
                     * @param {String} type
                     */
                    function createButtonPseudo(type) {
                        return function (elem) {
                            var name = elem.nodeName.toLowerCase();
                            return (name === "input" || name === "button") && elem.type === type;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for :enabled/:disabled
                     * @param {Boolean} disabled true for :disabled; false for :enabled
                     */
                    function createDisabledPseudo(disabled) {

                        // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
                        return function (elem) {

                            // Only certain elements can match :enabled or :disabled
                            // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                            // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                            if ("form" in elem) {

                                // Check for inherited disabledness on relevant non-disabled elements:
                                // * listed form-associated elements in a disabled fieldset
                                //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                                //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                                // * option elements in a disabled optgroup
                                //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                                // All such elements have a "form" property.
                                if (elem.parentNode && elem.disabled === false) {

                                    // Option elements defer to a parent optgroup if present
                                    if ("label" in elem) {
                                        if ("label" in elem.parentNode) {
                                            return elem.parentNode.disabled === disabled;
                                        } else {
                                            return elem.disabled === disabled;
                                        }
                                    }

                                    // Support: IE 6 - 11
                                    // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                                    return elem.isDisabled === disabled ||

                                        // Where there is no isDisabled, check manually
                                        /* jshint -W018 */
                                        elem.isDisabled !== !disabled &&
                                        inDisabledFieldset(elem) === disabled;
                                }

                                return elem.disabled === disabled;

                                // Try to winnow out elements that can't be disabled before trusting the disabled property.
                                // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                                // even exist on them, let alone have a boolean value.
                            } else if ("label" in elem) {
                                return elem.disabled === disabled;
                            }

                            // Remaining elements are neither :enabled nor :disabled
                            return false;
                        };
                    }

                    /**
                     * Returns a function to use in pseudos for positionals
                     * @param {Function} fn
                     */
                    function createPositionalPseudo(fn) {
                        return markFunction(function (argument) {
                            argument = +argument;
                            return markFunction(function (seed, matches) {
                                var j,
                                    matchIndexes = fn([], seed.length, argument),
                                    i = matchIndexes.length;

                                // Match elements found at the specified indexes
                                while (i--) {
                                    if (seed[(j = matchIndexes[i])]) {
                                        seed[j] = !(matches[j] = seed[j]);
                                    }
                                }
                            });
                        });
                    }

                    /**
                     * Checks a node for validity as a Sizzle context
                     * @param {Element|Object=} context
                     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
                     */
                    function testContext(context) {
                        return context && typeof context.getElementsByTagName !== "undefined" && context;
                    }

// Expose support vars for convenience
                    support = Sizzle.support = {};

                    /**
                     * Detects XML nodes
                     * @param {Element|Object} elem An element or a document
                     * @returns {Boolean} True iff elem is a non-HTML XML node
                     */
                    isXML = Sizzle.isXML = function (elem) {
                        var namespace = elem.namespaceURI,
                            docElem = (elem.ownerDocument || elem).documentElement;

                        // Support: IE <=8
                        // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
                        // https://bugs.jquery.com/ticket/4833
                        return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");
                    };

                    /**
                     * Sets document-related variables once based on the current document
                     * @param {Element|Object} [doc] An element or document object to use to set the document
                     * @returns {Object} Returns the current document
                     */
                    setDocument = Sizzle.setDocument = function (node) {
                        var hasCompare, subWindow,
                            doc = node ? node.ownerDocument || node : preferredDoc;

                        // Return early if doc is invalid or already selected
                        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
                            return document;
                        }

                        // Update global variables
                        document = doc;
                        docElem = document.documentElement;
                        documentIsHTML = !isXML(document);

                        // Support: IE 9-11, Edge
                        // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
                        if (preferredDoc !== document &&
                            (subWindow = document.defaultView) && subWindow.top !== subWindow) {

                            // Support: IE 11, Edge
                            if (subWindow.addEventListener) {
                                subWindow.addEventListener("unload", unloadHandler, false);

                                // Support: IE 9 - 10 only
                            } else if (subWindow.attachEvent) {
                                subWindow.attachEvent("onunload", unloadHandler);
                            }
                        }

                        /* Attributes
	---------------------------------------------------------------------- */

                        // Support: IE<8
                        // Verify that getAttribute really returns attributes and not properties
                        // (excepting IE8 booleans)
                        support.attributes = assert(function (el) {
                            el.className = "i";
                            return !el.getAttribute("className");
                        });

                        /* getElement(s)By*
	---------------------------------------------------------------------- */

                        // Check if getElementsByTagName("*") returns only elements
                        support.getElementsByTagName = assert(function (el) {
                            el.appendChild(document.createComment(""));
                            return !el.getElementsByTagName("*").length;
                        });

                        // Support: IE<9
                        support.getElementsByClassName = rnative.test(document.getElementsByClassName);

                        // Support: IE<10
                        // Check if getElementById returns elements by name
                        // The broken getElementById methods don't pick up programmatically-set names,
                        // so use a roundabout getElementsByName test
                        support.getById = assert(function (el) {
                            docElem.appendChild(el).id = expando;
                            return !document.getElementsByName || !document.getElementsByName(expando).length;
                        });

                        // ID filter and find
                        if (support.getById) {
                            Expr.filter["ID"] = function (id) {
                                var attrId = id.replace(runescape, funescape);
                                return function (elem) {
                                    return elem.getAttribute("id") === attrId;
                                };
                            };
                            Expr.find["ID"] = function (id, context) {
                                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                                    var elem = context.getElementById(id);
                                    return elem ? [elem] : [];
                                }
                            };
                        } else {
                            Expr.filter["ID"] = function (id) {
                                var attrId = id.replace(runescape, funescape);
                                return function (elem) {
                                    var node = typeof elem.getAttributeNode !== "undefined" &&
                                        elem.getAttributeNode("id");
                                    return node && node.value === attrId;
                                };
                            };

                            // Support: IE 6 - 7 only
                            // getElementById is not reliable as a find shortcut
                            Expr.find["ID"] = function (id, context) {
                                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                                    var node, i, elems,
                                        elem = context.getElementById(id);

                                    if (elem) {

                                        // Verify the id attribute
                                        node = elem.getAttributeNode("id");
                                        if (node && node.value === id) {
                                            return [elem];
                                        }

                                        // Fall back on getElementsByName
                                        elems = context.getElementsByName(id);
                                        i = 0;
                                        while ((elem = elems[i++])) {
                                            node = elem.getAttributeNode("id");
                                            if (node && node.value === id) {
                                                return [elem];
                                            }
                                        }
                                    }

                                    return [];
                                }
                            };
                        }

                        // Tag
                        Expr.find["TAG"] = support.getElementsByTagName ?
                            function (tag, context) {
                                if (typeof context.getElementsByTagName !== "undefined") {
                                    return context.getElementsByTagName(tag);

                                    // DocumentFragment nodes don't have gEBTN
                                } else if (support.qsa) {
                                    return context.querySelectorAll(tag);
                                }
                            } :

                            function (tag, context) {
                                var elem,
                                    tmp = [],
                                    i = 0,
                                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                                    results = context.getElementsByTagName(tag);

                                // Filter out possible comments
                                if (tag === "*") {
                                    while ((elem = results[i++])) {
                                        if (elem.nodeType === 1) {
                                            tmp.push(elem);
                                        }
                                    }

                                    return tmp;
                                }
                                return results;
                            };

                        // Class
                        Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {
                            if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
                                return context.getElementsByClassName(className);
                            }
                        };

                        /* QSA/matchesSelector
	---------------------------------------------------------------------- */

                        // QSA and matchesSelector support

                        // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
                        rbuggyMatches = [];

                        // qSa(:focus) reports false when true (Chrome 21)
                        // We allow this because of a bug in IE8/9 that throws an error
                        // whenever `document.activeElement` is accessed on an iframe
                        // So, we allow :focus to pass through QSA all the time to avoid the IE error
                        // See https://bugs.jquery.com/ticket/13378
                        rbuggyQSA = [];

                        if ((support.qsa = rnative.test(document.querySelectorAll))) {
                            // Build QSA regex
                            // Regex strategy adopted from Diego Perini
                            assert(function (el) {
                                // Select is set to empty string on purpose
                                // This is to test IE's treatment of not explicitly
                                // setting a boolean content attribute,
                                // since its presence should be enough
                                // https://bugs.jquery.com/ticket/12359
                                docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" +
                                    "<select id='" + expando + "-\r\\' msallowcapture=''>" +
                                    "<option selected=''></option></select>";

                                // Support: IE8, Opera 11-12.16
                                // Nothing should be selected when empty strings follow ^= or $= or *=
                                // The test attribute must be unknown in Opera but "safe" for WinRT
                                // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                                if (el.querySelectorAll("[msallowcapture^='']").length) {
                                    rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
                                }

                                // Support: IE8
                                // Boolean attributes and "value" are not treated correctly
                                if (!el.querySelectorAll("[selected]").length) {
                                    rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
                                }

                                // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                                if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
                                    rbuggyQSA.push("~=");
                                }

                                // Webkit/Opera - :checked should return selected option elements
                                // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                // IE8 throws error here and will not see later tests
                                if (!el.querySelectorAll(":checked").length) {
                                    rbuggyQSA.push(":checked");
                                }

                                // Support: Safari 8+, iOS 8+
                                // https://bugs.webkit.org/show_bug.cgi?id=136851
                                // In-page `selector#id sibling-combinator selector` fails
                                if (!el.querySelectorAll("a#" + expando + "+*").length) {
                                    rbuggyQSA.push(".#.+[+~]");
                                }
                            });

                            assert(function (el) {
                                el.innerHTML = "<a href='' disabled='disabled'></a>" +
                                    "<select disabled='disabled'><option/></select>";

                                // Support: Windows 8 Native Apps
                                // The type and name attributes are restricted during .innerHTML assignment
                                var input = document.createElement("input");
                                input.setAttribute("type", "hidden");
                                el.appendChild(input).setAttribute("name", "D");

                                // Support: IE8
                                // Enforce case-sensitivity of name attribute
                                if (el.querySelectorAll("[name=d]").length) {
                                    rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
                                }

                                // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                                // IE8 throws error here and will not see later tests
                                if (el.querySelectorAll(":enabled").length !== 2) {
                                    rbuggyQSA.push(":enabled", ":disabled");
                                }

                                // Support: IE9-11+
                                // IE's :disabled selector does not pick up the children of disabled fieldsets
                                docElem.appendChild(el).disabled = true;
                                if (el.querySelectorAll(":disabled").length !== 2) {
                                    rbuggyQSA.push(":enabled", ":disabled");
                                }

                                // Opera 10-11 does not throw on post-comma invalid pseudos
                                el.querySelectorAll("*,:x");
                                rbuggyQSA.push(",.*:");
                            });
                        }

                        if ((support.matchesSelector = rnative.test((matches = docElem.matches ||
                            docElem.webkitMatchesSelector ||
                            docElem.mozMatchesSelector ||
                            docElem.oMatchesSelector ||
                            docElem.msMatchesSelector)))) {

                            assert(function (el) {
                                // Check to see if it's possible to do matchesSelector
                                // on a disconnected node (IE 9)
                                support.disconnectedMatch = matches.call(el, "*");

                                // This should fail with an exception
                                // Gecko does not error, returns false instead
                                matches.call(el, "[s!='']:x");
                                rbuggyMatches.push("!=", pseudos);
                            });
                        }

                        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
                        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));

                        /* Contains
	---------------------------------------------------------------------- */
                        hasCompare = rnative.test(docElem.compareDocumentPosition);

                        // Element contains another
                        // Purposefully self-exclusive
                        // As in, an element does not contain itself
                        contains = hasCompare || rnative.test(docElem.contains) ?
                            function (a, b) {
                                var adown = a.nodeType === 9 ? a.documentElement : a,
                                    bup = b && b.parentNode;
                                return a === bup || !!(bup && bup.nodeType === 1 && (
                                    adown.contains ?
                                        adown.contains(bup) :
                                        a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16
                                ));
                            } :
                            function (a, b) {
                                if (b) {
                                    while ((b = b.parentNode)) {
                                        if (b === a) {
                                            return true;
                                        }
                                    }
                                }
                                return false;
                            };

                        /* Sorting
	---------------------------------------------------------------------- */

                        // Document order sorting
                        sortOrder = hasCompare ?
                            function (a, b) {

                                // Flag for duplicate removal
                                if (a === b) {
                                    hasDuplicate = true;
                                    return 0;
                                }

                                // Sort on method existence if only one input has compareDocumentPosition
                                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                                if (compare) {
                                    return compare;
                                }

                                // Calculate position if both inputs belong to the same document
                                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ?
                                    a.compareDocumentPosition(b) :

                                    // Otherwise we know they are disconnected
                                    1;

                                // Disconnected nodes
                                if (compare & 1 ||
                                    (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {

                                    // Choose the first element that is related to our preferred document
                                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
                                        return -1;
                                    }
                                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
                                        return 1;
                                    }

                                    // Maintain original order
                                    return sortInput ?
                                        (indexOf(sortInput, a) - indexOf(sortInput, b)) :
                                        0;
                                }

                                return compare & 4 ? -1 : 1;
                            } :
                            function (a, b) {
                                // Exit early if the nodes are identical
                                if (a === b) {
                                    hasDuplicate = true;
                                    return 0;
                                }

                                var cur,
                                    i = 0,
                                    aup = a.parentNode,
                                    bup = b.parentNode,
                                    ap = [a],
                                    bp = [b];

                                // Parentless nodes are either documents or disconnected
                                if (!aup || !bup) {
                                    return a === document ? -1 :
                                        b === document ? 1 :
                                            aup ? -1 :
                                                bup ? 1 :
                                                    sortInput ?
                                                        (indexOf(sortInput, a) - indexOf(sortInput, b)) :
                                                        0;

                                    // If the nodes are siblings, we can do a quick check
                                } else if (aup === bup) {
                                    return siblingCheck(a, b);
                                }

                                // Otherwise we need full lists of their ancestors for comparison
                                cur = a;
                                while ((cur = cur.parentNode)) {
                                    ap.unshift(cur);
                                }
                                cur = b;
                                while ((cur = cur.parentNode)) {
                                    bp.unshift(cur);
                                }

                                // Walk down the tree looking for a discrepancy
                                while (ap[i] === bp[i]) {
                                    i++;
                                }

                                return i ?
                                    // Do a sibling check if the nodes have a common ancestor
                                    siblingCheck(ap[i], bp[i]) :

                                    // Otherwise nodes in our document sort first
                                    ap[i] === preferredDoc ? -1 :
                                        bp[i] === preferredDoc ? 1 :
                                            0;
                            };

                        return document;
                    };

                    Sizzle.matches = function (expr, elements) {
                        return Sizzle(expr, null, null, elements);
                    };

                    Sizzle.matchesSelector = function (elem, expr) {
                        // Set document vars if needed
                        if ((elem.ownerDocument || elem) !== document) {
                            setDocument(elem);
                        }

                        if (support.matchesSelector && documentIsHTML &&
                            !nonnativeSelectorCache[expr + " "] &&
                            (!rbuggyMatches || !rbuggyMatches.test(expr)) &&
                            (!rbuggyQSA || !rbuggyQSA.test(expr))) {

                            try {
                                var ret = matches.call(elem, expr);

                                // IE 9's matchesSelector returns false on disconnected nodes
                                if (ret || support.disconnectedMatch ||
                                    // As well, disconnected nodes are said to be in a document
                                    // fragment in IE 9
                                    elem.document && elem.document.nodeType !== 11) {
                                    return ret;
                                }
                            } catch (e) {
                                nonnativeSelectorCache(expr, true);
                            }
                        }

                        return Sizzle(expr, document, null, [elem]).length > 0;
                    };

                    Sizzle.contains = function (context, elem) {
                        // Set document vars if needed
                        if ((context.ownerDocument || context) !== document) {
                            setDocument(context);
                        }
                        return contains(context, elem);
                    };

                    Sizzle.attr = function (elem, name) {
                        // Set document vars if needed
                        if ((elem.ownerDocument || elem) !== document) {
                            setDocument(elem);
                        }

                        var fn = Expr.attrHandle[name.toLowerCase()],
                            // Don't get fooled by Object.prototype properties (jQuery #13807)
                            val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ?
                                fn(elem, name, !documentIsHTML) :
                                undefined;

                        return val !== undefined ?
                            val :
                            support.attributes || !documentIsHTML ?
                                elem.getAttribute(name) :
                                (val = elem.getAttributeNode(name)) && val.specified ?
                                    val.value :
                                    null;
                    };

                    Sizzle.escape = function (sel) {
                        return (sel + "").replace(rcssescape, fcssescape);
                    };

                    Sizzle.error = function (msg) {
                        throw new Error("Syntax error, unrecognized expression: " + msg);
                    };

                    /**
                     * Document sorting and removing duplicates
                     * @param {ArrayLike} results
                     */
                    Sizzle.uniqueSort = function (results) {
                        var elem,
                            duplicates = [],
                            j = 0,
                            i = 0;

                        // Unless we *know* we can detect duplicates, assume their presence
                        hasDuplicate = !support.detectDuplicates;
                        sortInput = !support.sortStable && results.slice(0);
                        results.sort(sortOrder);

                        if (hasDuplicate) {
                            while ((elem = results[i++])) {
                                if (elem === results[i]) {
                                    j = duplicates.push(i);
                                }
                            }
                            while (j--) {
                                results.splice(duplicates[j], 1);
                            }
                        }

                        // Clear input after sorting to release objects
                        // See https://github.com/jquery/sizzle/pull/225
                        sortInput = null;

                        return results;
                    };

                    /**
                     * Utility function for retrieving the text value of an array of DOM nodes
                     * @param {Array|Element} elem
                     */
                    getText = Sizzle.getText = function (elem) {
                        var node,
                            ret = "",
                            i = 0,
                            nodeType = elem.nodeType;

                        if (!nodeType) {
                            // If no nodeType, this is expected to be an array
                            while ((node = elem[i++])) {
                                // Do not traverse comment nodes
                                ret += getText(node);
                            }
                        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                            // Use textContent for elements
                            // innerText usage removed for consistency of new lines (jQuery #11153)
                            if (typeof elem.textContent === "string") {
                                return elem.textContent;
                            } else {
                                // Traverse its children
                                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                                    ret += getText(elem);
                                }
                            }
                        } else if (nodeType === 3 || nodeType === 4) {
                            return elem.nodeValue;
                        }
                        // Do not include comment or processing instruction nodes

                        return ret;
                    };

                    Expr = Sizzle.selectors = {

                        // Can be adjusted by the user
                        cacheLength: 50,

                        createPseudo: markFunction,

                        match: matchExpr,

                        attrHandle: {},

                        find: {},

                        relative: {
                            ">": {dir: "parentNode", first: true},
                            " ": {dir: "parentNode"},
                            "+": {dir: "previousSibling", first: true},
                            "~": {dir: "previousSibling"}
                        },

                        preFilter: {
                            "ATTR": function (match) {
                                match[1] = match[1].replace(runescape, funescape);

                                // Move the given value to match[3] whether quoted or unquoted
                                match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);

                                if (match[2] === "~=") {
                                    match[3] = " " + match[3] + " ";
                                }

                                return match.slice(0, 4);
                            },

                            "CHILD": function (match) {
                                /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
                                match[1] = match[1].toLowerCase();

                                if (match[1].slice(0, 3) === "nth") {
                                    // nth-* requires argument
                                    if (!match[3]) {
                                        Sizzle.error(match[0]);
                                    }

                                    // numeric x and y parameters for Expr.filter.CHILD
                                    // remember that false/true cast respectively to 0/1
                                    match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                                    match[5] = +((match[7] + match[8]) || match[3] === "odd");

                                    // other types prohibit arguments
                                } else if (match[3]) {
                                    Sizzle.error(match[0]);
                                }

                                return match;
                            },

                            "PSEUDO": function (match) {
                                var excess,
                                    unquoted = !match[6] && match[2];

                                if (matchExpr["CHILD"].test(match[0])) {
                                    return null;
                                }

                                // Accept quoted arguments as-is
                                if (match[3]) {
                                    match[2] = match[4] || match[5] || "";

                                    // Strip excess characters from unquoted arguments
                                } else if (unquoted && rpseudo.test(unquoted) &&
                                    // Get excess from tokenize (recursively)
                                    (excess = tokenize(unquoted, true)) &&
                                    // advance to the next closing parenthesis
                                    (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {

                                    // excess is a negative index
                                    match[0] = match[0].slice(0, excess);
                                    match[2] = unquoted.slice(0, excess);
                                }

                                // Return only captures needed by the pseudo filter method (type and argument)
                                return match.slice(0, 3);
                            }
                        },

                        filter: {

                            "TAG": function (nodeNameSelector) {
                                var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                                return nodeNameSelector === "*" ?
                                    function () {
                                        return true;
                                    } :
                                    function (elem) {
                                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                                    };
                            },

                            "CLASS": function (className) {
                                var pattern = classCache[className + " "];

                                return pattern ||
                                    (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) &&
                                    classCache(className, function (elem) {
                                        return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
                                    });
                            },

                            "ATTR": function (name, operator, check) {
                                return function (elem) {
                                    var result = Sizzle.attr(elem, name);

                                    if (result == null) {
                                        return operator === "!=";
                                    }
                                    if (!operator) {
                                        return true;
                                    }

                                    result += "";

                                    return operator === "=" ? result === check :
                                        operator === "!=" ? result !== check :
                                            operator === "^=" ? check && result.indexOf(check) === 0 :
                                                operator === "*=" ? check && result.indexOf(check) > -1 :
                                                    operator === "$=" ? check && result.slice(-check.length) === check :
                                                        operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 :
                                                            operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" :
                                                                false;
                                };
                            },

                            "CHILD": function (type, what, argument, first, last) {
                                var simple = type.slice(0, 3) !== "nth",
                                    forward = type.slice(-4) !== "last",
                                    ofType = what === "of-type";

                                return first === 1 && last === 0 ?

                                    // Shortcut for :nth-*(n)
                                    function (elem) {
                                        return !!elem.parentNode;
                                    } :

                                    function (elem, context, xml) {
                                        var cache, uniqueCache, outerCache, node, nodeIndex, start,
                                            dir = simple !== forward ? "nextSibling" : "previousSibling",
                                            parent = elem.parentNode,
                                            name = ofType && elem.nodeName.toLowerCase(),
                                            useCache = !xml && !ofType,
                                            diff = false;

                                        if (parent) {

                                            // :(first|last|only)-(child|of-type)
                                            if (simple) {
                                                while (dir) {
                                                    node = elem;
                                                    while ((node = node[dir])) {
                                                        if (ofType ?
                                                            node.nodeName.toLowerCase() === name :
                                                            node.nodeType === 1) {

                                                            return false;
                                                        }
                                                    }
                                                    // Reverse direction for :only-* (if we haven't yet done so)
                                                    start = dir = type === "only" && !start && "nextSibling";
                                                }
                                                return true;
                                            }

                                            start = [forward ? parent.firstChild : parent.lastChild];

                                            // non-xml :nth-child(...) stores cache data on `parent`
                                            if (forward && useCache) {

                                                // Seek `elem` from a previously-cached index

                                                // ...in a gzip-friendly way
                                                node = parent;
                                                outerCache = node[expando] || (node[expando] = {});

                                                // Support: IE <9 only
                                                // Defend against cloned attroperties (jQuery gh-1709)
                                                uniqueCache = outerCache[node.uniqueID] ||
                                                    (outerCache[node.uniqueID] = {});

                                                cache = uniqueCache[type] || [];
                                                nodeIndex = cache[0] === dirruns && cache[1];
                                                diff = nodeIndex && cache[2];
                                                node = nodeIndex && parent.childNodes[nodeIndex];

                                                while ((node = ++nodeIndex && node && node[dir] ||

                                                    // Fallback to seeking `elem` from the start
                                                    (diff = nodeIndex = 0) || start.pop())) {

                                                    // When found, cache indexes on `parent` and break
                                                    if (node.nodeType === 1 && ++diff && node === elem) {
                                                        uniqueCache[type] = [dirruns, nodeIndex, diff];
                                                        break;
                                                    }
                                                }

                                            } else {
                                                // Use previously-cached element index if available
                                                if (useCache) {
                                                    // ...in a gzip-friendly way
                                                    node = elem;
                                                    outerCache = node[expando] || (node[expando] = {});

                                                    // Support: IE <9 only
                                                    // Defend against cloned attroperties (jQuery gh-1709)
                                                    uniqueCache = outerCache[node.uniqueID] ||
                                                        (outerCache[node.uniqueID] = {});

                                                    cache = uniqueCache[type] || [];
                                                    nodeIndex = cache[0] === dirruns && cache[1];
                                                    diff = nodeIndex;
                                                }

                                                // xml :nth-child(...)
                                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                                if (diff === false) {
                                                    // Use the same loop as above to seek `elem` from the start
                                                    while ((node = ++nodeIndex && node && node[dir] ||
                                                        (diff = nodeIndex = 0) || start.pop())) {

                                                        if ((ofType ?
                                                            node.nodeName.toLowerCase() === name :
                                                            node.nodeType === 1) &&
                                                            ++diff) {

                                                            // Cache the index of each encountered element
                                                            if (useCache) {
                                                                outerCache = node[expando] || (node[expando] = {});

                                                                // Support: IE <9 only
                                                                // Defend against cloned attroperties (jQuery gh-1709)
                                                                uniqueCache = outerCache[node.uniqueID] ||
                                                                    (outerCache[node.uniqueID] = {});

                                                                uniqueCache[type] = [dirruns, diff];
                                                            }

                                                            if (node === elem) {
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }

                                            // Incorporate the offset, then check against cycle size
                                            diff -= last;
                                            return diff === first || (diff % first === 0 && diff / first >= 0);
                                        }
                                    };
                            },

                            "PSEUDO": function (pseudo, argument) {
                                // pseudo-class names are case-insensitive
                                // http://www.w3.org/TR/selectors/#pseudo-classes
                                // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                                // Remember that setFilters inherits from pseudos
                                var args,
                                    fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] ||
                                        Sizzle.error("unsupported pseudo: " + pseudo);

                                // The user may use createPseudo to indicate that
                                // arguments are needed to create the filter function
                                // just as Sizzle does
                                if (fn[expando]) {
                                    return fn(argument);
                                }

                                // But maintain support for old signatures
                                if (fn.length > 1) {
                                    args = [pseudo, pseudo, "", argument];
                                    return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ?
                                        markFunction(function (seed, matches) {
                                            var idx,
                                                matched = fn(seed, argument),
                                                i = matched.length;
                                            while (i--) {
                                                idx = indexOf(seed, matched[i]);
                                                seed[idx] = !(matches[idx] = matched[i]);
                                            }
                                        }) :
                                        function (elem) {
                                            return fn(elem, 0, args);
                                        };
                                }

                                return fn;
                            }
                        },

                        pseudos: {
                            // Potentially complex pseudos
                            "not": markFunction(function (selector) {
                                // Trim the selector passed to compile
                                // to avoid treating leading and trailing
                                // spaces as combinators
                                var input = [],
                                    results = [],
                                    matcher = compile(selector.replace(rtrim, "$1"));

                                return matcher[expando] ?
                                    markFunction(function (seed, matches, context, xml) {
                                        var elem,
                                            unmatched = matcher(seed, null, xml, []),
                                            i = seed.length;

                                        // Match elements unmatched by `matcher`
                                        while (i--) {
                                            if ((elem = unmatched[i])) {
                                                seed[i] = !(matches[i] = elem);
                                            }
                                        }
                                    }) :
                                    function (elem, context, xml) {
                                        input[0] = elem;
                                        matcher(input, null, xml, results);
                                        // Don't keep the element (issue #299)
                                        input[0] = null;
                                        return !results.pop();
                                    };
                            }),

                            "has": markFunction(function (selector) {
                                return function (elem) {
                                    return Sizzle(selector, elem).length > 0;
                                };
                            }),

                            "contains": markFunction(function (text) {
                                text = text.replace(runescape, funescape);
                                return function (elem) {
                                    return (elem.textContent || getText(elem)).indexOf(text) > -1;
                                };
                            }),

                            // "Whether an element is represented by a :lang() selector
                            // is based solely on the element's language value
                            // being equal to the identifier C,
                            // or beginning with the identifier C immediately followed by "-".
                            // The matching of C against the element's language value is performed case-insensitively.
                            // The identifier C does not have to be a valid language name."
                            // http://www.w3.org/TR/selectors/#lang-pseudo
                            "lang": markFunction(function (lang) {
                                // lang value must be a valid identifier
                                if (!ridentifier.test(lang || "")) {
                                    Sizzle.error("unsupported lang: " + lang);
                                }
                                lang = lang.replace(runescape, funescape).toLowerCase();
                                return function (elem) {
                                    var elemLang;
                                    do {
                                        if ((elemLang = documentIsHTML ?
                                            elem.lang :
                                            elem.getAttribute("xml:lang") || elem.getAttribute("lang"))) {

                                            elemLang = elemLang.toLowerCase();
                                            return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                                        }
                                    } while ((elem = elem.parentNode) && elem.nodeType === 1);
                                    return false;
                                };
                            }),

                            // Miscellaneous
                            "target": function (elem) {
                                var hash = window.location && window.location.hash;
                                return hash && hash.slice(1) === elem.id;
                            },

                            "root": function (elem) {
                                return elem === docElem;
                            },

                            "focus": function (elem) {
                                return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                            },

                            // Boolean properties
                            "enabled": createDisabledPseudo(false),
                            "disabled": createDisabledPseudo(true),

                            "checked": function (elem) {
                                // In CSS3, :checked should return both checked and selected elements
                                // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                var nodeName = elem.nodeName.toLowerCase();
                                return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
                            },

                            "selected": function (elem) {
                                // Accessing this property makes selected-by-default
                                // options in Safari work properly
                                if (elem.parentNode) {
                                    elem.parentNode.selectedIndex;
                                }

                                return elem.selected === true;
                            },

                            // Contents
                            "empty": function (elem) {
                                // http://www.w3.org/TR/selectors/#empty-pseudo
                                // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                                //   but not by others (comment: 8; processing instruction: 7; etc.)
                                // nodeType < 6 works because attributes (2) do not appear as children
                                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                                    if (elem.nodeType < 6) {
                                        return false;
                                    }
                                }
                                return true;
                            },

                            "parent": function (elem) {
                                return !Expr.pseudos["empty"](elem);
                            },

                            // Element/input types
                            "header": function (elem) {
                                return rheader.test(elem.nodeName);
                            },

                            "input": function (elem) {
                                return rinputs.test(elem.nodeName);
                            },

                            "button": function (elem) {
                                var name = elem.nodeName.toLowerCase();
                                return name === "input" && elem.type === "button" || name === "button";
                            },

                            "text": function (elem) {
                                var attr;
                                return elem.nodeName.toLowerCase() === "input" &&
                                    elem.type === "text" &&

                                    // Support: IE<8
                                    // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                                    ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
                            },

                            // Position-in-collection
                            "first": createPositionalPseudo(function () {
                                return [0];
                            }),

                            "last": createPositionalPseudo(function (matchIndexes, length) {
                                return [length - 1];
                            }),

                            "eq": createPositionalPseudo(function (matchIndexes, length, argument) {
                                return [argument < 0 ? argument + length : argument];
                            }),

                            "even": createPositionalPseudo(function (matchIndexes, length) {
                                var i = 0;
                                for (; i < length; i += 2) {
                                    matchIndexes.push(i);
                                }
                                return matchIndexes;
                            }),

                            "odd": createPositionalPseudo(function (matchIndexes, length) {
                                var i = 1;
                                for (; i < length; i += 2) {
                                    matchIndexes.push(i);
                                }
                                return matchIndexes;
                            }),

                            "lt": createPositionalPseudo(function (matchIndexes, length, argument) {
                                var i = argument < 0 ?
                                    argument + length :
                                    argument > length ?
                                        length :
                                        argument;
                                for (; --i >= 0;) {
                                    matchIndexes.push(i);
                                }
                                return matchIndexes;
                            }),

                            "gt": createPositionalPseudo(function (matchIndexes, length, argument) {
                                var i = argument < 0 ? argument + length : argument;
                                for (; ++i < length;) {
                                    matchIndexes.push(i);
                                }
                                return matchIndexes;
                            })
                        }
                    };

                    Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
                    for (i in {radio: true, checkbox: true, file: true, password: true, image: true}) {
                        Expr.pseudos[i] = createInputPseudo(i);
                    }
                    for (i in {submit: true, reset: true}) {
                        Expr.pseudos[i] = createButtonPseudo(i);
                    }

// Easy API for creating new setFilters
                    function setFilters() {
                    }

                    setFilters.prototype = Expr.filters = Expr.pseudos;
                    Expr.setFilters = new setFilters();

                    tokenize = Sizzle.tokenize = function (selector, parseOnly) {
                        var matched, match, tokens, type,
                            soFar, groups, preFilters,
                            cached = tokenCache[selector + " "];

                        if (cached) {
                            return parseOnly ? 0 : cached.slice(0);
                        }

                        soFar = selector;
                        groups = [];
                        preFilters = Expr.preFilter;

                        while (soFar) {

                            // Comma and first run
                            if (!matched || (match = rcomma.exec(soFar))) {
                                if (match) {
                                    // Don't consume trailing commas as valid
                                    soFar = soFar.slice(match[0].length) || soFar;
                                }
                                groups.push((tokens = []));
                            }

                            matched = false;

                            // Combinators
                            if ((match = rcombinators.exec(soFar))) {
                                matched = match.shift();
                                tokens.push({
                                    value: matched,
                                    // Cast descendant combinators to space
                                    type: match[0].replace(rtrim, " ")
                                });
                                soFar = soFar.slice(matched.length);
                            }

                            // Filters
                            for (type in Expr.filter) {
                                if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] ||
                                    (match = preFilters[type](match)))) {
                                    matched = match.shift();
                                    tokens.push({
                                        value: matched,
                                        type: type,
                                        matches: match
                                    });
                                    soFar = soFar.slice(matched.length);
                                }
                            }

                            if (!matched) {
                                break;
                            }
                        }

                        // Return the length of the invalid excess
                        // if we're just parsing
                        // Otherwise, throw an error or return tokens
                        return parseOnly ?
                            soFar.length :
                            soFar ?
                                Sizzle.error(selector) :
                                // Cache the tokens
                                tokenCache(selector, groups).slice(0);
                    };

                    function toSelector(tokens) {
                        var i = 0,
                            len = tokens.length,
                            selector = "";
                        for (; i < len; i++) {
                            selector += tokens[i].value;
                        }
                        return selector;
                    }

                    function addCombinator(matcher, combinator, base) {
                        var dir = combinator.dir,
                            skip = combinator.next,
                            key = skip || dir,
                            checkNonElements = base && key === "parentNode",
                            doneName = done++;

                        return combinator.first ?
                            // Check against closest ancestor/preceding element
                            function (elem, context, xml) {
                                while ((elem = elem[dir])) {
                                    if (elem.nodeType === 1 || checkNonElements) {
                                        return matcher(elem, context, xml);
                                    }
                                }
                                return false;
                            } :

                            // Check against all ancestor/preceding elements
                            function (elem, context, xml) {
                                var oldCache, uniqueCache, outerCache,
                                    newCache = [dirruns, doneName];

                                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                                if (xml) {
                                    while ((elem = elem[dir])) {
                                        if (elem.nodeType === 1 || checkNonElements) {
                                            if (matcher(elem, context, xml)) {
                                                return true;
                                            }
                                        }
                                    }
                                } else {
                                    while ((elem = elem[dir])) {
                                        if (elem.nodeType === 1 || checkNonElements) {
                                            outerCache = elem[expando] || (elem[expando] = {});

                                            // Support: IE <9 only
                                            // Defend against cloned attroperties (jQuery gh-1709)
                                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});

                                            if (skip && skip === elem.nodeName.toLowerCase()) {
                                                elem = elem[dir] || elem;
                                            } else if ((oldCache = uniqueCache[key]) &&
                                                oldCache[0] === dirruns && oldCache[1] === doneName) {

                                                // Assign to newCache so results back-propagate to previous elements
                                                return (newCache[2] = oldCache[2]);
                                            } else {
                                                // Reuse newcache so results back-propagate to previous elements
                                                uniqueCache[key] = newCache;

                                                // A match means we're done; a fail means we have to keep checking
                                                if ((newCache[2] = matcher(elem, context, xml))) {
                                                    return true;
                                                }
                                            }
                                        }
                                    }
                                }
                                return false;
                            };
                    }

                    function elementMatcher(matchers) {
                        return matchers.length > 1 ?
                            function (elem, context, xml) {
                                var i = matchers.length;
                                while (i--) {
                                    if (!matchers[i](elem, context, xml)) {
                                        return false;
                                    }
                                }
                                return true;
                            } :
                            matchers[0];
                    }

                    function multipleContexts(selector, contexts, results) {
                        var i = 0,
                            len = contexts.length;
                        for (; i < len; i++) {
                            Sizzle(selector, contexts[i], results);
                        }
                        return results;
                    }

                    function condense(unmatched, map, filter, context, xml) {
                        var elem,
                            newUnmatched = [],
                            i = 0,
                            len = unmatched.length,
                            mapped = map != null;

                        for (; i < len; i++) {
                            if ((elem = unmatched[i])) {
                                if (!filter || filter(elem, context, xml)) {
                                    newUnmatched.push(elem);
                                    if (mapped) {
                                        map.push(i);
                                    }
                                }
                            }
                        }

                        return newUnmatched;
                    }

                    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
                        if (postFilter && !postFilter[expando]) {
                            postFilter = setMatcher(postFilter);
                        }
                        if (postFinder && !postFinder[expando]) {
                            postFinder = setMatcher(postFinder, postSelector);
                        }
                        return markFunction(function (seed, results, context, xml) {
                            var temp, i, elem,
                                preMap = [],
                                postMap = [],
                                preexisting = results.length,

                                // Get initial elements from seed or context
                                elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),

                                // Prefilter to get matcher input, preserving a map for seed-results synchronization
                                matcherIn = preFilter && (seed || !selector) ?
                                    condense(elems, preMap, preFilter, context, xml) :
                                    elems,

                                matcherOut = matcher ?
                                    // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                                    postFinder || (seed ? preFilter : preexisting || postFilter) ?

                                        // ...intermediate processing is necessary
                                        [] :

                                        // ...otherwise use results directly
                                        results :
                                    matcherIn;

                            // Find primary matches
                            if (matcher) {
                                matcher(matcherIn, matcherOut, context, xml);
                            }

                            // Apply postFilter
                            if (postFilter) {
                                temp = condense(matcherOut, postMap);
                                postFilter(temp, [], context, xml);

                                // Un-match failing elements by moving them back to matcherIn
                                i = temp.length;
                                while (i--) {
                                    if ((elem = temp[i])) {
                                        matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                                    }
                                }
                            }

                            if (seed) {
                                if (postFinder || preFilter) {
                                    if (postFinder) {
                                        // Get the final matcherOut by condensing this intermediate into postFinder contexts
                                        temp = [];
                                        i = matcherOut.length;
                                        while (i--) {
                                            if ((elem = matcherOut[i])) {
                                                // Restore matcherIn since elem is not yet a final match
                                                temp.push((matcherIn[i] = elem));
                                            }
                                        }
                                        postFinder(null, (matcherOut = []), temp, xml);
                                    }

                                    // Move matched elements from seed to results to keep them synchronized
                                    i = matcherOut.length;
                                    while (i--) {
                                        if ((elem = matcherOut[i]) &&
                                            (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {

                                            seed[temp] = !(results[temp] = elem);
                                        }
                                    }
                                }

                                // Add elements to results, through postFinder if defined
                            } else {
                                matcherOut = condense(
                                    matcherOut === results ?
                                        matcherOut.splice(preexisting, matcherOut.length) :
                                        matcherOut
                                );
                                if (postFinder) {
                                    postFinder(null, results, matcherOut, xml);
                                } else {
                                    push.apply(results, matcherOut);
                                }
                            }
                        });
                    }

                    function matcherFromTokens(tokens) {
                        var checkContext, matcher, j,
                            len = tokens.length,
                            leadingRelative = Expr.relative[tokens[0].type],
                            implicitRelative = leadingRelative || Expr.relative[" "],
                            i = leadingRelative ? 1 : 0,

                            // The foundational matcher ensures that elements are reachable from top-level context(s)
                            matchContext = addCombinator(function (elem) {
                                return elem === checkContext;
                            }, implicitRelative, true),
                            matchAnyContext = addCombinator(function (elem) {
                                return indexOf(checkContext, elem) > -1;
                            }, implicitRelative, true),
                            matchers = [function (elem, context, xml) {
                                var ret = (!leadingRelative && (xml || context !== outermostContext)) || (
                                    (checkContext = context).nodeType ?
                                        matchContext(elem, context, xml) :
                                        matchAnyContext(elem, context, xml));
                                // Avoid hanging onto element (issue #299)
                                checkContext = null;
                                return ret;
                            }];

                        for (; i < len; i++) {
                            if ((matcher = Expr.relative[tokens[i].type])) {
                                matchers = [addCombinator(elementMatcher(matchers), matcher)];
                            } else {
                                matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);

                                // Return special upon seeing a positional matcher
                                if (matcher[expando]) {
                                    // Find the next relative operator (if any) for proper handling
                                    j = ++i;
                                    for (; j < len; j++) {
                                        if (Expr.relative[tokens[j].type]) {
                                            break;
                                        }
                                    }
                                    return setMatcher(
                                        i > 1 && elementMatcher(matchers),
                                        i > 1 && toSelector(
                                        // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                                        tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === " " ? "*" : ""})
                                        ).replace(rtrim, "$1"),
                                        matcher,
                                        i < j && matcherFromTokens(tokens.slice(i, j)),
                                        j < len && matcherFromTokens((tokens = tokens.slice(j))),
                                        j < len && toSelector(tokens)
                                    );
                                }
                                matchers.push(matcher);
                            }
                        }

                        return elementMatcher(matchers);
                    }

                    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
                        var bySet = setMatchers.length > 0,
                            byElement = elementMatchers.length > 0,
                            superMatcher = function (seed, context, xml, results, outermost) {
                                var elem, j, matcher,
                                    matchedCount = 0,
                                    i = "0",
                                    unmatched = seed && [],
                                    setMatched = [],
                                    contextBackup = outermostContext,
                                    // We must always have either seed elements or outermost context
                                    elems = seed || byElement && Expr.find["TAG"]("*", outermost),
                                    // Use integer dirruns iff this is the outermost matcher
                                    dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                                    len = elems.length;

                                if (outermost) {
                                    outermostContext = context === document || context || outermost;
                                }

                                // Add elements passing elementMatchers directly to results
                                // Support: IE<9, Safari
                                // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                                for (; i !== len && (elem = elems[i]) != null; i++) {
                                    if (byElement && elem) {
                                        j = 0;
                                        if (!context && elem.ownerDocument !== document) {
                                            setDocument(elem);
                                            xml = !documentIsHTML;
                                        }
                                        while ((matcher = elementMatchers[j++])) {
                                            if (matcher(elem, context || document, xml)) {
                                                results.push(elem);
                                                break;
                                            }
                                        }
                                        if (outermost) {
                                            dirruns = dirrunsUnique;
                                        }
                                    }

                                    // Track unmatched elements for set filters
                                    if (bySet) {
                                        // They will have gone through all possible matchers
                                        if ((elem = !matcher && elem)) {
                                            matchedCount--;
                                        }

                                        // Lengthen the array for every element, matched or not
                                        if (seed) {
                                            unmatched.push(elem);
                                        }
                                    }
                                }

                                // `i` is now the count of elements visited above, and adding it to `matchedCount`
                                // makes the latter nonnegative.
                                matchedCount += i;

                                // Apply set filters to unmatched elements
                                // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                                // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                                // no element matchers and no seed.
                                // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                                // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                                // numerically zero.
                                if (bySet && i !== matchedCount) {
                                    j = 0;
                                    while ((matcher = setMatchers[j++])) {
                                        matcher(unmatched, setMatched, context, xml);
                                    }

                                    if (seed) {
                                        // Reintegrate element matches to eliminate the need for sorting
                                        if (matchedCount > 0) {
                                            while (i--) {
                                                if (!(unmatched[i] || setMatched[i])) {
                                                    setMatched[i] = pop.call(results);
                                                }
                                            }
                                        }

                                        // Discard index placeholder values to get only actual matches
                                        setMatched = condense(setMatched);
                                    }

                                    // Add matches to results
                                    push.apply(results, setMatched);

                                    // Seedless set matches succeeding multiple successful matchers stipulate sorting
                                    if (outermost && !seed && setMatched.length > 0 &&
                                        (matchedCount + setMatchers.length) > 1) {

                                        Sizzle.uniqueSort(results);
                                    }
                                }

                                // Override manipulation of globals by nested matchers
                                if (outermost) {
                                    dirruns = dirrunsUnique;
                                    outermostContext = contextBackup;
                                }

                                return unmatched;
                            };

                        return bySet ?
                            markFunction(superMatcher) :
                            superMatcher;
                    }

                    compile = Sizzle.compile = function (selector, match /* Internal Use Only */) {
                        var i,
                            setMatchers = [],
                            elementMatchers = [],
                            cached = compilerCache[selector + " "];

                        if (!cached) {
                            // Generate a function of recursive functions that can be used to check each element
                            if (!match) {
                                match = tokenize(selector);
                            }
                            i = match.length;
                            while (i--) {
                                cached = matcherFromTokens(match[i]);
                                if (cached[expando]) {
                                    setMatchers.push(cached);
                                } else {
                                    elementMatchers.push(cached);
                                }
                            }

                            // Cache the compiled function
                            cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));

                            // Save selector and tokenization
                            cached.selector = selector;
                        }
                        return cached;
                    };

                    /**
                     * A low-level selection function that works with Sizzle's compiled
                     *  selector functions
                     * @param {String|Function} selector A selector or a pre-compiled
                     *  selector function built with Sizzle.compile
                     * @param {Element} context
                     * @param {Array} [results]
                     * @param {Array} [seed] A set of elements to match against
                     */
                    select = Sizzle.select = function (selector, context, results, seed) {
                        var i, tokens, token, type, find,
                            compiled = typeof selector === "function" && selector,
                            match = !seed && tokenize((selector = compiled.selector || selector));

                        results = results || [];

                        // Try to minimize operations if there is only one selector in the list and no seed
                        // (the latter of which guarantees us context)
                        if (match.length === 1) {

                            // Reduce context if the leading compound selector is an ID
                            tokens = match[0] = match[0].slice(0);
                            if (tokens.length > 2 && (token = tokens[0]).type === "ID" &&
                                context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {

                                context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
                                if (!context) {
                                    return results;

                                    // Precompiled matchers will still verify ancestry, so step up a level
                                } else if (compiled) {
                                    context = context.parentNode;
                                }

                                selector = selector.slice(tokens.shift().value.length);
                            }

                            // Fetch a seed set for right-to-left matching
                            i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
                            while (i--) {
                                token = tokens[i];

                                // Abort if we hit a combinator
                                if (Expr.relative[(type = token.type)]) {
                                    break;
                                }
                                if ((find = Expr.find[type])) {
                                    // Search, expanding context for leading sibling combinators
                                    if ((seed = find(
                                        token.matches[0].replace(runescape, funescape),
                                        rsibling.test(tokens[0].type) && testContext(context.parentNode) || context
                                    ))) {

                                        // If seed is empty or no tokens remain, we can return early
                                        tokens.splice(i, 1);
                                        selector = seed.length && toSelector(tokens);
                                        if (!selector) {
                                            push.apply(results, seed);
                                            return results;
                                        }

                                        break;
                                    }
                                }
                            }
                        }

                        // Compile and execute a filtering function if one is not provided
                        // Provide `match` to avoid retokenization if we modified the selector above
                        (compiled || compile(selector, match))(
                            seed,
                            context,
                            !documentIsHTML,
                            results,
                            !context || rsibling.test(selector) && testContext(context.parentNode) || context
                        );
                        return results;
                    };

// One-time assignments

// Sort stability
                    support.sortStable = expando.split("").sort(sortOrder).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
                    support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
                    setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
                    support.sortDetached = assert(function (el) {
                        // Should return 1, but returns 4 (following)
                        return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
                    });

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
                    if (!assert(function (el) {
                        el.innerHTML = "<a href='#'></a>";
                        return el.firstChild.getAttribute("href") === "#";
                    })) {
                        addHandle("type|href|height|width", function (elem, name, isXML) {
                            if (!isXML) {
                                return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
                            }
                        });
                    }

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
                    if (!support.attributes || !assert(function (el) {
                        el.innerHTML = "<input/>";
                        el.firstChild.setAttribute("value", "");
                        return el.firstChild.getAttribute("value") === "";
                    })) {
                        addHandle("value", function (elem, name, isXML) {
                            if (!isXML && elem.nodeName.toLowerCase() === "input") {
                                return elem.defaultValue;
                            }
                        });
                    }

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
                    if (!assert(function (el) {
                        return el.getAttribute("disabled") == null;
                    })) {
                        addHandle(booleans, function (elem, name, isXML) {
                            var val;
                            if (!isXML) {
                                return elem[name] === true ? name.toLowerCase() :
                                    (val = elem.getAttributeNode(name)) && val.specified ?
                                        val.value :
                                        null;
                            }
                        });
                    }

                    return Sizzle;

                })(window);


            jQuery.find = Sizzle;
            jQuery.expr = Sizzle.selectors;

// Deprecated
            jQuery.expr[":"] = jQuery.expr.pseudos;
            jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
            jQuery.text = Sizzle.getText;
            jQuery.isXMLDoc = Sizzle.isXML;
            jQuery.contains = Sizzle.contains;
            jQuery.escapeSelector = Sizzle.escape;


            var dir = function (elem, dir, until) {
                var matched = [],
                    truncate = until !== undefined;

                while ((elem = elem[dir]) && elem.nodeType !== 9) {
                    if (elem.nodeType === 1) {
                        if (truncate && jQuery(elem).is(until)) {
                            break;
                        }
                        matched.push(elem);
                    }
                }
                return matched;
            };


            var siblings = function (n, elem) {
                var matched = [];

                for (; n; n = n.nextSibling) {
                    if (n.nodeType === 1 && n !== elem) {
                        matched.push(n);
                    }
                }

                return matched;
            };


            var rneedsContext = jQuery.expr.match.needsContext;


            function nodeName(elem, name) {

                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

            };
            var rsingleTag = (/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i);


// Implement the identical functionality for filter and not
            function winnow(elements, qualifier, not) {
                if (isFunction(qualifier)) {
                    return jQuery.grep(elements, function (elem, i) {
                        return !!qualifier.call(elem, i, elem) !== not;
                    });
                }

                // Single element
                if (qualifier.nodeType) {
                    return jQuery.grep(elements, function (elem) {
                        return (elem === qualifier) !== not;
                    });
                }

                // Arraylike of elements (jQuery, arguments, Array)
                if (typeof qualifier !== "string") {
                    return jQuery.grep(elements, function (elem) {
                        return (indexOf.call(qualifier, elem) > -1) !== not;
                    });
                }

                // Filtered directly for both simple and complex selectors
                return jQuery.filter(qualifier, elements, not);
            }

            jQuery.filter = function (expr, elems, not) {
                var elem = elems[0];

                if (not) {
                    expr = ":not(" + expr + ")";
                }

                if (elems.length === 1 && elem.nodeType === 1) {
                    return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
                }

                return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
                    return elem.nodeType === 1;
                }));
            };

            jQuery.fn.extend({
                find: function (selector) {
                    var i, ret,
                        len = this.length,
                        self = this;

                    if (typeof selector !== "string") {
                        return this.pushStack(jQuery(selector).filter(function () {
                            for (i = 0; i < len; i++) {
                                if (jQuery.contains(self[i], this)) {
                                    return true;
                                }
                            }
                        }));
                    }

                    ret = this.pushStack([]);

                    for (i = 0; i < len; i++) {
                        jQuery.find(selector, self[i], ret);
                    }

                    return len > 1 ? jQuery.uniqueSort(ret) : ret;
                },
                filter: function (selector) {
                    return this.pushStack(winnow(this, selector || [], false));
                },
                not: function (selector) {
                    return this.pushStack(winnow(this, selector || [], true));
                },
                is: function (selector) {
                    return !!winnow(
                        this,

                        // If this is a positional/relative selector, check membership in the returned set
                        // so $("p:first").is("p:last") won't return true for a doc with two "p".
                        typeof selector === "string" && rneedsContext.test(selector) ?
                            jQuery(selector) :
                            selector || [],
                        false
                    ).length;
                }
            });


// Initialize a jQuery object


// A central reference to the root jQuery(document)
            var rootjQuery,

                // A simple way to check for HTML strings
                // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
                // Strict HTML recognition (#11290: must start with <)
                // Shortcut simple #id case for speed
                rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

                init = jQuery.fn.init = function (selector, context, root) {
                    var match, elem;

                    // HANDLE: $(""), $(null), $(undefined), $(false)
                    if (!selector) {
                        return this;
                    }

                    // Method init() accepts an alternate rootjQuery
                    // so migrate can support jQuery.sub (gh-2101)
                    root = root || rootjQuery;

                    // Handle HTML strings
                    if (typeof selector === "string") {
                        if (selector[0] === "<" &&
                            selector[selector.length - 1] === ">" &&
                            selector.length >= 3) {

                            // Assume that strings that start and end with <> are HTML and skip the regex check
                            match = [null, selector, null];

                        } else {
                            match = rquickExpr.exec(selector);
                        }

                        // Match html or make sure no context is specified for #id
                        if (match && (match[1] || !context)) {

                            // HANDLE: $(html) -> $(array)
                            if (match[1]) {
                                context = context instanceof jQuery ? context[0] : context;

                                // Option to run scripts is true for back-compat
                                // Intentionally let the error be thrown if parseHTML is not present
                                jQuery.merge(this, jQuery.parseHTML(
                                    match[1],
                                    context && context.nodeType ? context.ownerDocument || context : document,
                                    true
                                ));

                                // HANDLE: $(html, props)
                                if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                                    for (match in context) {

                                        // Properties of context are called as methods if possible
                                        if (isFunction(this[match])) {
                                            this[match](context[match]);

                                            // ...and otherwise set as attributes
                                        } else {
                                            this.attr(match, context[match]);
                                        }
                                    }
                                }

                                return this;

                                // HANDLE: $(#id)
                            } else {
                                elem = document.getElementById(match[2]);

                                if (elem) {

                                    // Inject the element directly into the jQuery object
                                    this[0] = elem;
                                    this.length = 1;
                                }
                                return this;
                            }

                            // HANDLE: $(expr, $(...))
                        } else if (!context || context.jquery) {
                            return (context || root).find(selector);

                            // HANDLE: $(expr, context)
                            // (which is just equivalent to: $(context).find(expr)
                        } else {
                            return this.constructor(context).find(selector);
                        }

                        // HANDLE: $(DOMElement)
                    } else if (selector.nodeType) {
                        this[0] = selector;
                        this.length = 1;
                        return this;

                        // HANDLE: $(function)
                        // Shortcut for document ready
                    } else if (isFunction(selector)) {
                        return root.ready !== undefined ?
                            root.ready(selector) :

                            // Execute immediately if ready is not present
                            selector(jQuery);
                    }

                    return jQuery.makeArray(selector, this);
                };

// Give the init function the jQuery prototype for later instantiation
            init.prototype = jQuery.fn;

// Initialize central reference
            rootjQuery = jQuery(document);


            var rparentsprev = /^(?:parents|prev(?:Until|All))/,

                // Methods guaranteed to produce a unique set when starting from a unique set
                guaranteedUnique = {
                    children: true,
                    contents: true,
                    next: true,
                    prev: true
                };

            jQuery.fn.extend({
                has: function (target) {
                    var targets = jQuery(target, this),
                        l = targets.length;

                    return this.filter(function () {
                        var i = 0;
                        for (; i < l; i++) {
                            if (jQuery.contains(this, targets[i])) {
                                return true;
                            }
                        }
                    });
                },

                closest: function (selectors, context) {
                    var cur,
                        i = 0,
                        l = this.length,
                        matched = [],
                        targets = typeof selectors !== "string" && jQuery(selectors);

                    // Positional selectors never match, since there's no _selection_ context
                    if (!rneedsContext.test(selectors)) {
                        for (; i < l; i++) {
                            for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {

                                // Always skip document fragments
                                if (cur.nodeType < 11 && (targets ?
                                    targets.index(cur) > -1 :

                                    // Don't pass non-elements to Sizzle
                                    cur.nodeType === 1 &&
                                    jQuery.find.matchesSelector(cur, selectors))) {

                                    matched.push(cur);
                                    break;
                                }
                            }
                        }
                    }

                    return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
                },

                // Determine the position of an element within the set
                index: function (elem) {

                    // No argument, return index in parent
                    if (!elem) {
                        return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;
                    }

                    // Index in selector
                    if (typeof elem === "string") {
                        return indexOf.call(jQuery(elem), this[0]);
                    }

                    // Locate the position of the desired element
                    return indexOf.call(this,

                        // If it receives a jQuery object, the first element is used
                        elem.jquery ? elem[0] : elem
                    );
                },

                add: function (selector, context) {
                    return this.pushStack(
                        jQuery.uniqueSort(
                            jQuery.merge(this.get(), jQuery(selector, context))
                        )
                    );
                },

                addBack: function (selector) {
                    return this.add(selector == null ?
                        this.prevObject : this.prevObject.filter(selector)
                    );
                }
            });

            function sibling(cur, dir) {
                while ((cur = cur[dir]) && cur.nodeType !== 1) {
                }
                return cur;
            }

            jQuery.each({
                parent: function (elem) {
                    var parent = elem.parentNode;
                    return parent && parent.nodeType !== 11 ? parent : null;
                },
                parents: function (elem) {
                    return dir(elem, "parentNode");
                },
                parentsUntil: function (elem, i, until) {
                    return dir(elem, "parentNode", until);
                },
                next: function (elem) {
                    return sibling(elem, "nextSibling");
                },
                prev: function (elem) {
                    return sibling(elem, "previousSibling");
                },
                nextAll: function (elem) {
                    return dir(elem, "nextSibling");
                },
                prevAll: function (elem) {
                    return dir(elem, "previousSibling");
                },
                nextUntil: function (elem, i, until) {
                    return dir(elem, "nextSibling", until);
                },
                prevUntil: function (elem, i, until) {
                    return dir(elem, "previousSibling", until);
                },
                siblings: function (elem) {
                    return siblings((elem.parentNode || {}).firstChild, elem);
                },
                children: function (elem) {
                    return siblings(elem.firstChild);
                },
                contents: function (elem) {
                    if (typeof elem.contentDocument !== "undefined") {
                        return elem.contentDocument;
                    }

                    // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
                    // Treat the template element as a regular one in browsers that
                    // don't support it.
                    if (nodeName(elem, "template")) {
                        elem = elem.content || elem;
                    }

                    return jQuery.merge([], elem.childNodes);
                }
            }, function (name, fn) {
                jQuery.fn[name] = function (until, selector) {
                    var matched = jQuery.map(this, fn, until);

                    if (name.slice(-5) !== "Until") {
                        selector = until;
                    }

                    if (selector && typeof selector === "string") {
                        matched = jQuery.filter(selector, matched);
                    }

                    if (this.length > 1) {

                        // Remove duplicates
                        if (!guaranteedUnique[name]) {
                            jQuery.uniqueSort(matched);
                        }

                        // Reverse order for parents* and prev-derivatives
                        if (rparentsprev.test(name)) {
                            matched.reverse();
                        }
                    }

                    return this.pushStack(matched);
                };
            });
            var rnothtmlwhite = (/[^\x20\t\r\n\f]+/g);


// Convert String-formatted options into Object-formatted ones
            function createOptions(options) {
                var object = {};
                jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
                    object[flag] = true;
                });
                return object;
            }

            /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
            jQuery.Callbacks = function (options) {

                // Convert options from String-formatted to Object-formatted if needed
                // (we check in cache first)
                options = typeof options === "string" ?
                    createOptions(options) :
                    jQuery.extend({}, options);

                var // Flag to know if list is currently firing
                    firing,

                    // Last fire value for non-forgettable lists
                    memory,

                    // Flag to know if list was already fired
                    fired,

                    // Flag to prevent firing
                    locked,

                    // Actual callback list
                    list = [],

                    // Queue of execution data for repeatable lists
                    queue = [],

                    // Index of currently firing callback (modified by add/remove as needed)
                    firingIndex = -1,

                    // Fire callbacks
                    fire = function () {

                        // Enforce single-firing
                        locked = locked || options.once;

                        // Execute callbacks for all pending executions,
                        // respecting firingIndex overrides and runtime changes
                        fired = firing = true;
                        for (; queue.length; firingIndex = -1) {
                            memory = queue.shift();
                            while (++firingIndex < list.length) {

                                // Run callback and check for early termination
                                if (list[firingIndex].apply(memory[0], memory[1]) === false &&
                                    options.stopOnFalse) {

                                    // Jump to end and forget the data so .add doesn't re-fire
                                    firingIndex = list.length;
                                    memory = false;
                                }
                            }
                        }

                        // Forget the data if we're done with it
                        if (!options.memory) {
                            memory = false;
                        }

                        firing = false;

                        // Clean up if we're done firing for good
                        if (locked) {

                            // Keep an empty list if we have data for future add calls
                            if (memory) {
                                list = [];

                                // Otherwise, this object is spent
                            } else {
                                list = "";
                            }
                        }
                    },

                    // Actual Callbacks object
                    self = {

                        // Add a callback or a collection of callbacks to the list
                        add: function () {
                            if (list) {

                                // If we have memory from a past run, we should fire after adding
                                if (memory && !firing) {
                                    firingIndex = list.length - 1;
                                    queue.push(memory);
                                }

                                (function add(args) {
                                    jQuery.each(args, function (_, arg) {
                                        if (isFunction(arg)) {
                                            if (!options.unique || !self.has(arg)) {
                                                list.push(arg);
                                            }
                                        } else if (arg && arg.length && toType(arg) !== "string") {

                                            // Inspect recursively
                                            add(arg);
                                        }
                                    });
                                })(arguments);

                                if (memory && !firing) {
                                    fire();
                                }
                            }
                            return this;
                        },

                        // Remove a callback from the list
                        remove: function () {
                            jQuery.each(arguments, function (_, arg) {
                                var index;
                                while ((index = jQuery.inArray(arg, list, index)) > -1) {
                                    list.splice(index, 1);

                                    // Handle firing indexes
                                    if (index <= firingIndex) {
                                        firingIndex--;
                                    }
                                }
                            });
                            return this;
                        },

                        // Check if a given callback is in the list.
                        // If no argument is given, return whether or not list has callbacks attached.
                        has: function (fn) {
                            return fn ?
                                jQuery.inArray(fn, list) > -1 :
                                list.length > 0;
                        },

                        // Remove all callbacks from the list
                        empty: function () {
                            if (list) {
                                list = [];
                            }
                            return this;
                        },

                        // Disable .fire and .add
                        // Abort any current/pending executions
                        // Clear all callbacks and values
                        disable: function () {
                            locked = queue = [];
                            list = memory = "";
                            return this;
                        },
                        disabled: function () {
                            return !list;
                        },

                        // Disable .fire
                        // Also disable .add unless we have memory (since it would have no effect)
                        // Abort any pending executions
                        lock: function () {
                            locked = queue = [];
                            if (!memory && !firing) {
                                list = memory = "";
                            }
                            return this;
                        },
                        locked: function () {
                            return !!locked;
                        },

                        // Call all callbacks with the given context and arguments
                        fireWith: function (context, args) {
                            if (!locked) {
                                args = args || [];
                                args = [context, args.slice ? args.slice() : args];
                                queue.push(args);
                                if (!firing) {
                                    fire();
                                }
                            }
                            return this;
                        },

                        // Call all the callbacks with the given arguments
                        fire: function () {
                            self.fireWith(this, arguments);
                            return this;
                        },

                        // To know if the callbacks have already been called at least once
                        fired: function () {
                            return !!fired;
                        }
                    };

                return self;
            };


            function Identity(v) {
                return v;
            }

            function Thrower(ex) {
                throw ex;
            }

            function adoptValue(value, resolve, reject, noValue) {
                var method;

                try {

                    // Check for promise aspect first to privilege synchronous behavior
                    if (value && isFunction((method = value.promise))) {
                        method.call(value).done(resolve).fail(reject);

                        // Other thenables
                    } else if (value && isFunction((method = value.then))) {
                        method.call(value, resolve, reject);

                        // Other non-thenables
                    } else {

                        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
                        // * false: [ value ].slice( 0 ) => resolve( value )
                        // * true: [ value ].slice( 1 ) => resolve()
                        resolve.apply(undefined, [value].slice(noValue));
                    }

                    // For Promises/A+, convert exceptions into rejections
                    // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
                    // Deferred#then to conditionally suppress rejection.
                } catch (value) {

                    // Support: Android 4.0 only
                    // Strict mode functions invoked without .call/.apply get global-object context
                    reject.apply(undefined, [value]);
                }
            }

            jQuery.extend({

                Deferred: function (func) {
                    var tuples = [

                            // action, add listener, callbacks,
                            // ... .then handlers, argument index, [final state]
                            ["notify", "progress", jQuery.Callbacks("memory"),
                                jQuery.Callbacks("memory"), 2],
                            ["resolve", "done", jQuery.Callbacks("once memory"),
                                jQuery.Callbacks("once memory"), 0, "resolved"],
                            ["reject", "fail", jQuery.Callbacks("once memory"),
                                jQuery.Callbacks("once memory"), 1, "rejected"]
                        ],
                        state = "pending",
                        promise = {
                            state: function () {
                                return state;
                            },
                            always: function () {
                                deferred.done(arguments).fail(arguments);
                                return this;
                            },
                            "catch": function (fn) {
                                return promise.then(null, fn);
                            },

                            // Keep pipe for back-compat
                            pipe: function ( /* fnDone, fnFail, fnProgress */) {
                                var fns = arguments;

                                return jQuery.Deferred(function (newDefer) {
                                    jQuery.each(tuples, function (i, tuple) {

                                        // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                                        var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];

                                        // deferred.progress(function() { bind to newDefer or newDefer.notify })
                                        // deferred.done(function() { bind to newDefer or newDefer.resolve })
                                        // deferred.fail(function() { bind to newDefer or newDefer.reject })
                                        deferred[tuple[1]](function () {
                                            var returned = fn && fn.apply(this, arguments);
                                            if (returned && isFunction(returned.promise)) {
                                                returned.promise()
                                                    .progress(newDefer.notify)
                                                    .done(newDefer.resolve)
                                                    .fail(newDefer.reject);
                                            } else {
                                                newDefer[tuple[0] + "With"](
                                                    this,
                                                    fn ? [returned] : arguments
                                                );
                                            }
                                        });
                                    });
                                    fns = null;
                                }).promise();
                            },
                            then: function (onFulfilled, onRejected, onProgress) {
                                var maxDepth = 0;

                                function resolve(depth, deferred, handler, special) {
                                    return function () {
                                        var that = this,
                                            args = arguments,
                                            mightThrow = function () {
                                                var returned, then;

                                                // Support: Promises/A+ section 2.3.3.3.3
                                                // https://promisesaplus.com/#point-59
                                                // Ignore double-resolution attempts
                                                if (depth < maxDepth) {
                                                    return;
                                                }

                                                returned = handler.apply(that, args);

                                                // Support: Promises/A+ section 2.3.1
                                                // https://promisesaplus.com/#point-48
                                                if (returned === deferred.promise()) {
                                                    throw new TypeError("Thenable self-resolution");
                                                }

                                                // Support: Promises/A+ sections 2.3.3.1, 3.5
                                                // https://promisesaplus.com/#point-54
                                                // https://promisesaplus.com/#point-75
                                                // Retrieve `then` only once
                                                then = returned &&

                                                    // Support: Promises/A+ section 2.3.4
                                                    // https://promisesaplus.com/#point-64
                                                    // Only check objects and functions for thenability
                                                    (typeof returned === "object" ||
                                                        typeof returned === "function") &&
                                                    returned.then;

                                                // Handle a returned thenable
                                                if (isFunction(then)) {

                                                    // Special processors (notify) just wait for resolution
                                                    if (special) {
                                                        then.call(
                                                            returned,
                                                            resolve(maxDepth, deferred, Identity, special),
                                                            resolve(maxDepth, deferred, Thrower, special)
                                                        );

                                                        // Normal processors (resolve) also hook into progress
                                                    } else {

                                                        // ...and disregard older resolution values
                                                        maxDepth++;

                                                        then.call(
                                                            returned,
                                                            resolve(maxDepth, deferred, Identity, special),
                                                            resolve(maxDepth, deferred, Thrower, special),
                                                            resolve(maxDepth, deferred, Identity,
                                                                deferred.notifyWith)
                                                        );
                                                    }

                                                    // Handle all other returned values
                                                } else {

                                                    // Only substitute handlers pass on context
                                                    // and multiple values (non-spec behavior)
                                                    if (handler !== Identity) {
                                                        that = undefined;
                                                        args = [returned];
                                                    }

                                                    // Process the value(s)
                                                    // Default process is resolve
                                                    (special || deferred.resolveWith)(that, args);
                                                }
                                            },

                                            // Only normal processors (resolve) catch and reject exceptions
                                            process = special ?
                                                mightThrow :
                                                function () {
                                                    try {
                                                        mightThrow();
                                                    } catch (e) {

                                                        if (jQuery.Deferred.exceptionHook) {
                                                            jQuery.Deferred.exceptionHook(e,
                                                                process.stackTrace);
                                                        }

                                                        // Support: Promises/A+ section 2.3.3.3.4.1
                                                        // https://promisesaplus.com/#point-61
                                                        // Ignore post-resolution exceptions
                                                        if (depth + 1 >= maxDepth) {

                                                            // Only substitute handlers pass on context
                                                            // and multiple values (non-spec behavior)
                                                            if (handler !== Thrower) {
                                                                that = undefined;
                                                                args = [e];
                                                            }

                                                            deferred.rejectWith(that, args);
                                                        }
                                                    }
                                                };

                                        // Support: Promises/A+ section 2.3.3.3.1
                                        // https://promisesaplus.com/#point-57
                                        // Re-resolve promises immediately to dodge false rejection from
                                        // subsequent errors
                                        if (depth) {
                                            process();
                                        } else {

                                            // Call an optional hook to record the stack, in case of exception
                                            // since it's otherwise lost when execution goes async
                                            if (jQuery.Deferred.getStackHook) {
                                                process.stackTrace = jQuery.Deferred.getStackHook();
                                            }
                                            window.setTimeout(process);
                                        }
                                    };
                                }

                                return jQuery.Deferred(function (newDefer) {

                                    // progress_handlers.add( ... )
                                    tuples[0][3].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction(onProgress) ?
                                                onProgress :
                                                Identity,
                                            newDefer.notifyWith
                                        )
                                    );

                                    // fulfilled_handlers.add( ... )
                                    tuples[1][3].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction(onFulfilled) ?
                                                onFulfilled :
                                                Identity
                                        )
                                    );

                                    // rejected_handlers.add( ... )
                                    tuples[2][3].add(
                                        resolve(
                                            0,
                                            newDefer,
                                            isFunction(onRejected) ?
                                                onRejected :
                                                Thrower
                                        )
                                    );
                                }).promise();
                            },

                            // Get a promise for this deferred
                            // If obj is provided, the promise aspect is added to the object
                            promise: function (obj) {
                                return obj != null ? jQuery.extend(obj, promise) : promise;
                            }
                        },
                        deferred = {};

                    // Add list-specific methods
                    jQuery.each(tuples, function (i, tuple) {
                        var list = tuple[2],
                            stateString = tuple[5];

                        // promise.progress = list.add
                        // promise.done = list.add
                        // promise.fail = list.add
                        promise[tuple[1]] = list.add;

                        // Handle state
                        if (stateString) {
                            list.add(
                                function () {

                                    // state = "resolved" (i.e., fulfilled)
                                    // state = "rejected"
                                    state = stateString;
                                },

                                // rejected_callbacks.disable
                                // fulfilled_callbacks.disable
                                tuples[3 - i][2].disable,

                                // rejected_handlers.disable
                                // fulfilled_handlers.disable
                                tuples[3 - i][3].disable,

                                // progress_callbacks.lock
                                tuples[0][2].lock,

                                // progress_handlers.lock
                                tuples[0][3].lock
                            );
                        }

                        // progress_handlers.fire
                        // fulfilled_handlers.fire
                        // rejected_handlers.fire
                        list.add(tuple[3].fire);

                        // deferred.notify = function() { deferred.notifyWith(...) }
                        // deferred.resolve = function() { deferred.resolveWith(...) }
                        // deferred.reject = function() { deferred.rejectWith(...) }
                        deferred[tuple[0]] = function () {
                            deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
                            return this;
                        };

                        // deferred.notifyWith = list.fireWith
                        // deferred.resolveWith = list.fireWith
                        // deferred.rejectWith = list.fireWith
                        deferred[tuple[0] + "With"] = list.fireWith;
                    });

                    // Make the deferred a promise
                    promise.promise(deferred);

                    // Call given func if any
                    if (func) {
                        func.call(deferred, deferred);
                    }

                    // All done!
                    return deferred;
                },

                // Deferred helper
                when: function (singleValue) {
                    var

                        // count of uncompleted subordinates
                        remaining = arguments.length,

                        // count of unprocessed arguments
                        i = remaining,

                        // subordinate fulfillment data
                        resolveContexts = Array(i),
                        resolveValues = slice.call(arguments),

                        // the master Deferred
                        master = jQuery.Deferred(),

                        // subordinate callback factory
                        updateFunc = function (i) {
                            return function (value) {
                                resolveContexts[i] = this;
                                resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;
                                if (!(--remaining)) {
                                    master.resolveWith(resolveContexts, resolveValues);
                                }
                            };
                        };

                    // Single- and empty arguments are adopted like Promise.resolve
                    if (remaining <= 1) {
                        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject,
                            !remaining);

                        // Use .then() to unwrap secondary thenables (cf. gh-3000)
                        if (master.state() === "pending" ||
                            isFunction(resolveValues[i] && resolveValues[i].then)) {

                            return master.then();
                        }
                    }

                    // Multiple arguments are aggregated like Promise.all array elements
                    while (i--) {
                        adoptValue(resolveValues[i], updateFunc(i), master.reject);
                    }

                    return master.promise();
                }
            });


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
            var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

            jQuery.Deferred.exceptionHook = function (error, stack) {

                // Support: IE 8 - 9 only
                // Console exists when dev tools are open, which can happen at any time
                if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
                    window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
                }
            };


            jQuery.readyException = function (error) {
                window.setTimeout(function () {
                    throw error;
                });
            };


// The deferred used on DOM ready
            var readyList = jQuery.Deferred();

            jQuery.fn.ready = function (fn) {

                readyList
                    .then(fn)

                    // Wrap jQuery.readyException in a function so that the lookup
                    // happens at the time of error handling instead of callback
                    // registration.
                    .catch(function (error) {
                        jQuery.readyException(error);
                    });

                return this;
            };

            jQuery.extend({

                // Is the DOM ready to be used? Set to true once it occurs.
                isReady: false,

                // A counter to track how many items to wait for before
                // the ready event fires. See #6781
                readyWait: 1,

                // Handle when the DOM is ready
                ready: function (wait) {

                    // Abort if there are pending holds or we're already ready
                    if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
                        return;
                    }

                    // Remember that the DOM is ready
                    jQuery.isReady = true;

                    // If a normal DOM Ready event fired, decrement, and wait if need be
                    if (wait !== true && --jQuery.readyWait > 0) {
                        return;
                    }

                    // If there are functions bound, to execute
                    readyList.resolveWith(document, [jQuery]);
                }
            });

            jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
            function completed() {
                document.removeEventListener("DOMContentLoaded", completed);
                window.removeEventListener("load", completed);
                jQuery.ready();
            }

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
            if (document.readyState === "complete" ||
                (document.readyState !== "loading" && !document.documentElement.doScroll)) {

                // Handle it asynchronously to allow scripts the opportunity to delay ready
                window.setTimeout(jQuery.ready);

            } else {

                // Use the handy event callback
                document.addEventListener("DOMContentLoaded", completed);

                // A fallback to window.onload, that will always work
                window.addEventListener("load", completed);
            }


// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
            var access = function (elems, fn, key, value, chainable, emptyGet, raw) {
                var i = 0,
                    len = elems.length,
                    bulk = key == null;

                // Sets many values
                if (toType(key) === "object") {
                    chainable = true;
                    for (i in key) {
                        access(elems, fn, i, key[i], true, emptyGet, raw);
                    }

                    // Sets one value
                } else if (value !== undefined) {
                    chainable = true;

                    if (!isFunction(value)) {
                        raw = true;
                    }

                    if (bulk) {

                        // Bulk operations run against the entire set
                        if (raw) {
                            fn.call(elems, value);
                            fn = null;

                            // ...except when executing function values
                        } else {
                            bulk = fn;
                            fn = function (elem, key, value) {
                                return bulk.call(jQuery(elem), value);
                            };
                        }
                    }

                    if (fn) {
                        for (; i < len; i++) {
                            fn(
                                elems[i], key, raw ?
                                    value :
                                    value.call(elems[i], i, fn(elems[i], key))
                            );
                        }
                    }
                }

                if (chainable) {
                    return elems;
                }

                // Gets
                if (bulk) {
                    return fn.call(elems);
                }

                return len ? fn(elems[0], key) : emptyGet;
            };


// Matches dashed string for camelizing
            var rmsPrefix = /^-ms-/,
                rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
            function fcamelCase(all, letter) {
                return letter.toUpperCase();
            }

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
            function camelCase(string) {
                return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
            }

            var acceptData = function (owner) {

                // Accepts only:
                //  - Node
                //    - Node.ELEMENT_NODE
                //    - Node.DOCUMENT_NODE
                //  - Object
                //    - Any
                return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);
            };


            function Data() {
                this.expando = jQuery.expando + Data.uid++;
            }

            Data.uid = 1;

            Data.prototype = {

                cache: function (owner) {

                    // Check if the owner object already has a cache
                    var value = owner[this.expando];

                    // If not, create one
                    if (!value) {
                        value = {};

                        // We can accept data for non-element nodes in modern browsers,
                        // but we should not, see #8335.
                        // Always return an empty object.
                        if (acceptData(owner)) {

                            // If it is a node unlikely to be stringify-ed or looped over
                            // use plain assignment
                            if (owner.nodeType) {
                                owner[this.expando] = value;

                                // Otherwise secure it in a non-enumerable property
                                // configurable must be true to allow the property to be
                                // deleted when data is removed
                            } else {
                                Object.defineProperty(owner, this.expando, {
                                    value: value,
                                    configurable: true
                                });
                            }
                        }
                    }

                    return value;
                },
                set: function (owner, data, value) {
                    var prop,
                        cache = this.cache(owner);

                    // Handle: [ owner, key, value ] args
                    // Always use camelCase key (gh-2257)
                    if (typeof data === "string") {
                        cache[camelCase(data)] = value;

                        // Handle: [ owner, { properties } ] args
                    } else {

                        // Copy the properties one-by-one to the cache object
                        for (prop in data) {
                            cache[camelCase(prop)] = data[prop];
                        }
                    }
                    return cache;
                },
                get: function (owner, key) {
                    return key === undefined ?
                        this.cache(owner) :

                        // Always use camelCase key (gh-2257)
                        owner[this.expando] && owner[this.expando][camelCase(key)];
                },
                access: function (owner, key, value) {

                    // In cases where either:
                    //
                    //   1. No key was specified
                    //   2. A string key was specified, but no value provided
                    //
                    // Take the "read" path and allow the get method to determine
                    // which value to return, respectively either:
                    //
                    //   1. The entire cache object
                    //   2. The data stored at the key
                    //
                    if (key === undefined ||
                        ((key && typeof key === "string") && value === undefined)) {

                        return this.get(owner, key);
                    }

                    // When the key is not a string, or both a key and value
                    // are specified, set or extend (existing objects) with either:
                    //
                    //   1. An object of properties
                    //   2. A key and value
                    //
                    this.set(owner, key, value);

                    // Since the "set" path can have two possible entry points
                    // return the expected data based on which path was taken[*]
                    return value !== undefined ? value : key;
                },
                remove: function (owner, key) {
                    var i,
                        cache = owner[this.expando];

                    if (cache === undefined) {
                        return;
                    }

                    if (key !== undefined) {

                        // Support array or space separated string of keys
                        if (Array.isArray(key)) {

                            // If key is an array of keys...
                            // We always set camelCase keys, so remove that.
                            key = key.map(camelCase);
                        } else {
                            key = camelCase(key);

                            // If a key with the spaces exists, use it.
                            // Otherwise, create an array by matching non-whitespace
                            key = key in cache ?
                                [key] :
                                (key.match(rnothtmlwhite) || []);
                        }

                        i = key.length;

                        while (i--) {
                            delete cache[key[i]];
                        }
                    }

                    // Remove the expando if there's no more data
                    if (key === undefined || jQuery.isEmptyObject(cache)) {

                        // Support: Chrome <=35 - 45
                        // Webkit & Blink performance suffers when deleting properties
                        // from DOM nodes, so set to undefined instead
                        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                        if (owner.nodeType) {
                            owner[this.expando] = undefined;
                        } else {
                            delete owner[this.expando];
                        }
                    }
                },
                hasData: function (owner) {
                    var cache = owner[this.expando];
                    return cache !== undefined && !jQuery.isEmptyObject(cache);
                }
            };
            var dataPriv = new Data();

            var dataUser = new Data();


//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

            var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                rmultiDash = /[A-Z]/g;

            function getData(data) {
                if (data === "true") {
                    return true;
                }

                if (data === "false") {
                    return false;
                }

                if (data === "null") {
                    return null;
                }

                // Only convert to a number if it doesn't change the string
                if (data === +data + "") {
                    return +data;
                }

                if (rbrace.test(data)) {
                    return JSON.parse(data);
                }

                return data;
            }

            function dataAttr(elem, key, data) {
                var name;

                // If nothing was found internally, try to fetch any
                // data from the HTML5 data-* attribute
                if (data === undefined && elem.nodeType === 1) {
                    name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
                    data = elem.getAttribute(name);

                    if (typeof data === "string") {
                        try {
                            data = getData(data);
                        } catch (e) {
                        }

                        // Make sure we set the data so it isn't changed later
                        dataUser.set(elem, key, data);
                    } else {
                        data = undefined;
                    }
                }
                return data;
            }

            jQuery.extend({
                hasData: function (elem) {
                    return dataUser.hasData(elem) || dataPriv.hasData(elem);
                },

                data: function (elem, name, data) {
                    return dataUser.access(elem, name, data);
                },

                removeData: function (elem, name) {
                    dataUser.remove(elem, name);
                },

                // TODO: Now that all calls to _data and _removeData have been replaced
                // with direct calls to dataPriv methods, these can be deprecated.
                _data: function (elem, name, data) {
                    return dataPriv.access(elem, name, data);
                },

                _removeData: function (elem, name) {
                    dataPriv.remove(elem, name);
                }
            });

            jQuery.fn.extend({
                data: function (key, value) {
                    var i, name, data,
                        elem = this[0],
                        attrs = elem && elem.attributes;

                    // Gets all values
                    if (key === undefined) {
                        if (this.length) {
                            data = dataUser.get(elem);

                            if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                                i = attrs.length;
                                while (i--) {

                                    // Support: IE 11 only
                                    // The attrs elements can be null (#14894)
                                    if (attrs[i]) {
                                        name = attrs[i].name;
                                        if (name.indexOf("data-") === 0) {
                                            name = camelCase(name.slice(5));
                                            dataAttr(elem, name, data[name]);
                                        }
                                    }
                                }
                                dataPriv.set(elem, "hasDataAttrs", true);
                            }
                        }

                        return data;
                    }

                    // Sets multiple values
                    if (typeof key === "object") {
                        return this.each(function () {
                            dataUser.set(this, key);
                        });
                    }

                    return access(this, function (value) {
                        var data;

                        // The calling jQuery object (element matches) is not empty
                        // (and therefore has an element appears at this[ 0 ]) and the
                        // `value` parameter was not undefined. An empty jQuery object
                        // will result in `undefined` for elem = this[ 0 ] which will
                        // throw an exception if an attempt to read a data cache is made.
                        if (elem && value === undefined) {

                            // Attempt to get data from the cache
                            // The key will always be camelCased in Data
                            data = dataUser.get(elem, key);
                            if (data !== undefined) {
                                return data;
                            }

                            // Attempt to "discover" the data in
                            // HTML5 custom data-* attrs
                            data = dataAttr(elem, key);
                            if (data !== undefined) {
                                return data;
                            }

                            // We tried really hard, but the data doesn't exist.
                            return;
                        }

                        // Set the data...
                        this.each(function () {

                            // We always store the camelCased key
                            dataUser.set(this, key, value);
                        });
                    }, null, value, arguments.length > 1, null, true);
                },

                removeData: function (key) {
                    return this.each(function () {
                        dataUser.remove(this, key);
                    });
                }
            });


            jQuery.extend({
                queue: function (elem, type, data) {
                    var queue;

                    if (elem) {
                        type = (type || "fx") + "queue";
                        queue = dataPriv.get(elem, type);

                        // Speed up dequeue by getting out quickly if this is just a lookup
                        if (data) {
                            if (!queue || Array.isArray(data)) {
                                queue = dataPriv.access(elem, type, jQuery.makeArray(data));
                            } else {
                                queue.push(data);
                            }
                        }
                        return queue || [];
                    }
                },

                dequeue: function (elem, type) {
                    type = type || "fx";

                    var queue = jQuery.queue(elem, type),
                        startLength = queue.length,
                        fn = queue.shift(),
                        hooks = jQuery._queueHooks(elem, type),
                        next = function () {
                            jQuery.dequeue(elem, type);
                        };

                    // If the fx queue is dequeued, always remove the progress sentinel
                    if (fn === "inprogress") {
                        fn = queue.shift();
                        startLength--;
                    }

                    if (fn) {

                        // Add a progress sentinel to prevent the fx queue from being
                        // automatically dequeued
                        if (type === "fx") {
                            queue.unshift("inprogress");
                        }

                        // Clear up the last queue stop function
                        delete hooks.stop;
                        fn.call(elem, next, hooks);
                    }

                    if (!startLength && hooks) {
                        hooks.empty.fire();
                    }
                },

                // Not public - generate a queueHooks object, or return the current one
                _queueHooks: function (elem, type) {
                    var key = type + "queueHooks";
                    return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
                        empty: jQuery.Callbacks("once memory").add(function () {
                            dataPriv.remove(elem, [type + "queue", key]);
                        })
                    });
                }
            });

            jQuery.fn.extend({
                queue: function (type, data) {
                    var setter = 2;

                    if (typeof type !== "string") {
                        data = type;
                        type = "fx";
                        setter--;
                    }

                    if (arguments.length < setter) {
                        return jQuery.queue(this[0], type);
                    }

                    return data === undefined ?
                        this :
                        this.each(function () {
                            var queue = jQuery.queue(this, type, data);

                            // Ensure a hooks for this queue
                            jQuery._queueHooks(this, type);

                            if (type === "fx" && queue[0] !== "inprogress") {
                                jQuery.dequeue(this, type);
                            }
                        });
                },
                dequeue: function (type) {
                    return this.each(function () {
                        jQuery.dequeue(this, type);
                    });
                },
                clearQueue: function (type) {
                    return this.queue(type || "fx", []);
                },

                // Get a promise resolved when queues of a certain type
                // are emptied (fx is the type by default)
                promise: function (type, obj) {
                    var tmp,
                        count = 1,
                        defer = jQuery.Deferred(),
                        elements = this,
                        i = this.length,
                        resolve = function () {
                            if (!(--count)) {
                                defer.resolveWith(elements, [elements]);
                            }
                        };

                    if (typeof type !== "string") {
                        obj = type;
                        type = undefined;
                    }
                    type = type || "fx";

                    while (i--) {
                        tmp = dataPriv.get(elements[i], type + "queueHooks");
                        if (tmp && tmp.empty) {
                            count++;
                            tmp.empty.add(resolve);
                        }
                    }
                    resolve();
                    return defer.promise(obj);
                }
            });
            var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

            var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");


            var cssExpand = ["Top", "Right", "Bottom", "Left"];

            var documentElement = document.documentElement;


            var isAttached = function (elem) {
                    return jQuery.contains(elem.ownerDocument, elem);
                },
                composed = {composed: true};

            // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
            // Check attachment across shadow DOM boundaries when possible (gh-3504)
            // Support: iOS 10.0-10.2 only
            // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
            // leading to errors. We need to check for `getRootNode`.
            if (documentElement.getRootNode) {
                isAttached = function (elem) {
                    return jQuery.contains(elem.ownerDocument, elem) ||
                        elem.getRootNode(composed) === elem.ownerDocument;
                };
            }
            var isHiddenWithinTree = function (elem, el) {

                // isHiddenWithinTree might be called from jQuery#filter function;
                // in that case, element will be second argument
                elem = el || elem;

                // Inline style trumps all
                return elem.style.display === "none" ||
                    elem.style.display === "" &&

                    // Otherwise, check computed style
                    // Support: Firefox <=43 - 45
                    // Disconnected elements can have computed display: none, so first confirm that elem is
                    // in the document.
                    isAttached(elem) &&

                    jQuery.css(elem, "display") === "none";
            };

            var swap = function (elem, options, callback, args) {
                var ret, name,
                    old = {};

                // Remember the old values, and insert the new ones
                for (name in options) {
                    old[name] = elem.style[name];
                    elem.style[name] = options[name];
                }

                ret = callback.apply(elem, args || []);

                // Revert the old values
                for (name in options) {
                    elem.style[name] = old[name];
                }

                return ret;
            };


            function adjustCSS(elem, prop, valueParts, tween) {
                var adjusted, scale,
                    maxIterations = 20,
                    currentValue = tween ?
                        function () {
                            return tween.cur();
                        } :
                        function () {
                            return jQuery.css(elem, prop, "");
                        },
                    initial = currentValue(),
                    unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),

                    // Starting value computation is required for potential unit mismatches
                    initialInUnit = elem.nodeType &&
                        (jQuery.cssNumber[prop] || unit !== "px" && +initial) &&
                        rcssNum.exec(jQuery.css(elem, prop));

                if (initialInUnit && initialInUnit[3] !== unit) {

                    // Support: Firefox <=54
                    // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
                    initial = initial / 2;

                    // Trust units reported by jQuery.css
                    unit = unit || initialInUnit[3];

                    // Iteratively approximate from a nonzero starting point
                    initialInUnit = +initial || 1;

                    while (maxIterations--) {

                        // Evaluate and update our best guess (doubling guesses that zero out).
                        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                        jQuery.style(elem, prop, initialInUnit + unit);
                        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
                            maxIterations = 0;
                        }
                        initialInUnit = initialInUnit / scale;

                    }

                    initialInUnit = initialInUnit * 2;
                    jQuery.style(elem, prop, initialInUnit + unit);

                    // Make sure we update the tween properties later on
                    valueParts = valueParts || [];
                }

                if (valueParts) {
                    initialInUnit = +initialInUnit || +initial || 0;

                    // Apply relative offset (+=/-=) if specified
                    adjusted = valueParts[1] ?
                        initialInUnit + (valueParts[1] + 1) * valueParts[2] :
                        +valueParts[2];
                    if (tween) {
                        tween.unit = unit;
                        tween.start = initialInUnit;
                        tween.end = adjusted;
                    }
                }
                return adjusted;
            }


            var defaultDisplayMap = {};

            function getDefaultDisplay(elem) {
                var temp,
                    doc = elem.ownerDocument,
                    nodeName = elem.nodeName,
                    display = defaultDisplayMap[nodeName];

                if (display) {
                    return display;
                }

                temp = doc.body.appendChild(doc.createElement(nodeName));
                display = jQuery.css(temp, "display");

                temp.parentNode.removeChild(temp);

                if (display === "none") {
                    display = "block";
                }
                defaultDisplayMap[nodeName] = display;

                return display;
            }

            function showHide(elements, show) {
                var display, elem,
                    values = [],
                    index = 0,
                    length = elements.length;

                // Determine new display value for elements that need to change
                for (; index < length; index++) {
                    elem = elements[index];
                    if (!elem.style) {
                        continue;
                    }

                    display = elem.style.display;
                    if (show) {

                        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                        // check is required in this first loop unless we have a nonempty display value (either
                        // inline or about-to-be-restored)
                        if (display === "none") {
                            values[index] = dataPriv.get(elem, "display") || null;
                            if (!values[index]) {
                                elem.style.display = "";
                            }
                        }
                        if (elem.style.display === "" && isHiddenWithinTree(elem)) {
                            values[index] = getDefaultDisplay(elem);
                        }
                    } else {
                        if (display !== "none") {
                            values[index] = "none";

                            // Remember what we're overwriting
                            dataPriv.set(elem, "display", display);
                        }
                    }
                }

                // Set the display of the elements in a second loop to avoid constant reflow
                for (index = 0; index < length; index++) {
                    if (values[index] != null) {
                        elements[index].style.display = values[index];
                    }
                }

                return elements;
            }

            jQuery.fn.extend({
                show: function () {
                    return showHide(this, true);
                },
                hide: function () {
                    return showHide(this);
                },
                toggle: function (state) {
                    if (typeof state === "boolean") {
                        return state ? this.show() : this.hide();
                    }

                    return this.each(function () {
                        if (isHiddenWithinTree(this)) {
                            jQuery(this).show();
                        } else {
                            jQuery(this).hide();
                        }
                    });
                }
            });
            var rcheckableType = (/^(?:checkbox|radio)$/i);

            var rtagName = (/<([a-z][^\/\0>\x20\t\r\n\f]*)/i);

            var rscriptType = (/^$|^module$|\/(?:java|ecma)script/i);


// We have to close these tags to support XHTML (#13200)
            var wrapMap = {

                // Support: IE <=9 only
                option: [1, "<select multiple='multiple'>", "</select>"],

                // XHTML parsers do not magically insert elements in the
                // same way that tag soup parsers do. So we cannot shorten
                // this by omitting <tbody> or other required elements.
                thead: [1, "<table>", "</table>"],
                col: [2, "<table><colgroup>", "</colgroup></table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],

                _default: [0, "", ""]
            };

// Support: IE <=9 only
            wrapMap.optgroup = wrapMap.option;

            wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
            wrapMap.th = wrapMap.td;


            function getAll(context, tag) {

                // Support: IE <=9 - 11 only
                // Use typeof to avoid zero-argument method invocation on host objects (#15151)
                var ret;

                if (typeof context.getElementsByTagName !== "undefined") {
                    ret = context.getElementsByTagName(tag || "*");

                } else if (typeof context.querySelectorAll !== "undefined") {
                    ret = context.querySelectorAll(tag || "*");

                } else {
                    ret = [];
                }

                if (tag === undefined || tag && nodeName(context, tag)) {
                    return jQuery.merge([context], ret);
                }

                return ret;
            }


// Mark scripts as having already been evaluated
            function setGlobalEval(elems, refElements) {
                var i = 0,
                    l = elems.length;

                for (; i < l; i++) {
                    dataPriv.set(
                        elems[i],
                        "globalEval",
                        !refElements || dataPriv.get(refElements[i], "globalEval")
                    );
                }
            }


            var rhtml = /<|&#?\w+;/;

            function buildFragment(elems, context, scripts, selection, ignored) {
                var elem, tmp, tag, wrap, attached, j,
                    fragment = context.createDocumentFragment(),
                    nodes = [],
                    i = 0,
                    l = elems.length;

                for (; i < l; i++) {
                    elem = elems[i];

                    if (elem || elem === 0) {

                        // Add nodes directly
                        if (toType(elem) === "object") {

                            // Support: Android <=4.0 only, PhantomJS 1 only
                            // push.apply(_, arraylike) throws on ancient WebKit
                            jQuery.merge(nodes, elem.nodeType ? [elem] : elem);

                            // Convert non-html into a text node
                        } else if (!rhtml.test(elem)) {
                            nodes.push(context.createTextNode(elem));

                            // Convert html into DOM nodes
                        } else {
                            tmp = tmp || fragment.appendChild(context.createElement("div"));

                            // Deserialize a standard representation
                            tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                            wrap = wrapMap[tag] || wrapMap._default;
                            tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

                            // Descend through wrappers to the right content
                            j = wrap[0];
                            while (j--) {
                                tmp = tmp.lastChild;
                            }

                            // Support: Android <=4.0 only, PhantomJS 1 only
                            // push.apply(_, arraylike) throws on ancient WebKit
                            jQuery.merge(nodes, tmp.childNodes);

                            // Remember the top-level container
                            tmp = fragment.firstChild;

                            // Ensure the created nodes are orphaned (#12392)
                            tmp.textContent = "";
                        }
                    }
                }

                // Remove wrapper from fragment
                fragment.textContent = "";

                i = 0;
                while ((elem = nodes[i++])) {

                    // Skip elements already in the context collection (trac-4087)
                    if (selection && jQuery.inArray(elem, selection) > -1) {
                        if (ignored) {
                            ignored.push(elem);
                        }
                        continue;
                    }

                    attached = isAttached(elem);

                    // Append to fragment
                    tmp = getAll(fragment.appendChild(elem), "script");

                    // Preserve script evaluation history
                    if (attached) {
                        setGlobalEval(tmp);
                    }

                    // Capture executables
                    if (scripts) {
                        j = 0;
                        while ((elem = tmp[j++])) {
                            if (rscriptType.test(elem.type || "")) {
                                scripts.push(elem);
                            }
                        }
                    }
                }

                return fragment;
            }


            (function () {
                var fragment = document.createDocumentFragment(),
                    div = fragment.appendChild(document.createElement("div")),
                    input = document.createElement("input");

                // Support: Android 4.0 - 4.3 only
                // Check state lost if the name is set (#11217)
                // Support: Windows Web Apps (WWA)
                // `name` and `type` must use .setAttribute for WWA (#14901)
                input.setAttribute("type", "radio");
                input.setAttribute("checked", "checked");
                input.setAttribute("name", "t");

                div.appendChild(input);

                // Support: Android <=4.1 only
                // Older WebKit doesn't clone checked state correctly in fragments
                support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;

                // Support: IE <=11 only
                // Make sure textarea (and checkbox) defaultValue is properly cloned
                div.innerHTML = "<textarea>x</textarea>";
                support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
            })();


            var
                rkeyEvent = /^key/,
                rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

            function returnTrue() {
                return true;
            }

            function returnFalse() {
                return false;
            }

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
            function expectSync(elem, type) {
                return (elem === safeActiveElement()) === (type === "focus");
            }

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
            function safeActiveElement() {
                try {
                    return document.activeElement;
                } catch (err) {
                }
            }

            function on(elem, types, selector, data, fn, one) {
                var origFn, type;

                // Types can be a map of types/handlers
                if (typeof types === "object") {

                    // ( types-Object, selector, data )
                    if (typeof selector !== "string") {

                        // ( types-Object, data )
                        data = data || selector;
                        selector = undefined;
                    }
                    for (type in types) {
                        on(elem, type, selector, data, types[type], one);
                    }
                    return elem;
                }

                if (data == null && fn == null) {

                    // ( types, fn )
                    fn = selector;
                    data = selector = undefined;
                } else if (fn == null) {
                    if (typeof selector === "string") {

                        // ( types, selector, fn )
                        fn = data;
                        data = undefined;
                    } else {

                        // ( types, data, fn )
                        fn = data;
                        data = selector;
                        selector = undefined;
                    }
                }
                if (fn === false) {
                    fn = returnFalse;
                } else if (!fn) {
                    return elem;
                }

                if (one === 1) {
                    origFn = fn;
                    fn = function (event) {

                        // Can use an empty set, since event contains the info
                        jQuery().off(event);
                        return origFn.apply(this, arguments);
                    };

                    // Use same guid so caller can remove using origFn
                    fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
                }
                return elem.each(function () {
                    jQuery.event.add(this, types, fn, data, selector);
                });
            }

            /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
            jQuery.event = {

                global: {},

                add: function (elem, types, handler, data, selector) {

                    var handleObjIn, eventHandle, tmp,
                        events, t, handleObj,
                        special, handlers, type, namespaces, origType,
                        elemData = dataPriv.get(elem);

                    // Don't attach events to noData or text/comment nodes (but allow plain objects)
                    if (!elemData) {
                        return;
                    }

                    // Caller can pass in an object of custom data in lieu of the handler
                    if (handler.handler) {
                        handleObjIn = handler;
                        handler = handleObjIn.handler;
                        selector = handleObjIn.selector;
                    }

                    // Ensure that invalid selectors throw exceptions at attach time
                    // Evaluate against documentElement in case elem is a non-element node (e.g., document)
                    if (selector) {
                        jQuery.find.matchesSelector(documentElement, selector);
                    }

                    // Make sure that the handler has a unique ID, used to find/remove it later
                    if (!handler.guid) {
                        handler.guid = jQuery.guid++;
                    }

                    // Init the element's event structure and main handler, if this is the first
                    if (!(events = elemData.events)) {
                        events = elemData.events = {};
                    }
                    if (!(eventHandle = elemData.handle)) {
                        eventHandle = elemData.handle = function (e) {

                            // Discard the second event of a jQuery.event.trigger() and
                            // when an event is called after a page has unloaded
                            return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
                                jQuery.event.dispatch.apply(elem, arguments) : undefined;
                        };
                    }

                    // Handle multiple events separated by a space
                    types = (types || "").match(rnothtmlwhite) || [""];
                    t = types.length;
                    while (t--) {
                        tmp = rtypenamespace.exec(types[t]) || [];
                        type = origType = tmp[1];
                        namespaces = (tmp[2] || "").split(".").sort();

                        // There *must* be a type, no attaching namespace-only handlers
                        if (!type) {
                            continue;
                        }

                        // If event changes its type, use the special event handlers for the changed type
                        special = jQuery.event.special[type] || {};

                        // If selector defined, determine special event api type, otherwise given type
                        type = (selector ? special.delegateType : special.bindType) || type;

                        // Update special based on newly reset type
                        special = jQuery.event.special[type] || {};

                        // handleObj is passed to all event handlers
                        handleObj = jQuery.extend({
                            type: type,
                            origType: origType,
                            data: data,
                            handler: handler,
                            guid: handler.guid,
                            selector: selector,
                            needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                            namespace: namespaces.join(".")
                        }, handleObjIn);

                        // Init the event handler queue if we're the first
                        if (!(handlers = events[type])) {
                            handlers = events[type] = [];
                            handlers.delegateCount = 0;

                            // Only use addEventListener if the special events handler returns false
                            if (!special.setup ||
                                special.setup.call(elem, data, namespaces, eventHandle) === false) {

                                if (elem.addEventListener) {
                                    elem.addEventListener(type, eventHandle);
                                }
                            }
                        }

                        if (special.add) {
                            special.add.call(elem, handleObj);

                            if (!handleObj.handler.guid) {
                                handleObj.handler.guid = handler.guid;
                            }
                        }

                        // Add to the element's handler list, delegates in front
                        if (selector) {
                            handlers.splice(handlers.delegateCount++, 0, handleObj);
                        } else {
                            handlers.push(handleObj);
                        }

                        // Keep track of which events have ever been used, for event optimization
                        jQuery.event.global[type] = true;
                    }

                },

                // Detach an event or set of events from an element
                remove: function (elem, types, handler, selector, mappedTypes) {

                    var j, origCount, tmp,
                        events, t, handleObj,
                        special, handlers, type, namespaces, origType,
                        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

                    if (!elemData || !(events = elemData.events)) {
                        return;
                    }

                    // Once for each type.namespace in types; type may be omitted
                    types = (types || "").match(rnothtmlwhite) || [""];
                    t = types.length;
                    while (t--) {
                        tmp = rtypenamespace.exec(types[t]) || [];
                        type = origType = tmp[1];
                        namespaces = (tmp[2] || "").split(".").sort();

                        // Unbind all events (on this namespace, if provided) for the element
                        if (!type) {
                            for (type in events) {
                                jQuery.event.remove(elem, type + types[t], handler, selector, true);
                            }
                            continue;
                        }

                        special = jQuery.event.special[type] || {};
                        type = (selector ? special.delegateType : special.bindType) || type;
                        handlers = events[type] || [];
                        tmp = tmp[2] &&
                            new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");

                        // Remove matching events
                        origCount = j = handlers.length;
                        while (j--) {
                            handleObj = handlers[j];

                            if ((mappedTypes || origType === handleObj.origType) &&
                                (!handler || handler.guid === handleObj.guid) &&
                                (!tmp || tmp.test(handleObj.namespace)) &&
                                (!selector || selector === handleObj.selector ||
                                    selector === "**" && handleObj.selector)) {
                                handlers.splice(j, 1);

                                if (handleObj.selector) {
                                    handlers.delegateCount--;
                                }
                                if (special.remove) {
                                    special.remove.call(elem, handleObj);
                                }
                            }
                        }

                        // Remove generic event handler if we removed something and no more handlers exist
                        // (avoids potential for endless recursion during removal of special event handlers)
                        if (origCount && !handlers.length) {
                            if (!special.teardown ||
                                special.teardown.call(elem, namespaces, elemData.handle) === false) {

                                jQuery.removeEvent(elem, type, elemData.handle);
                            }

                            delete events[type];
                        }
                    }

                    // Remove data and the expando if it's no longer used
                    if (jQuery.isEmptyObject(events)) {
                        dataPriv.remove(elem, "handle events");
                    }
                },

                dispatch: function (nativeEvent) {

                    // Make a writable jQuery.Event from the native event object
                    var event = jQuery.event.fix(nativeEvent);

                    var i, j, ret, matched, handleObj, handlerQueue,
                        args = new Array(arguments.length),
                        handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
                        special = jQuery.event.special[event.type] || {};

                    // Use the fix-ed jQuery.Event rather than the (read-only) native event
                    args[0] = event;

                    for (i = 1; i < arguments.length; i++) {
                        args[i] = arguments[i];
                    }

                    event.delegateTarget = this;

                    // Call the preDispatch hook for the mapped type, and let it bail if desired
                    if (special.preDispatch && special.preDispatch.call(this, event) === false) {
                        return;
                    }

                    // Determine handlers
                    handlerQueue = jQuery.event.handlers.call(this, event, handlers);

                    // Run delegates first; they may want to stop propagation beneath us
                    i = 0;
                    while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
                        event.currentTarget = matched.elem;

                        j = 0;
                        while ((handleObj = matched.handlers[j++]) &&
                        !event.isImmediatePropagationStopped()) {

                            // If the event is namespaced, then each handler is only invoked if it is
                            // specially universal or its namespaces are a superset of the event's.
                            if (!event.rnamespace || handleObj.namespace === false ||
                                event.rnamespace.test(handleObj.namespace)) {

                                event.handleObj = handleObj;
                                event.data = handleObj.data;

                                ret = ((jQuery.event.special[handleObj.origType] || {}).handle ||
                                    handleObj.handler).apply(matched.elem, args);

                                if (ret !== undefined) {
                                    if ((event.result = ret) === false) {
                                        event.preventDefault();
                                        event.stopPropagation();
                                    }
                                }
                            }
                        }
                    }

                    // Call the postDispatch hook for the mapped type
                    if (special.postDispatch) {
                        special.postDispatch.call(this, event);
                    }

                    return event.result;
                },

                handlers: function (event, handlers) {
                    var i, handleObj, sel, matchedHandlers, matchedSelectors,
                        handlerQueue = [],
                        delegateCount = handlers.delegateCount,
                        cur = event.target;

                    // Find delegate handlers
                    if (delegateCount &&

                        // Support: IE <=9
                        // Black-hole SVG <use> instance trees (trac-13180)
                        cur.nodeType &&

                        // Support: Firefox <=42
                        // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
                        // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
                        // Support: IE 11 only
                        // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
                        !(event.type === "click" && event.button >= 1)) {

                        for (; cur !== this; cur = cur.parentNode || this) {

                            // Don't check non-elements (#13208)
                            // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                            if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
                                matchedHandlers = [];
                                matchedSelectors = {};
                                for (i = 0; i < delegateCount; i++) {
                                    handleObj = handlers[i];

                                    // Don't conflict with Object.prototype properties (#13203)
                                    sel = handleObj.selector + " ";

                                    if (matchedSelectors[sel] === undefined) {
                                        matchedSelectors[sel] = handleObj.needsContext ?
                                            jQuery(sel, this).index(cur) > -1 :
                                            jQuery.find(sel, this, null, [cur]).length;
                                    }
                                    if (matchedSelectors[sel]) {
                                        matchedHandlers.push(handleObj);
                                    }
                                }
                                if (matchedHandlers.length) {
                                    handlerQueue.push({elem: cur, handlers: matchedHandlers});
                                }
                            }
                        }
                    }

                    // Add the remaining (directly-bound) handlers
                    cur = this;
                    if (delegateCount < handlers.length) {
                        handlerQueue.push({elem: cur, handlers: handlers.slice(delegateCount)});
                    }

                    return handlerQueue;
                },

                addProp: function (name, hook) {
                    Object.defineProperty(jQuery.Event.prototype, name, {
                        enumerable: true,
                        configurable: true,

                        get: isFunction(hook) ?
                            function () {
                                if (this.originalEvent) {
                                    return hook(this.originalEvent);
                                }
                            } :
                            function () {
                                if (this.originalEvent) {
                                    return this.originalEvent[name];
                                }
                            },

                        set: function (value) {
                            Object.defineProperty(this, name, {
                                enumerable: true,
                                configurable: true,
                                writable: true,
                                value: value
                            });
                        }
                    });
                },

                fix: function (originalEvent) {
                    return originalEvent[jQuery.expando] ?
                        originalEvent :
                        new jQuery.Event(originalEvent);
                },

                special: {
                    load: {

                        // Prevent triggered image.load events from bubbling to window.load
                        noBubble: true
                    },
                    click: {

                        // Utilize native event to ensure correct state for checkable inputs
                        setup: function (data) {

                            // For mutual compressibility with _default, replace `this` access with a local var.
                            // `|| data` is dead code meant only to preserve the variable through minification.
                            var el = this || data;

                            // Claim the first handler
                            if (rcheckableType.test(el.type) &&
                                el.click && nodeName(el, "input")) {

                                // dataPriv.set( el, "click", ... )
                                leverageNative(el, "click", returnTrue);
                            }

                            // Return false to allow normal processing in the caller
                            return false;
                        },
                        trigger: function (data) {

                            // For mutual compressibility with _default, replace `this` access with a local var.
                            // `|| data` is dead code meant only to preserve the variable through minification.
                            var el = this || data;

                            // Force setup before triggering a click
                            if (rcheckableType.test(el.type) &&
                                el.click && nodeName(el, "input")) {

                                leverageNative(el, "click");
                            }

                            // Return non-false to allow normal event-path propagation
                            return true;
                        },

                        // For cross-browser consistency, suppress native .click() on links
                        // Also prevent it if we're currently inside a leveraged native-event stack
                        _default: function (event) {
                            var target = event.target;
                            return rcheckableType.test(target.type) &&
                                target.click && nodeName(target, "input") &&
                                dataPriv.get(target, "click") ||
                                nodeName(target, "a");
                        }
                    },

                    beforeunload: {
                        postDispatch: function (event) {

                            // Support: Firefox 20+
                            // Firefox doesn't alert if the returnValue field is not set.
                            if (event.result !== undefined && event.originalEvent) {
                                event.originalEvent.returnValue = event.result;
                            }
                        }
                    }
                }
            };

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
            function leverageNative(el, type, expectSync) {

                // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
                if (!expectSync) {
                    if (dataPriv.get(el, type) === undefined) {
                        jQuery.event.add(el, type, returnTrue);
                    }
                    return;
                }

                // Register the controller as a special universal handler for all event namespaces
                dataPriv.set(el, type, false);
                jQuery.event.add(el, type, {
                    namespace: false,
                    handler: function (event) {
                        var notAsync, result,
                            saved = dataPriv.get(this, type);

                        if ((event.isTrigger & 1) && this[type]) {

                            // Interrupt processing of the outer synthetic .trigger()ed event
                            // Saved data should be false in such cases, but might be a leftover capture object
                            // from an async native handler (gh-4350)
                            if (!saved.length) {

                                // Store arguments for use when handling the inner native event
                                // There will always be at least one argument (an event object), so this array
                                // will not be confused with a leftover capture object.
                                saved = slice.call(arguments);
                                dataPriv.set(this, type, saved);

                                // Trigger the native event and capture its result
                                // Support: IE <=9 - 11+
                                // focus() and blur() are asynchronous
                                notAsync = expectSync(this, type);
                                this[type]();
                                result = dataPriv.get(this, type);
                                if (saved !== result || notAsync) {
                                    dataPriv.set(this, type, false);
                                } else {
                                    result = {};
                                }
                                if (saved !== result) {

                                    // Cancel the outer synthetic event
                                    event.stopImmediatePropagation();
                                    event.preventDefault();
                                    return result.value;
                                }

                                // If this is an inner synthetic event for an event with a bubbling surrogate
                                // (focus or blur), assume that the surrogate already propagated from triggering the
                                // native event and prevent that from happening again here.
                                // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
                                // bubbling surrogate propagates *after* the non-bubbling base), but that seems
                                // less bad than duplication.
                            } else if ((jQuery.event.special[type] || {}).delegateType) {
                                event.stopPropagation();
                            }

                            // If this is a native event triggered above, everything is now in order
                            // Fire an inner synthetic event with the original arguments
                        } else if (saved.length) {

                            // ...and capture the result
                            dataPriv.set(this, type, {
                                value: jQuery.event.trigger(
                                    // Support: IE <=9 - 11+
                                    // Extend with the prototype to reset the above stopImmediatePropagation()
                                    jQuery.extend(saved[0], jQuery.Event.prototype),
                                    saved.slice(1),
                                    this
                                )
                            });

                            // Abort handling of the native event
                            event.stopImmediatePropagation();
                        }
                    }
                });
            }

            jQuery.removeEvent = function (elem, type, handle) {

                // This "if" is needed for plain objects
                if (elem.removeEventListener) {
                    elem.removeEventListener(type, handle);
                }
            };

            jQuery.Event = function (src, props) {

                // Allow instantiation without the 'new' keyword
                if (!(this instanceof jQuery.Event)) {
                    return new jQuery.Event(src, props);
                }

                // Event object
                if (src && src.type) {
                    this.originalEvent = src;
                    this.type = src.type;

                    // Events bubbling up the document may have been marked as prevented
                    // by a handler lower down the tree; reflect the correct value.
                    this.isDefaultPrevented = src.defaultPrevented ||
                    src.defaultPrevented === undefined &&

                    // Support: Android <=2.3 only
                    src.returnValue === false ?
                        returnTrue :
                        returnFalse;

                    // Create target properties
                    // Support: Safari <=6 - 7 only
                    // Target should not be a text node (#504, #13143)
                    this.target = (src.target && src.target.nodeType === 3) ?
                        src.target.parentNode :
                        src.target;

                    this.currentTarget = src.currentTarget;
                    this.relatedTarget = src.relatedTarget;

                    // Event type
                } else {
                    this.type = src;
                }

                // Put explicitly provided properties onto the event object
                if (props) {
                    jQuery.extend(this, props);
                }

                // Create a timestamp if incoming event doesn't have one
                this.timeStamp = src && src.timeStamp || Date.now();

                // Mark it as fixed
                this[jQuery.expando] = true;
            };

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
            jQuery.Event.prototype = {
                constructor: jQuery.Event,
                isDefaultPrevented: returnFalse,
                isPropagationStopped: returnFalse,
                isImmediatePropagationStopped: returnFalse,
                isSimulated: false,

                preventDefault: function () {
                    var e = this.originalEvent;

                    this.isDefaultPrevented = returnTrue;

                    if (e && !this.isSimulated) {
                        e.preventDefault();
                    }
                },
                stopPropagation: function () {
                    var e = this.originalEvent;

                    this.isPropagationStopped = returnTrue;

                    if (e && !this.isSimulated) {
                        e.stopPropagation();
                    }
                },
                stopImmediatePropagation: function () {
                    var e = this.originalEvent;

                    this.isImmediatePropagationStopped = returnTrue;

                    if (e && !this.isSimulated) {
                        e.stopImmediatePropagation();
                    }

                    this.stopPropagation();
                }
            };

// Includes all common event props including KeyEvent and MouseEvent specific props
            jQuery.each({
                altKey: true,
                bubbles: true,
                cancelable: true,
                changedTouches: true,
                ctrlKey: true,
                detail: true,
                eventPhase: true,
                metaKey: true,
                pageX: true,
                pageY: true,
                shiftKey: true,
                view: true,
                "char": true,
                code: true,
                charCode: true,
                key: true,
                keyCode: true,
                button: true,
                buttons: true,
                clientX: true,
                clientY: true,
                offsetX: true,
                offsetY: true,
                pointerId: true,
                pointerType: true,
                screenX: true,
                screenY: true,
                targetTouches: true,
                toElement: true,
                touches: true,

                which: function (event) {
                    var button = event.button;

                    // Add which for key events
                    if (event.which == null && rkeyEvent.test(event.type)) {
                        return event.charCode != null ? event.charCode : event.keyCode;
                    }

                    // Add which for click: 1 === left; 2 === middle; 3 === right
                    if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {
                        if (button & 1) {
                            return 1;
                        }

                        if (button & 2) {
                            return 3;
                        }

                        if (button & 4) {
                            return 2;
                        }

                        return 0;
                    }

                    return event.which;
                }
            }, jQuery.event.addProp);

            jQuery.each({focus: "focusin", blur: "focusout"}, function (type, delegateType) {
                jQuery.event.special[type] = {

                    // Utilize native event if possible so blur/focus sequence is correct
                    setup: function () {

                        // Claim the first handler
                        // dataPriv.set( this, "focus", ... )
                        // dataPriv.set( this, "blur", ... )
                        leverageNative(this, type, expectSync);

                        // Return false to allow normal processing in the caller
                        return false;
                    },
                    trigger: function () {

                        // Force setup before trigger
                        leverageNative(this, type);

                        // Return non-false to allow normal event-path propagation
                        return true;
                    },

                    delegateType: delegateType
                };
            });

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
            jQuery.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function (orig, fix) {
                jQuery.event.special[orig] = {
                    delegateType: fix,
                    bindType: fix,

                    handle: function (event) {
                        var ret,
                            target = this,
                            related = event.relatedTarget,
                            handleObj = event.handleObj;

                        // For mouseenter/leave call the handler if related is outside the target.
                        // NB: No relatedTarget if the mouse left/entered the browser window
                        if (!related || (related !== target && !jQuery.contains(target, related))) {
                            event.type = handleObj.origType;
                            ret = handleObj.handler.apply(this, arguments);
                            event.type = fix;
                        }
                        return ret;
                    }
                };
            });

            jQuery.fn.extend({

                on: function (types, selector, data, fn) {
                    return on(this, types, selector, data, fn);
                },
                one: function (types, selector, data, fn) {
                    return on(this, types, selector, data, fn, 1);
                },
                off: function (types, selector, fn) {
                    var handleObj, type;
                    if (types && types.preventDefault && types.handleObj) {

                        // ( event )  dispatched jQuery.Event
                        handleObj = types.handleObj;
                        jQuery(types.delegateTarget).off(
                            handleObj.namespace ?
                                handleObj.origType + "." + handleObj.namespace :
                                handleObj.origType,
                            handleObj.selector,
                            handleObj.handler
                        );
                        return this;
                    }
                    if (typeof types === "object") {

                        // ( types-object [, selector] )
                        for (type in types) {
                            this.off(type, selector, types[type]);
                        }
                        return this;
                    }
                    if (selector === false || typeof selector === "function") {

                        // ( types [, fn] )
                        fn = selector;
                        selector = undefined;
                    }
                    if (fn === false) {
                        fn = returnFalse;
                    }
                    return this.each(function () {
                        jQuery.event.remove(this, types, fn, selector);
                    });
                }
            });


            var

                /* eslint-disable max-len */

                // See https://github.com/eslint/eslint/issues/3229
                rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

                /* eslint-enable */

                // Support: IE <=10 - 11, Edge 12 - 13 only
                // In IE/Edge using regex groups here causes severe slowdowns.
                // See https://connect.microsoft.com/IE/feedback/details/1736512/
                rnoInnerhtml = /<script|<style|<link/i,

                // checked="checked" or checked
                rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
                rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
            function manipulationTarget(elem, content) {
                if (nodeName(elem, "table") &&
                    nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {

                    return jQuery(elem).children("tbody")[0] || elem;
                }

                return elem;
            }

// Replace/restore the type attribute of script elements for safe DOM manipulation
            function disableScript(elem) {
                elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
                return elem;
            }

            function restoreScript(elem) {
                if ((elem.type || "").slice(0, 5) === "true/") {
                    elem.type = elem.type.slice(5);
                } else {
                    elem.removeAttribute("type");
                }

                return elem;
            }

            function cloneCopyEvent(src, dest) {
                var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

                if (dest.nodeType !== 1) {
                    return;
                }

                // 1. Copy private data: events, handlers, etc.
                if (dataPriv.hasData(src)) {
                    pdataOld = dataPriv.access(src);
                    pdataCur = dataPriv.set(dest, pdataOld);
                    events = pdataOld.events;

                    if (events) {
                        delete pdataCur.handle;
                        pdataCur.events = {};

                        for (type in events) {
                            for (i = 0, l = events[type].length; i < l; i++) {
                                jQuery.event.add(dest, type, events[type][i]);
                            }
                        }
                    }
                }

                // 2. Copy user data
                if (dataUser.hasData(src)) {
                    udataOld = dataUser.access(src);
                    udataCur = jQuery.extend({}, udataOld);

                    dataUser.set(dest, udataCur);
                }
            }

// Fix IE bugs, see support tests
            function fixInput(src, dest) {
                var nodeName = dest.nodeName.toLowerCase();

                // Fails to persist the checked state of a cloned checkbox or radio button.
                if (nodeName === "input" && rcheckableType.test(src.type)) {
                    dest.checked = src.checked;

                    // Fails to return the selected option to the default selected state when cloning options
                } else if (nodeName === "input" || nodeName === "textarea") {
                    dest.defaultValue = src.defaultValue;
                }
            }

            function domManip(collection, args, callback, ignored) {

                // Flatten any nested arrays
                args = concat.apply([], args);

                var fragment, first, scripts, hasScripts, node, doc,
                    i = 0,
                    l = collection.length,
                    iNoClone = l - 1,
                    value = args[0],
                    valueIsFunction = isFunction(value);

                // We can't cloneNode fragments that contain checked, in WebKit
                if (valueIsFunction ||
                    (l > 1 && typeof value === "string" &&
                        !support.checkClone && rchecked.test(value))) {
                    return collection.each(function (index) {
                        var self = collection.eq(index);
                        if (valueIsFunction) {
                            args[0] = value.call(this, index, self.html());
                        }
                        domManip(self, args, callback, ignored);
                    });
                }

                if (l) {
                    fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
                    first = fragment.firstChild;

                    if (fragment.childNodes.length === 1) {
                        fragment = first;
                    }

                    // Require either new content or an interest in ignored elements to invoke the callback
                    if (first || ignored) {
                        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
                        hasScripts = scripts.length;

                        // Use the original fragment for the last item
                        // instead of the first because it can end up
                        // being emptied incorrectly in certain situations (#8070).
                        for (; i < l; i++) {
                            node = fragment;

                            if (i !== iNoClone) {
                                node = jQuery.clone(node, true, true);

                                // Keep references to cloned scripts for later restoration
                                if (hasScripts) {

                                    // Support: Android <=4.0 only, PhantomJS 1 only
                                    // push.apply(_, arraylike) throws on ancient WebKit
                                    jQuery.merge(scripts, getAll(node, "script"));
                                }
                            }

                            callback.call(collection[i], node, i);
                        }

                        if (hasScripts) {
                            doc = scripts[scripts.length - 1].ownerDocument;

                            // Reenable scripts
                            jQuery.map(scripts, restoreScript);

                            // Evaluate executable scripts on first document insertion
                            for (i = 0; i < hasScripts; i++) {
                                node = scripts[i];
                                if (rscriptType.test(node.type || "") &&
                                    !dataPriv.access(node, "globalEval") &&
                                    jQuery.contains(doc, node)) {

                                    if (node.src && (node.type || "").toLowerCase() !== "module") {

                                        // Optional AJAX dependency, but won't run scripts if not present
                                        if (jQuery._evalUrl && !node.noModule) {
                                            jQuery._evalUrl(node.src, {
                                                nonce: node.nonce || node.getAttribute("nonce")
                                            });
                                        }
                                    } else {
                                        DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                                    }
                                }
                            }
                        }
                    }
                }

                return collection;
            }

            function remove(elem, selector, keepData) {
                var node,
                    nodes = selector ? jQuery.filter(selector, elem) : elem,
                    i = 0;

                for (; (node = nodes[i]) != null; i++) {
                    if (!keepData && node.nodeType === 1) {
                        jQuery.cleanData(getAll(node));
                    }

                    if (node.parentNode) {
                        if (keepData && isAttached(node)) {
                            setGlobalEval(getAll(node, "script"));
                        }
                        node.parentNode.removeChild(node);
                    }
                }

                return elem;
            }

            jQuery.extend({
                htmlPrefilter: function (html) {
                    return html.replace(rxhtmlTag, "<$1></$2>");
                },

                clone: function (elem, dataAndEvents, deepDataAndEvents) {
                    var i, l, srcElements, destElements,
                        clone = elem.cloneNode(true),
                        inPage = isAttached(elem);

                    // Fix IE cloning issues
                    if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) &&
                        !jQuery.isXMLDoc(elem)) {

                        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                        destElements = getAll(clone);
                        srcElements = getAll(elem);

                        for (i = 0, l = srcElements.length; i < l; i++) {
                            fixInput(srcElements[i], destElements[i]);
                        }
                    }

                    // Copy the events from the original to the clone
                    if (dataAndEvents) {
                        if (deepDataAndEvents) {
                            srcElements = srcElements || getAll(elem);
                            destElements = destElements || getAll(clone);

                            for (i = 0, l = srcElements.length; i < l; i++) {
                                cloneCopyEvent(srcElements[i], destElements[i]);
                            }
                        } else {
                            cloneCopyEvent(elem, clone);
                        }
                    }

                    // Preserve script evaluation history
                    destElements = getAll(clone, "script");
                    if (destElements.length > 0) {
                        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
                    }

                    // Return the cloned set
                    return clone;
                },

                cleanData: function (elems) {
                    var data, elem, type,
                        special = jQuery.event.special,
                        i = 0;

                    for (; (elem = elems[i]) !== undefined; i++) {
                        if (acceptData(elem)) {
                            if ((data = elem[dataPriv.expando])) {
                                if (data.events) {
                                    for (type in data.events) {
                                        if (special[type]) {
                                            jQuery.event.remove(elem, type);

                                            // This is a shortcut to avoid jQuery.event.remove's overhead
                                        } else {
                                            jQuery.removeEvent(elem, type, data.handle);
                                        }
                                    }
                                }

                                // Support: Chrome <=35 - 45+
                                // Assign undefined instead of using delete, see Data#remove
                                elem[dataPriv.expando] = undefined;
                            }
                            if (elem[dataUser.expando]) {

                                // Support: Chrome <=35 - 45+
                                // Assign undefined instead of using delete, see Data#remove
                                elem[dataUser.expando] = undefined;
                            }
                        }
                    }
                }
            });

            jQuery.fn.extend({
                detach: function (selector) {
                    return remove(this, selector, true);
                },

                remove: function (selector) {
                    return remove(this, selector);
                },

                text: function (value) {
                    return access(this, function (value) {
                        return value === undefined ?
                            jQuery.text(this) :
                            this.empty().each(function () {
                                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                                    this.textContent = value;
                                }
                            });
                    }, null, value, arguments.length);
                },

                append: function () {
                    return domManip(this, arguments, function (elem) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var target = manipulationTarget(this, elem);
                            target.appendChild(elem);
                        }
                    });
                },

                prepend: function () {
                    return domManip(this, arguments, function (elem) {
                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                            var target = manipulationTarget(this, elem);
                            target.insertBefore(elem, target.firstChild);
                        }
                    });
                },

                before: function () {
                    return domManip(this, arguments, function (elem) {
                        if (this.parentNode) {
                            this.parentNode.insertBefore(elem, this);
                        }
                    });
                },

                after: function () {
                    return domManip(this, arguments, function (elem) {
                        if (this.parentNode) {
                            this.parentNode.insertBefore(elem, this.nextSibling);
                        }
                    });
                },

                empty: function () {
                    var elem,
                        i = 0;

                    for (; (elem = this[i]) != null; i++) {
                        if (elem.nodeType === 1) {

                            // Prevent memory leaks
                            jQuery.cleanData(getAll(elem, false));

                            // Remove any remaining nodes
                            elem.textContent = "";
                        }
                    }

                    return this;
                },

                clone: function (dataAndEvents, deepDataAndEvents) {
                    dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
                    deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

                    return this.map(function () {
                        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
                    });
                },

                html: function (value) {
                    return access(this, function (value) {
                        var elem = this[0] || {},
                            i = 0,
                            l = this.length;

                        if (value === undefined && elem.nodeType === 1) {
                            return elem.innerHTML;
                        }

                        // See if we can take a shortcut and just use innerHTML
                        if (typeof value === "string" && !rnoInnerhtml.test(value) &&
                            !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {

                            value = jQuery.htmlPrefilter(value);

                            try {
                                for (; i < l; i++) {
                                    elem = this[i] || {};

                                    // Remove element nodes and prevent memory leaks
                                    if (elem.nodeType === 1) {
                                        jQuery.cleanData(getAll(elem, false));
                                        elem.innerHTML = value;
                                    }
                                }

                                elem = 0;

                                // If using innerHTML throws an exception, use the fallback method
                            } catch (e) {
                            }
                        }

                        if (elem) {
                            this.empty().append(value);
                        }
                    }, null, value, arguments.length);
                },

                replaceWith: function () {
                    var ignored = [];

                    // Make the changes, replacing each non-ignored context element with the new content
                    return domManip(this, arguments, function (elem) {
                        var parent = this.parentNode;

                        if (jQuery.inArray(this, ignored) < 0) {
                            jQuery.cleanData(getAll(this));
                            if (parent) {
                                parent.replaceChild(elem, this);
                            }
                        }

                        // Force callback invocation
                    }, ignored);
                }
            });

            jQuery.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function (name, original) {
                jQuery.fn[name] = function (selector) {
                    var elems,
                        ret = [],
                        insert = jQuery(selector),
                        last = insert.length - 1,
                        i = 0;

                    for (; i <= last; i++) {
                        elems = i === last ? this : this.clone(true);
                        jQuery(insert[i])[original](elems);

                        // Support: Android <=4.0 only, PhantomJS 1 only
                        // .get() because push.apply(_, arraylike) throws on ancient WebKit
                        push.apply(ret, elems.get());
                    }

                    return this.pushStack(ret);
                };
            });
            var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

            var getStyles = function (elem) {

                // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
                // IE throws on elements created in popups
                // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
                var view = elem.ownerDocument.defaultView;

                if (!view || !view.opener) {
                    view = window;
                }

                return view.getComputedStyle(elem);
            };

            var rboxStyle = new RegExp(cssExpand.join("|"), "i");


            (function () {

                // Executing both pixelPosition & boxSizingReliable tests require only one layout
                // so they're executed at the same time to save the second computation.
                function computeStyleTests() {

                    // This is a singleton, we need to execute it only once
                    if (!div) {
                        return;
                    }

                    container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
                        "margin-top:1px;padding:0;border:0";
                    div.style.cssText =
                        "position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
                        "margin:auto;border:1px;padding:1px;" +
                        "width:60%;top:1%";
                    documentElement.appendChild(container).appendChild(div);

                    var divStyle = window.getComputedStyle(div);
                    pixelPositionVal = divStyle.top !== "1%";

                    // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
                    reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;

                    // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
                    // Some styles come back with percentage values, even though they shouldn't
                    div.style.right = "60%";
                    pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;

                    // Support: IE 9 - 11 only
                    // Detect misreporting of content dimensions for box-sizing:border-box elements
                    boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;

                    // Support: IE 9 only
                    // Detect overflow:scroll screwiness (gh-3699)
                    // Support: Chrome <=64
                    // Don't get tricked when zoom affects offsetWidth (gh-4029)
                    div.style.position = "absolute";
                    scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;

                    documentElement.removeChild(container);

                    // Nullify the div so it wouldn't be stored in the memory and
                    // it will also be a sign that checks already performed
                    div = null;
                }

                function roundPixelMeasures(measure) {
                    return Math.round(parseFloat(measure));
                }

                var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
                    reliableMarginLeftVal,
                    container = document.createElement("div"),
                    div = document.createElement("div");

                // Finish early in limited (non-browser) environments
                if (!div.style) {
                    return;
                }

                // Support: IE <=9 - 11 only
                // Style of cloned element affects source element cloned (#8908)
                div.style.backgroundClip = "content-box";
                div.cloneNode(true).style.backgroundClip = "";
                support.clearCloneStyle = div.style.backgroundClip === "content-box";

                jQuery.extend(support, {
                    boxSizingReliable: function () {
                        computeStyleTests();
                        return boxSizingReliableVal;
                    },
                    pixelBoxStyles: function () {
                        computeStyleTests();
                        return pixelBoxStylesVal;
                    },
                    pixelPosition: function () {
                        computeStyleTests();
                        return pixelPositionVal;
                    },
                    reliableMarginLeft: function () {
                        computeStyleTests();
                        return reliableMarginLeftVal;
                    },
                    scrollboxSize: function () {
                        computeStyleTests();
                        return scrollboxSizeVal;
                    }
                });
            })();


            function curCSS(elem, name, computed) {
                var width, minWidth, maxWidth, ret,

                    // Support: Firefox 51+
                    // Retrieving style before computed somehow
                    // fixes an issue with getting wrong values
                    // on detached elements
                    style = elem.style;

                computed = computed || getStyles(elem);

                // getPropertyValue is needed for:
                //   .css('filter') (IE 9 only, #12537)
                //   .css('--customProperty) (#3144)
                if (computed) {
                    ret = computed.getPropertyValue(name) || computed[name];

                    if (ret === "" && !isAttached(elem)) {
                        ret = jQuery.style(elem, name);
                    }

                    // A tribute to the "awesome hack by Dean Edwards"
                    // Android Browser returns percentage for some values,
                    // but width seems to be reliably pixels.
                    // This is against the CSSOM draft spec:
                    // https://drafts.csswg.org/cssom/#resolved-values
                    if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {

                        // Remember the original values
                        width = style.width;
                        minWidth = style.minWidth;
                        maxWidth = style.maxWidth;

                        // Put in the new values to get a computed value out
                        style.minWidth = style.maxWidth = style.width = ret;
                        ret = computed.width;

                        // Revert the changed values
                        style.width = width;
                        style.minWidth = minWidth;
                        style.maxWidth = maxWidth;
                    }
                }

                return ret !== undefined ?

                    // Support: IE <=9 - 11 only
                    // IE returns zIndex value as an integer.
                    ret + "" :
                    ret;
            }


            function addGetHookIf(conditionFn, hookFn) {

                // Define the hook, we'll check on the first run if it's really needed.
                return {
                    get: function () {
                        if (conditionFn()) {

                            // Hook not needed (or it's not possible to use it due
                            // to missing dependency), remove it.
                            delete this.get;
                            return;
                        }

                        // Hook needed; redefine it so that the support test is not executed again.
                        return (this.get = hookFn).apply(this, arguments);
                    }
                };
            }


            var cssPrefixes = ["Webkit", "Moz", "ms"],
                emptyStyle = document.createElement("div").style,
                vendorProps = {};

// Return a vendor-prefixed property or undefined
            function vendorPropName(name) {

                // Check for vendor prefixed names
                var capName = name[0].toUpperCase() + name.slice(1),
                    i = cssPrefixes.length;

                while (i--) {
                    name = cssPrefixes[i] + capName;
                    if (name in emptyStyle) {
                        return name;
                    }
                }
            }

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
            function finalPropName(name) {
                var final = jQuery.cssProps[name] || vendorProps[name];

                if (final) {
                    return final;
                }
                if (name in emptyStyle) {
                    return name;
                }
                return vendorProps[name] = vendorPropName(name) || name;
            }


            var

                // Swappable if display is none or starts with table
                // except "table", "table-cell", or "table-caption"
                // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
                rdisplayswap = /^(none|table(?!-c[ea]).+)/,
                rcustomProp = /^--/,
                cssShow = {position: "absolute", visibility: "hidden", display: "block"},
                cssNormalTransform = {
                    letterSpacing: "0",
                    fontWeight: "400"
                };

            function setPositiveNumber(elem, value, subtract) {

                // Any relative (+/-) values have already been
                // normalized at this point
                var matches = rcssNum.exec(value);
                return matches ?

                    // Guard against undefined "subtract", e.g., when used as in cssHooks
                    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") :
                    value;
            }

            function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
                var i = dimension === "width" ? 1 : 0,
                    extra = 0,
                    delta = 0;

                // Adjustment may not be necessary
                if (box === (isBorderBox ? "border" : "content")) {
                    return 0;
                }

                for (; i < 4; i += 2) {

                    // Both box models exclude margin
                    if (box === "margin") {
                        delta += jQuery.css(elem, box + cssExpand[i], true, styles);
                    }

                    // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
                    if (!isBorderBox) {

                        // Add padding
                        delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles);

                        // For "border" or "margin", add border
                        if (box !== "padding") {
                            delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);

                            // But still keep track of it otherwise
                        } else {
                            extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
                        }

                        // If we get here with a border-box (content + padding + border), we're seeking "content" or
                        // "padding" or "margin"
                    } else {

                        // For "content", subtract padding
                        if (box === "content") {
                            delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
                        }

                        // For "content" or "padding", subtract border
                        if (box !== "margin") {
                            delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
                        }
                    }
                }

                // Account for positive content-box scroll gutter when requested by providing computedVal
                if (!isBorderBox && computedVal >= 0) {

                    // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
                    // Assuming integer scroll gutter, subtract the rest and round down
                    delta += Math.max(0, Math.ceil(
                        elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] -
                        computedVal -
                        delta -
                        extra -
                        0.5

                        // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
                        // Use an explicit zero to avoid NaN (gh-3964)
                    )) || 0;
                }

                return delta;
            }

            function getWidthOrHeight(elem, dimension, extra) {

                // Start with computed style
                var styles = getStyles(elem),

                    // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
                    // Fake content-box until we know it's needed to know the true value.
                    boxSizingNeeded = !support.boxSizingReliable() || extra,
                    isBorderBox = boxSizingNeeded &&
                        jQuery.css(elem, "boxSizing", false, styles) === "border-box",
                    valueIsBorderBox = isBorderBox,

                    val = curCSS(elem, dimension, styles),
                    offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);

                // Support: Firefox <=54
                // Return a confounding non-pixel value or feign ignorance, as appropriate.
                if (rnumnonpx.test(val)) {
                    if (!extra) {
                        return val;
                    }
                    val = "auto";
                }


                // Fall back to offsetWidth/offsetHeight when value is "auto"
                // This happens for inline elements with no explicit setting (gh-3571)
                // Support: Android <=4.1 - 4.3 only
                // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
                // Support: IE 9-11 only
                // Also use offsetWidth/offsetHeight for when box sizing is unreliable
                // We use getClientRects() to check for hidden/disconnected.
                // In those cases, the computed value can be trusted to be border-box
                if ((!support.boxSizingReliable() && isBorderBox ||
                    val === "auto" ||
                    !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") &&
                    elem.getClientRects().length) {

                    isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";

                    // Where available, offsetWidth/offsetHeight approximate border box dimensions.
                    // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
                    // retrieved value as a content box dimension.
                    valueIsBorderBox = offsetProp in elem;
                    if (valueIsBorderBox) {
                        val = elem[offsetProp];
                    }
                }

                // Normalize "" and auto
                val = parseFloat(val) || 0;

                // Adjust for the element's box model
                return (val +
                    boxModelAdjustment(
                        elem,
                        dimension,
                        extra || (isBorderBox ? "border" : "content"),
                        valueIsBorderBox,
                        styles,

                        // Provide the current computed size to request scroll gutter calculation (gh-3589)
                        val
                    )
                ) + "px";
            }

            jQuery.extend({

                // Add in style property hooks for overriding the default
                // behavior of getting and setting a style property
                cssHooks: {
                    opacity: {
                        get: function (elem, computed) {
                            if (computed) {

                                // We should always get a number back from opacity
                                var ret = curCSS(elem, "opacity");
                                return ret === "" ? "1" : ret;
                            }
                        }
                    }
                },

                // Don't automatically add "px" to these possibly-unitless properties
                cssNumber: {
                    "animationIterationCount": true,
                    "columnCount": true,
                    "fillOpacity": true,
                    "flexGrow": true,
                    "flexShrink": true,
                    "fontWeight": true,
                    "gridArea": true,
                    "gridColumn": true,
                    "gridColumnEnd": true,
                    "gridColumnStart": true,
                    "gridRow": true,
                    "gridRowEnd": true,
                    "gridRowStart": true,
                    "lineHeight": true,
                    "opacity": true,
                    "order": true,
                    "orphans": true,
                    "widows": true,
                    "zIndex": true,
                    "zoom": true
                },

                // Add in properties whose names you wish to fix before
                // setting or getting the value
                cssProps: {},

                // Get and set the style property on a DOM Node
                style: function (elem, name, value, extra) {

                    // Don't set styles on text and comment nodes
                    if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
                        return;
                    }

                    // Make sure that we're working with the right name
                    var ret, type, hooks,
                        origName = camelCase(name),
                        isCustomProp = rcustomProp.test(name),
                        style = elem.style;

                    // Make sure that we're working with the right name. We don't
                    // want to query the value if it is a CSS custom property
                    // since they are user-defined.
                    if (!isCustomProp) {
                        name = finalPropName(origName);
                    }

                    // Gets hook for the prefixed version, then unprefixed version
                    hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

                    // Check if we're setting a value
                    if (value !== undefined) {
                        type = typeof value;

                        // Convert "+=" or "-=" to relative numbers (#7345)
                        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                            value = adjustCSS(elem, name, ret);

                            // Fixes bug #9237
                            type = "number";
                        }

                        // Make sure that null and NaN values aren't set (#7116)
                        if (value == null || value !== value) {
                            return;
                        }

                        // If a number was passed in, add the unit (except for certain CSS properties)
                        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
                        // "px" to a few hardcoded values.
                        if (type === "number" && !isCustomProp) {
                            value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
                        }

                        // background-* props affect original clone's values
                        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
                            style[name] = "inherit";
                        }

                        // If a hook was provided, use that value, otherwise just set the specified value
                        if (!hooks || !("set" in hooks) ||
                            (value = hooks.set(elem, value, extra)) !== undefined) {

                            if (isCustomProp) {
                                style.setProperty(name, value);
                            } else {
                                style[name] = value;
                            }
                        }

                    } else {

                        // If a hook was provided get the non-computed value from there
                        if (hooks && "get" in hooks &&
                            (ret = hooks.get(elem, false, extra)) !== undefined) {

                            return ret;
                        }

                        // Otherwise just get the value from the style object
                        return style[name];
                    }
                },

                css: function (elem, name, extra, styles) {
                    var val, num, hooks,
                        origName = camelCase(name),
                        isCustomProp = rcustomProp.test(name);

                    // Make sure that we're working with the right name. We don't
                    // want to modify the value if it is a CSS custom property
                    // since they are user-defined.
                    if (!isCustomProp) {
                        name = finalPropName(origName);
                    }

                    // Try prefixed name followed by the unprefixed name
                    hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

                    // If a hook was provided get the computed value from there
                    if (hooks && "get" in hooks) {
                        val = hooks.get(elem, true, extra);
                    }

                    // Otherwise, if a way to get the computed value exists, use that
                    if (val === undefined) {
                        val = curCSS(elem, name, styles);
                    }

                    // Convert "normal" to computed value
                    if (val === "normal" && name in cssNormalTransform) {
                        val = cssNormalTransform[name];
                    }

                    // Make numeric if forced or a qualifier was provided and val looks numeric
                    if (extra === "" || extra) {
                        num = parseFloat(val);
                        return extra === true || isFinite(num) ? num || 0 : val;
                    }

                    return val;
                }
            });

            jQuery.each(["height", "width"], function (i, dimension) {
                jQuery.cssHooks[dimension] = {
                    get: function (elem, computed, extra) {
                        if (computed) {

                            // Certain elements can have dimension info if we invisibly show them
                            // but it must have a current display style that would benefit
                            return rdisplayswap.test(jQuery.css(elem, "display")) &&

                            // Support: Safari 8+
                            // Table columns in Safari have non-zero offsetWidth & zero
                            // getBoundingClientRect().width unless display is changed.
                            // Support: IE <=11 only
                            // Running getBoundingClientRect on a disconnected node
                            // in IE throws an error.
                            (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ?
                                swap(elem, cssShow, function () {
                                    return getWidthOrHeight(elem, dimension, extra);
                                }) :
                                getWidthOrHeight(elem, dimension, extra);
                        }
                    },

                    set: function (elem, value, extra) {
                        var matches,
                            styles = getStyles(elem),

                            // Only read styles.position if the test has a chance to fail
                            // to avoid forcing a reflow.
                            scrollboxSizeBuggy = !support.scrollboxSize() &&
                                styles.position === "absolute",

                            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
                            boxSizingNeeded = scrollboxSizeBuggy || extra,
                            isBorderBox = boxSizingNeeded &&
                                jQuery.css(elem, "boxSizing", false, styles) === "border-box",
                            subtract = extra ?
                                boxModelAdjustment(
                                    elem,
                                    dimension,
                                    extra,
                                    isBorderBox,
                                    styles
                                ) :
                                0;

                        // Account for unreliable border-box dimensions by comparing offset* to computed and
                        // faking a content-box to get border and padding (gh-3699)
                        if (isBorderBox && scrollboxSizeBuggy) {
                            subtract -= Math.ceil(
                                elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] -
                                parseFloat(styles[dimension]) -
                                boxModelAdjustment(elem, dimension, "border", false, styles) -
                                0.5
                            );
                        }

                        // Convert to pixels if value adjustment is needed
                        if (subtract && (matches = rcssNum.exec(value)) &&
                            (matches[3] || "px") !== "px") {

                            elem.style[dimension] = value;
                            value = jQuery.css(elem, dimension);
                        }

                        return setPositiveNumber(elem, value, subtract);
                    }
                };
            });

            jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft,
                function (elem, computed) {
                    if (computed) {
                        return (parseFloat(curCSS(elem, "marginLeft")) ||
                            elem.getBoundingClientRect().left -
                            swap(elem, {marginLeft: 0}, function () {
                                return elem.getBoundingClientRect().left;
                            })
                        ) + "px";
                    }
                }
            );

// These hooks are used by animate to expand properties
            jQuery.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function (prefix, suffix) {
                jQuery.cssHooks[prefix + suffix] = {
                    expand: function (value) {
                        var i = 0,
                            expanded = {},

                            // Assumes a single number if not a string
                            parts = typeof value === "string" ? value.split(" ") : [value];

                        for (; i < 4; i++) {
                            expanded[prefix + cssExpand[i] + suffix] =
                                parts[i] || parts[i - 2] || parts[0];
                        }

                        return expanded;
                    }
                };

                if (prefix !== "margin") {
                    jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
                }
            });

            jQuery.fn.extend({
                css: function (name, value) {
                    return access(this, function (elem, name, value) {
                        var styles, len,
                            map = {},
                            i = 0;

                        if (Array.isArray(name)) {
                            styles = getStyles(elem);
                            len = name.length;

                            for (; i < len; i++) {
                                map[name[i]] = jQuery.css(elem, name[i], false, styles);
                            }

                            return map;
                        }

                        return value !== undefined ?
                            jQuery.style(elem, name, value) :
                            jQuery.css(elem, name);
                    }, name, value, arguments.length > 1);
                }
            });


            function Tween(elem, options, prop, end, easing) {
                return new Tween.prototype.init(elem, options, prop, end, easing);
            }

            jQuery.Tween = Tween;

            Tween.prototype = {
                constructor: Tween,
                init: function (elem, options, prop, end, easing, unit) {
                    this.elem = elem;
                    this.prop = prop;
                    this.easing = easing || jQuery.easing._default;
                    this.options = options;
                    this.start = this.now = this.cur();
                    this.end = end;
                    this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
                },
                cur: function () {
                    var hooks = Tween.propHooks[this.prop];

                    return hooks && hooks.get ?
                        hooks.get(this) :
                        Tween.propHooks._default.get(this);
                },
                run: function (percent) {
                    var eased,
                        hooks = Tween.propHooks[this.prop];

                    if (this.options.duration) {
                        this.pos = eased = jQuery.easing[this.easing](
                            percent, this.options.duration * percent, 0, 1, this.options.duration
                        );
                    } else {
                        this.pos = eased = percent;
                    }
                    this.now = (this.end - this.start) * eased + this.start;

                    if (this.options.step) {
                        this.options.step.call(this.elem, this.now, this);
                    }

                    if (hooks && hooks.set) {
                        hooks.set(this);
                    } else {
                        Tween.propHooks._default.set(this);
                    }
                    return this;
                }
            };

            Tween.prototype.init.prototype = Tween.prototype;

            Tween.propHooks = {
                _default: {
                    get: function (tween) {
                        var result;

                        // Use a property on the element directly when it is not a DOM element,
                        // or when there is no matching style property that exists.
                        if (tween.elem.nodeType !== 1 ||
                            tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                            return tween.elem[tween.prop];
                        }

                        // Passing an empty string as a 3rd parameter to .css will automatically
                        // attempt a parseFloat and fallback to a string if the parse fails.
                        // Simple values such as "10px" are parsed to Float;
                        // complex values such as "rotate(1rad)" are returned as-is.
                        result = jQuery.css(tween.elem, tween.prop, "");

                        // Empty strings, null, undefined and "auto" are converted to 0.
                        return !result || result === "auto" ? 0 : result;
                    },
                    set: function (tween) {

                        // Use step hook for back compat.
                        // Use cssHook if its there.
                        // Use .style if available and use plain properties where available.
                        if (jQuery.fx.step[tween.prop]) {
                            jQuery.fx.step[tween.prop](tween);
                        } else if (tween.elem.nodeType === 1 && (
                            jQuery.cssHooks[tween.prop] ||
                            tween.elem.style[finalPropName(tween.prop)] != null)) {
                            jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                        } else {
                            tween.elem[tween.prop] = tween.now;
                        }
                    }
                }
            };

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
            Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
                set: function (tween) {
                    if (tween.elem.nodeType && tween.elem.parentNode) {
                        tween.elem[tween.prop] = tween.now;
                    }
                }
            };

            jQuery.easing = {
                linear: function (p) {
                    return p;
                },
                swing: function (p) {
                    return 0.5 - Math.cos(p * Math.PI) / 2;
                },
                _default: "swing"
            };

            jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
            jQuery.fx.step = {};


            var
                fxNow, inProgress,
                rfxtypes = /^(?:toggle|show|hide)$/,
                rrun = /queueHooks$/;

            function schedule() {
                if (inProgress) {
                    if (document.hidden === false && window.requestAnimationFrame) {
                        window.requestAnimationFrame(schedule);
                    } else {
                        window.setTimeout(schedule, jQuery.fx.interval);
                    }

                    jQuery.fx.tick();
                }
            }

// Animations created synchronously will run synchronously
            function createFxNow() {
                window.setTimeout(function () {
                    fxNow = undefined;
                });
                return (fxNow = Date.now());
            }

// Generate parameters to create a standard animation
            function genFx(type, includeWidth) {
                var which,
                    i = 0,
                    attrs = {height: type};

                // If we include width, step value is 1 to do all cssExpand values,
                // otherwise step value is 2 to skip over Left and Right
                includeWidth = includeWidth ? 1 : 0;
                for (; i < 4; i += 2 - includeWidth) {
                    which = cssExpand[i];
                    attrs["margin" + which] = attrs["padding" + which] = type;
                }

                if (includeWidth) {
                    attrs.opacity = attrs.width = type;
                }

                return attrs;
            }

            function createTween(value, prop, animation) {
                var tween,
                    collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
                    index = 0,
                    length = collection.length;
                for (; index < length; index++) {
                    if ((tween = collection[index].call(animation, prop, value))) {

                        // We're done with this property
                        return tween;
                    }
                }
            }

            function defaultPrefilter(elem, props, opts) {
                var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
                    isBox = "width" in props || "height" in props,
                    anim = this,
                    orig = {},
                    style = elem.style,
                    hidden = elem.nodeType && isHiddenWithinTree(elem),
                    dataShow = dataPriv.get(elem, "fxshow");

                // Queue-skipping animations hijack the fx hooks
                if (!opts.queue) {
                    hooks = jQuery._queueHooks(elem, "fx");
                    if (hooks.unqueued == null) {
                        hooks.unqueued = 0;
                        oldfire = hooks.empty.fire;
                        hooks.empty.fire = function () {
                            if (!hooks.unqueued) {
                                oldfire();
                            }
                        };
                    }
                    hooks.unqueued++;

                    anim.always(function () {

                        // Ensure the complete handler is called before this completes
                        anim.always(function () {
                            hooks.unqueued--;
                            if (!jQuery.queue(elem, "fx").length) {
                                hooks.empty.fire();
                            }
                        });
                    });
                }

                // Detect show/hide animations
                for (prop in props) {
                    value = props[prop];
                    if (rfxtypes.test(value)) {
                        delete props[prop];
                        toggle = toggle || value === "toggle";
                        if (value === (hidden ? "hide" : "show")) {

                            // Pretend to be hidden if this is a "show" and
                            // there is still data from a stopped show/hide
                            if (value === "show" && dataShow && dataShow[prop] !== undefined) {
                                hidden = true;

                                // Ignore all other no-op show/hide data
                            } else {
                                continue;
                            }
                        }
                        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
                    }
                }

                // Bail out if this is a no-op like .hide().hide()
                propTween = !jQuery.isEmptyObject(props);
                if (!propTween && jQuery.isEmptyObject(orig)) {
                    return;
                }

                // Restrict "overflow" and "display" styles during box animations
                if (isBox && elem.nodeType === 1) {

                    // Support: IE <=9 - 11, Edge 12 - 15
                    // Record all 3 overflow attributes because IE does not infer the shorthand
                    // from identically-valued overflowX and overflowY and Edge just mirrors
                    // the overflowX value there.
                    opts.overflow = [style.overflow, style.overflowX, style.overflowY];

                    // Identify a display type, preferring old show/hide data over the CSS cascade
                    restoreDisplay = dataShow && dataShow.display;
                    if (restoreDisplay == null) {
                        restoreDisplay = dataPriv.get(elem, "display");
                    }
                    display = jQuery.css(elem, "display");
                    if (display === "none") {
                        if (restoreDisplay) {
                            display = restoreDisplay;
                        } else {

                            // Get nonempty value(s) by temporarily forcing visibility
                            showHide([elem], true);
                            restoreDisplay = elem.style.display || restoreDisplay;
                            display = jQuery.css(elem, "display");
                            showHide([elem]);
                        }
                    }

                    // Animate inline elements as inline-block
                    if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
                        if (jQuery.css(elem, "float") === "none") {

                            // Restore the original display value at the end of pure show/hide animations
                            if (!propTween) {
                                anim.done(function () {
                                    style.display = restoreDisplay;
                                });
                                if (restoreDisplay == null) {
                                    display = style.display;
                                    restoreDisplay = display === "none" ? "" : display;
                                }
                            }
                            style.display = "inline-block";
                        }
                    }
                }

                if (opts.overflow) {
                    style.overflow = "hidden";
                    anim.always(function () {
                        style.overflow = opts.overflow[0];
                        style.overflowX = opts.overflow[1];
                        style.overflowY = opts.overflow[2];
                    });
                }

                // Implement show/hide animations
                propTween = false;
                for (prop in orig) {

                    // General show/hide setup for this element animation
                    if (!propTween) {
                        if (dataShow) {
                            if ("hidden" in dataShow) {
                                hidden = dataShow.hidden;
                            }
                        } else {
                            dataShow = dataPriv.access(elem, "fxshow", {display: restoreDisplay});
                        }

                        // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                        if (toggle) {
                            dataShow.hidden = !hidden;
                        }

                        // Show elements before animating them
                        if (hidden) {
                            showHide([elem], true);
                        }

                        /* eslint-disable no-loop-func */

                        anim.done(function () {

                            /* eslint-enable no-loop-func */

                            // The final step of a "hide" animation is actually hiding the element
                            if (!hidden) {
                                showHide([elem]);
                            }
                            dataPriv.remove(elem, "fxshow");
                            for (prop in orig) {
                                jQuery.style(elem, prop, orig[prop]);
                            }
                        });
                    }

                    // Per-property setup
                    propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
                    if (!(prop in dataShow)) {
                        dataShow[prop] = propTween.start;
                        if (hidden) {
                            propTween.end = propTween.start;
                            propTween.start = 0;
                        }
                    }
                }
            }

            function propFilter(props, specialEasing) {
                var index, name, easing, value, hooks;

                // camelCase, specialEasing and expand cssHook pass
                for (index in props) {
                    name = camelCase(index);
                    easing = specialEasing[name];
                    value = props[index];
                    if (Array.isArray(value)) {
                        easing = value[1];
                        value = props[index] = value[0];
                    }

                    if (index !== name) {
                        props[name] = value;
                        delete props[index];
                    }

                    hooks = jQuery.cssHooks[name];
                    if (hooks && "expand" in hooks) {
                        value = hooks.expand(value);
                        delete props[name];

                        // Not quite $.extend, this won't overwrite existing keys.
                        // Reusing 'index' because we have the correct "name"
                        for (index in value) {
                            if (!(index in props)) {
                                props[index] = value[index];
                                specialEasing[index] = easing;
                            }
                        }
                    } else {
                        specialEasing[name] = easing;
                    }
                }
            }

            function Animation(elem, properties, options) {
                var result,
                    stopped,
                    index = 0,
                    length = Animation.prefilters.length,
                    deferred = jQuery.Deferred().always(function () {

                        // Don't match elem in the :animated selector
                        delete tick.elem;
                    }),
                    tick = function () {
                        if (stopped) {
                            return false;
                        }
                        var currentTime = fxNow || createFxNow(),
                            remaining = Math.max(0, animation.startTime + animation.duration - currentTime),

                            // Support: Android 2.3 only
                            // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
                            temp = remaining / animation.duration || 0,
                            percent = 1 - temp,
                            index = 0,
                            length = animation.tweens.length;

                        for (; index < length; index++) {
                            animation.tweens[index].run(percent);
                        }

                        deferred.notifyWith(elem, [animation, percent, remaining]);

                        // If there's more to do, yield
                        if (percent < 1 && length) {
                            return remaining;
                        }

                        // If this was an empty animation, synthesize a final progress notification
                        if (!length) {
                            deferred.notifyWith(elem, [animation, 1, 0]);
                        }

                        // Resolve the animation and report its conclusion
                        deferred.resolveWith(elem, [animation]);
                        return false;
                    },
                    animation = deferred.promise({
                        elem: elem,
                        props: jQuery.extend({}, properties),
                        opts: jQuery.extend(true, {
                            specialEasing: {},
                            easing: jQuery.easing._default
                        }, options),
                        originalProperties: properties,
                        originalOptions: options,
                        startTime: fxNow || createFxNow(),
                        duration: options.duration,
                        tweens: [],
                        createTween: function (prop, end) {
                            var tween = jQuery.Tween(elem, animation.opts, prop, end,
                                animation.opts.specialEasing[prop] || animation.opts.easing);
                            animation.tweens.push(tween);
                            return tween;
                        },
                        stop: function (gotoEnd) {
                            var index = 0,

                                // If we are going to the end, we want to run all the tweens
                                // otherwise we skip this part
                                length = gotoEnd ? animation.tweens.length : 0;
                            if (stopped) {
                                return this;
                            }
                            stopped = true;
                            for (; index < length; index++) {
                                animation.tweens[index].run(1);
                            }

                            // Resolve when we played the last frame; otherwise, reject
                            if (gotoEnd) {
                                deferred.notifyWith(elem, [animation, 1, 0]);
                                deferred.resolveWith(elem, [animation, gotoEnd]);
                            } else {
                                deferred.rejectWith(elem, [animation, gotoEnd]);
                            }
                            return this;
                        }
                    }),
                    props = animation.props;

                propFilter(props, animation.opts.specialEasing);

                for (; index < length; index++) {
                    result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
                    if (result) {
                        if (isFunction(result.stop)) {
                            jQuery._queueHooks(animation.elem, animation.opts.queue).stop =
                                result.stop.bind(result);
                        }
                        return result;
                    }
                }

                jQuery.map(props, createTween, animation);

                if (isFunction(animation.opts.start)) {
                    animation.opts.start.call(elem, animation);
                }

                // Attach callbacks from options
                animation
                    .progress(animation.opts.progress)
                    .done(animation.opts.done, animation.opts.complete)
                    .fail(animation.opts.fail)
                    .always(animation.opts.always);

                jQuery.fx.timer(
                    jQuery.extend(tick, {
                        elem: elem,
                        anim: animation,
                        queue: animation.opts.queue
                    })
                );

                return animation;
            }

            jQuery.Animation = jQuery.extend(Animation, {

                tweeners: {
                    "*": [function (prop, value) {
                        var tween = this.createTween(prop, value);
                        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                        return tween;
                    }]
                },

                tweener: function (props, callback) {
                    if (isFunction(props)) {
                        callback = props;
                        props = ["*"];
                    } else {
                        props = props.match(rnothtmlwhite);
                    }

                    var prop,
                        index = 0,
                        length = props.length;

                    for (; index < length; index++) {
                        prop = props[index];
                        Animation.tweeners[prop] = Animation.tweeners[prop] || [];
                        Animation.tweeners[prop].unshift(callback);
                    }
                },

                prefilters: [defaultPrefilter],

                prefilter: function (callback, prepend) {
                    if (prepend) {
                        Animation.prefilters.unshift(callback);
                    } else {
                        Animation.prefilters.push(callback);
                    }
                }
            });

            jQuery.speed = function (speed, easing, fn) {
                var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
                    complete: fn || !fn && easing ||
                        isFunction(speed) && speed,
                    duration: speed,
                    easing: fn && easing || easing && !isFunction(easing) && easing
                };

                // Go to the end state if fx are off
                if (jQuery.fx.off) {
                    opt.duration = 0;

                } else {
                    if (typeof opt.duration !== "number") {
                        if (opt.duration in jQuery.fx.speeds) {
                            opt.duration = jQuery.fx.speeds[opt.duration];

                        } else {
                            opt.duration = jQuery.fx.speeds._default;
                        }
                    }
                }

                // Normalize opt.queue - true/undefined/null -> "fx"
                if (opt.queue == null || opt.queue === true) {
                    opt.queue = "fx";
                }

                // Queueing
                opt.old = opt.complete;

                opt.complete = function () {
                    if (isFunction(opt.old)) {
                        opt.old.call(this);
                    }

                    if (opt.queue) {
                        jQuery.dequeue(this, opt.queue);
                    }
                };

                return opt;
            };

            jQuery.fn.extend({
                fadeTo: function (speed, to, easing, callback) {

                    // Show any hidden elements after setting opacity to 0
                    return this.filter(isHiddenWithinTree).css("opacity", 0).show()

                    // Animate to the value specified
                        .end().animate({opacity: to}, speed, easing, callback);
                },
                animate: function (prop, speed, easing, callback) {
                    var empty = jQuery.isEmptyObject(prop),
                        optall = jQuery.speed(speed, easing, callback),
                        doAnimation = function () {

                            // Operate on a copy of prop so per-property easing won't be lost
                            var anim = Animation(this, jQuery.extend({}, prop), optall);

                            // Empty animations, or finishing resolves immediately
                            if (empty || dataPriv.get(this, "finish")) {
                                anim.stop(true);
                            }
                        };
                    doAnimation.finish = doAnimation;

                    return empty || optall.queue === false ?
                        this.each(doAnimation) :
                        this.queue(optall.queue, doAnimation);
                },
                stop: function (type, clearQueue, gotoEnd) {
                    var stopQueue = function (hooks) {
                        var stop = hooks.stop;
                        delete hooks.stop;
                        stop(gotoEnd);
                    };

                    if (typeof type !== "string") {
                        gotoEnd = clearQueue;
                        clearQueue = type;
                        type = undefined;
                    }
                    if (clearQueue && type !== false) {
                        this.queue(type || "fx", []);
                    }

                    return this.each(function () {
                        var dequeue = true,
                            index = type != null && type + "queueHooks",
                            timers = jQuery.timers,
                            data = dataPriv.get(this);

                        if (index) {
                            if (data[index] && data[index].stop) {
                                stopQueue(data[index]);
                            }
                        } else {
                            for (index in data) {
                                if (data[index] && data[index].stop && rrun.test(index)) {
                                    stopQueue(data[index]);
                                }
                            }
                        }

                        for (index = timers.length; index--;) {
                            if (timers[index].elem === this &&
                                (type == null || timers[index].queue === type)) {

                                timers[index].anim.stop(gotoEnd);
                                dequeue = false;
                                timers.splice(index, 1);
                            }
                        }

                        // Start the next in the queue if the last step wasn't forced.
                        // Timers currently will call their complete callbacks, which
                        // will dequeue but only if they were gotoEnd.
                        if (dequeue || !gotoEnd) {
                            jQuery.dequeue(this, type);
                        }
                    });
                },
                finish: function (type) {
                    if (type !== false) {
                        type = type || "fx";
                    }
                    return this.each(function () {
                        var index,
                            data = dataPriv.get(this),
                            queue = data[type + "queue"],
                            hooks = data[type + "queueHooks"],
                            timers = jQuery.timers,
                            length = queue ? queue.length : 0;

                        // Enable finishing flag on private data
                        data.finish = true;

                        // Empty the queue first
                        jQuery.queue(this, type, []);

                        if (hooks && hooks.stop) {
                            hooks.stop.call(this, true);
                        }

                        // Look for any active animations, and finish them
                        for (index = timers.length; index--;) {
                            if (timers[index].elem === this && timers[index].queue === type) {
                                timers[index].anim.stop(true);
                                timers.splice(index, 1);
                            }
                        }

                        // Look for any animations in the old queue and finish them
                        for (index = 0; index < length; index++) {
                            if (queue[index] && queue[index].finish) {
                                queue[index].finish.call(this);
                            }
                        }

                        // Turn off finishing flag
                        delete data.finish;
                    });
                }
            });

            jQuery.each(["toggle", "show", "hide"], function (i, name) {
                var cssFn = jQuery.fn[name];
                jQuery.fn[name] = function (speed, easing, callback) {
                    return speed == null || typeof speed === "boolean" ?
                        cssFn.apply(this, arguments) :
                        this.animate(genFx(name, true), speed, easing, callback);
                };
            });

// Generate shortcuts for custom animations
            jQuery.each({
                slideDown: genFx("show"),
                slideUp: genFx("hide"),
                slideToggle: genFx("toggle"),
                fadeIn: {opacity: "show"},
                fadeOut: {opacity: "hide"},
                fadeToggle: {opacity: "toggle"}
            }, function (name, props) {
                jQuery.fn[name] = function (speed, easing, callback) {
                    return this.animate(props, speed, easing, callback);
                };
            });

            jQuery.timers = [];
            jQuery.fx.tick = function () {
                var timer,
                    i = 0,
                    timers = jQuery.timers;

                fxNow = Date.now();

                for (; i < timers.length; i++) {
                    timer = timers[i];

                    // Run the timer and safely remove it when done (allowing for external removal)
                    if (!timer() && timers[i] === timer) {
                        timers.splice(i--, 1);
                    }
                }

                if (!timers.length) {
                    jQuery.fx.stop();
                }
                fxNow = undefined;
            };

            jQuery.fx.timer = function (timer) {
                jQuery.timers.push(timer);
                jQuery.fx.start();
            };

            jQuery.fx.interval = 13;
            jQuery.fx.start = function () {
                if (inProgress) {
                    return;
                }

                inProgress = true;
                schedule();
            };

            jQuery.fx.stop = function () {
                inProgress = null;
            };

            jQuery.fx.speeds = {
                slow: 600,
                fast: 200,

                // Default speed
                _default: 400
            };


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
            jQuery.fn.delay = function (time, type) {
                time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
                type = type || "fx";

                return this.queue(type, function (next, hooks) {
                    var timeout = window.setTimeout(next, time);
                    hooks.stop = function () {
                        window.clearTimeout(timeout);
                    };
                });
            };


            (function () {
                var input = document.createElement("input"),
                    select = document.createElement("select"),
                    opt = select.appendChild(document.createElement("option"));

                input.type = "checkbox";

                // Support: Android <=4.3 only
                // Default value for a checkbox should be "on"
                support.checkOn = input.value !== "";

                // Support: IE <=11 only
                // Must access selectedIndex to make default options select
                support.optSelected = opt.selected;

                // Support: IE <=11 only
                // An input loses its value after becoming a radio
                input = document.createElement("input");
                input.value = "t";
                input.type = "radio";
                support.radioValue = input.value === "t";
            })();


            var boolHook,
                attrHandle = jQuery.expr.attrHandle;

            jQuery.fn.extend({
                attr: function (name, value) {
                    return access(this, jQuery.attr, name, value, arguments.length > 1);
                },

                removeAttr: function (name) {
                    return this.each(function () {
                        jQuery.removeAttr(this, name);
                    });
                }
            });

            jQuery.extend({
                attr: function (elem, name, value) {
                    var ret, hooks,
                        nType = elem.nodeType;

                    // Don't get/set attributes on text, comment and attribute nodes
                    if (nType === 3 || nType === 8 || nType === 2) {
                        return;
                    }

                    // Fallback to prop when attributes are not supported
                    if (typeof elem.getAttribute === "undefined") {
                        return jQuery.prop(elem, name, value);
                    }

                    // Attribute hooks are determined by the lowercase version
                    // Grab necessary hook if one is defined
                    if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                        hooks = jQuery.attrHooks[name.toLowerCase()] ||
                            (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
                    }

                    if (value !== undefined) {
                        if (value === null) {
                            jQuery.removeAttr(elem, name);
                            return;
                        }

                        if (hooks && "set" in hooks &&
                            (ret = hooks.set(elem, value, name)) !== undefined) {
                            return ret;
                        }

                        elem.setAttribute(name, value + "");
                        return value;
                    }

                    if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
                        return ret;
                    }

                    ret = jQuery.find.attr(elem, name);

                    // Non-existent attributes return null, we normalize to undefined
                    return ret == null ? undefined : ret;
                },

                attrHooks: {
                    type: {
                        set: function (elem, value) {
                            if (!support.radioValue && value === "radio" &&
                                nodeName(elem, "input")) {
                                var val = elem.value;
                                elem.setAttribute("type", value);
                                if (val) {
                                    elem.value = val;
                                }
                                return value;
                            }
                        }
                    }
                },

                removeAttr: function (elem, value) {
                    var name,
                        i = 0,

                        // Attribute names can contain non-HTML whitespace characters
                        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
                        attrNames = value && value.match(rnothtmlwhite);

                    if (attrNames && elem.nodeType === 1) {
                        while ((name = attrNames[i++])) {
                            elem.removeAttribute(name);
                        }
                    }
                }
            });

// Hooks for boolean attributes
            boolHook = {
                set: function (elem, value, name) {
                    if (value === false) {

                        // Remove boolean attributes when set to false
                        jQuery.removeAttr(elem, name);
                    } else {
                        elem.setAttribute(name, name);
                    }
                    return name;
                }
            };

            jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
                var getter = attrHandle[name] || jQuery.find.attr;

                attrHandle[name] = function (elem, name, isXML) {
                    var ret, handle,
                        lowercaseName = name.toLowerCase();

                    if (!isXML) {

                        // Avoid an infinite loop by temporarily removing this function from the getter
                        handle = attrHandle[lowercaseName];
                        attrHandle[lowercaseName] = ret;
                        ret = getter(elem, name, isXML) != null ?
                            lowercaseName :
                            null;
                        attrHandle[lowercaseName] = handle;
                    }
                    return ret;
                };
            });


            var rfocusable = /^(?:input|select|textarea|button)$/i,
                rclickable = /^(?:a|area)$/i;

            jQuery.fn.extend({
                prop: function (name, value) {
                    return access(this, jQuery.prop, name, value, arguments.length > 1);
                },

                removeProp: function (name) {
                    return this.each(function () {
                        delete this[jQuery.propFix[name] || name];
                    });
                }
            });

            jQuery.extend({
                prop: function (elem, name, value) {
                    var ret, hooks,
                        nType = elem.nodeType;

                    // Don't get/set properties on text, comment and attribute nodes
                    if (nType === 3 || nType === 8 || nType === 2) {
                        return;
                    }

                    if (nType !== 1 || !jQuery.isXMLDoc(elem)) {

                        // Fix name and attach hooks
                        name = jQuery.propFix[name] || name;
                        hooks = jQuery.propHooks[name];
                    }

                    if (value !== undefined) {
                        if (hooks && "set" in hooks &&
                            (ret = hooks.set(elem, value, name)) !== undefined) {
                            return ret;
                        }

                        return (elem[name] = value);
                    }

                    if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
                        return ret;
                    }

                    return elem[name];
                },

                propHooks: {
                    tabIndex: {
                        get: function (elem) {

                            // Support: IE <=9 - 11 only
                            // elem.tabIndex doesn't always return the
                            // correct value when it hasn't been explicitly set
                            // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                            // Use proper attribute retrieval(#12072)
                            var tabindex = jQuery.find.attr(elem, "tabindex");

                            if (tabindex) {
                                return parseInt(tabindex, 10);
                            }

                            if (
                                rfocusable.test(elem.nodeName) ||
                                rclickable.test(elem.nodeName) &&
                                elem.href
                            ) {
                                return 0;
                            }

                            return -1;
                        }
                    }
                },

                propFix: {
                    "for": "htmlFor",
                    "class": "className"
                }
            });

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
            if (!support.optSelected) {
                jQuery.propHooks.selected = {
                    get: function (elem) {

                        /* eslint no-unused-expressions: "off" */

                        var parent = elem.parentNode;
                        if (parent && parent.parentNode) {
                            parent.parentNode.selectedIndex;
                        }
                        return null;
                    },
                    set: function (elem) {

                        /* eslint no-unused-expressions: "off" */

                        var parent = elem.parentNode;
                        if (parent) {
                            parent.selectedIndex;

                            if (parent.parentNode) {
                                parent.parentNode.selectedIndex;
                            }
                        }
                    }
                };
            }

            jQuery.each([
                "tabIndex",
                "readOnly",
                "maxLength",
                "cellSpacing",
                "cellPadding",
                "rowSpan",
                "colSpan",
                "useMap",
                "frameBorder",
                "contentEditable"
            ], function () {
                jQuery.propFix[this.toLowerCase()] = this;
            });


            // Strip and collapse whitespace according to HTML spec
            // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
            function stripAndCollapse(value) {
                var tokens = value.match(rnothtmlwhite) || [];
                return tokens.join(" ");
            }


            function getClass(elem) {
                return elem.getAttribute && elem.getAttribute("class") || "";
            }

            function classesToArray(value) {
                if (Array.isArray(value)) {
                    return value;
                }
                if (typeof value === "string") {
                    return value.match(rnothtmlwhite) || [];
                }
                return [];
            }

            jQuery.fn.extend({
                addClass: function (value) {
                    var classes, elem, cur, curValue, clazz, j, finalValue,
                        i = 0;

                    if (isFunction(value)) {
                        return this.each(function (j) {
                            jQuery(this).addClass(value.call(this, j, getClass(this)));
                        });
                    }

                    classes = classesToArray(value);

                    if (classes.length) {
                        while ((elem = this[i++])) {
                            curValue = getClass(elem);
                            cur = elem.nodeType === 1 && (" " + stripAndCollapse(curValue) + " ");

                            if (cur) {
                                j = 0;
                                while ((clazz = classes[j++])) {
                                    if (cur.indexOf(" " + clazz + " ") < 0) {
                                        cur += clazz + " ";
                                    }
                                }

                                // Only assign if different to avoid unneeded rendering.
                                finalValue = stripAndCollapse(cur);
                                if (curValue !== finalValue) {
                                    elem.setAttribute("class", finalValue);
                                }
                            }
                        }
                    }

                    return this;
                },

                removeClass: function (value) {
                    var classes, elem, cur, curValue, clazz, j, finalValue,
                        i = 0;

                    if (isFunction(value)) {
                        return this.each(function (j) {
                            jQuery(this).removeClass(value.call(this, j, getClass(this)));
                        });
                    }

                    if (!arguments.length) {
                        return this.attr("class", "");
                    }

                    classes = classesToArray(value);

                    if (classes.length) {
                        while ((elem = this[i++])) {
                            curValue = getClass(elem);

                            // This expression is here for better compressibility (see addClass)
                            cur = elem.nodeType === 1 && (" " + stripAndCollapse(curValue) + " ");

                            if (cur) {
                                j = 0;
                                while ((clazz = classes[j++])) {

                                    // Remove *all* instances
                                    while (cur.indexOf(" " + clazz + " ") > -1) {
                                        cur = cur.replace(" " + clazz + " ", " ");
                                    }
                                }

                                // Only assign if different to avoid unneeded rendering.
                                finalValue = stripAndCollapse(cur);
                                if (curValue !== finalValue) {
                                    elem.setAttribute("class", finalValue);
                                }
                            }
                        }
                    }

                    return this;
                },

                toggleClass: function (value, stateVal) {
                    var type = typeof value,
                        isValidValue = type === "string" || Array.isArray(value);

                    if (typeof stateVal === "boolean" && isValidValue) {
                        return stateVal ? this.addClass(value) : this.removeClass(value);
                    }

                    if (isFunction(value)) {
                        return this.each(function (i) {
                            jQuery(this).toggleClass(
                                value.call(this, i, getClass(this), stateVal),
                                stateVal
                            );
                        });
                    }

                    return this.each(function () {
                        var className, i, self, classNames;

                        if (isValidValue) {

                            // Toggle individual class names
                            i = 0;
                            self = jQuery(this);
                            classNames = classesToArray(value);

                            while ((className = classNames[i++])) {

                                // Check each className given, space separated list
                                if (self.hasClass(className)) {
                                    self.removeClass(className);
                                } else {
                                    self.addClass(className);
                                }
                            }

                            // Toggle whole class name
                        } else if (value === undefined || type === "boolean") {
                            className = getClass(this);
                            if (className) {

                                // Store className if set
                                dataPriv.set(this, "__className__", className);
                            }

                            // If the element has a class name or if we're passed `false`,
                            // then remove the whole classname (if there was one, the above saved it).
                            // Otherwise bring back whatever was previously saved (if anything),
                            // falling back to the empty string if nothing was stored.
                            if (this.setAttribute) {
                                this.setAttribute("class",
                                    className || value === false ?
                                        "" :
                                        dataPriv.get(this, "__className__") || ""
                                );
                            }
                        }
                    });
                },

                hasClass: function (selector) {
                    var className, elem,
                        i = 0;

                    className = " " + selector + " ";
                    while ((elem = this[i++])) {
                        if (elem.nodeType === 1 &&
                            (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
                            return true;
                        }
                    }

                    return false;
                }
            });


            var rreturn = /\r/g;

            jQuery.fn.extend({
                val: function (value) {
                    var hooks, ret, valueIsFunction,
                        elem = this[0];

                    if (!arguments.length) {
                        if (elem) {
                            hooks = jQuery.valHooks[elem.type] ||
                                jQuery.valHooks[elem.nodeName.toLowerCase()];

                            if (hooks &&
                                "get" in hooks &&
                                (ret = hooks.get(elem, "value")) !== undefined
                            ) {
                                return ret;
                            }

                            ret = elem.value;

                            // Handle most common string cases
                            if (typeof ret === "string") {
                                return ret.replace(rreturn, "");
                            }

                            // Handle cases where value is null/undef or number
                            return ret == null ? "" : ret;
                        }

                        return;
                    }

                    valueIsFunction = isFunction(value);

                    return this.each(function (i) {
                        var val;

                        if (this.nodeType !== 1) {
                            return;
                        }

                        if (valueIsFunction) {
                            val = value.call(this, i, jQuery(this).val());
                        } else {
                            val = value;
                        }

                        // Treat null/undefined as ""; convert numbers to string
                        if (val == null) {
                            val = "";

                        } else if (typeof val === "number") {
                            val += "";

                        } else if (Array.isArray(val)) {
                            val = jQuery.map(val, function (value) {
                                return value == null ? "" : value + "";
                            });
                        }

                        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];

                        // If set returns undefined, fall back to normal setting
                        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
                            this.value = val;
                        }
                    });
                }
            });

            jQuery.extend({
                valHooks: {
                    option: {
                        get: function (elem) {

                            var val = jQuery.find.attr(elem, "value");
                            return val != null ?
                                val :

                                // Support: IE <=10 - 11 only
                                // option.text throws exceptions (#14686, #14858)
                                // Strip and collapse whitespace
                                // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                                stripAndCollapse(jQuery.text(elem));
                        }
                    },
                    select: {
                        get: function (elem) {
                            var value, option, i,
                                options = elem.options,
                                index = elem.selectedIndex,
                                one = elem.type === "select-one",
                                values = one ? null : [],
                                max = one ? index + 1 : options.length;

                            if (index < 0) {
                                i = max;

                            } else {
                                i = one ? index : 0;
                            }

                            // Loop through all the selected options
                            for (; i < max; i++) {
                                option = options[i];

                                // Support: IE <=9 only
                                // IE8-9 doesn't update selected after form reset (#2551)
                                if ((option.selected || i === index) &&

                                    // Don't return options that are disabled or in a disabled optgroup
                                    !option.disabled &&
                                    (!option.parentNode.disabled ||
                                        !nodeName(option.parentNode, "optgroup"))) {

                                    // Get the specific value for the option
                                    value = jQuery(option).val();

                                    // We don't need an array for one selects
                                    if (one) {
                                        return value;
                                    }

                                    // Multi-Selects return an array
                                    values.push(value);
                                }
                            }

                            return values;
                        },

                        set: function (elem, value) {
                            var optionSet, option,
                                options = elem.options,
                                values = jQuery.makeArray(value),
                                i = options.length;

                            while (i--) {
                                option = options[i];

                                /* eslint-disable no-cond-assign */

                                if (option.selected =
                                    jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1
                                ) {
                                    optionSet = true;
                                }

                                /* eslint-enable no-cond-assign */
                            }

                            // Force browsers to behave consistently when non-matching value is set
                            if (!optionSet) {
                                elem.selectedIndex = -1;
                            }
                            return values;
                        }
                    }
                }
            });

// Radios and checkboxes getter/setter
            jQuery.each(["radio", "checkbox"], function () {
                jQuery.valHooks[this] = {
                    set: function (elem, value) {
                        if (Array.isArray(value)) {
                            return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1);
                        }
                    }
                };
                if (!support.checkOn) {
                    jQuery.valHooks[this].get = function (elem) {
                        return elem.getAttribute("value") === null ? "on" : elem.value;
                    };
                }
            });


// Return jQuery for attributes-only inclusion


            support.focusin = "onfocusin" in window;


            var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
                stopPropagationCallback = function (e) {
                    e.stopPropagation();
                };

            jQuery.extend(jQuery.event, {

                trigger: function (event, data, elem, onlyHandlers) {

                    var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
                        eventPath = [elem || document],
                        type = hasOwn.call(event, "type") ? event.type : event,
                        namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];

                    cur = lastElement = tmp = elem = elem || document;

                    // Don't do events on text and comment nodes
                    if (elem.nodeType === 3 || elem.nodeType === 8) {
                        return;
                    }

                    // focus/blur morphs to focusin/out; ensure we're not firing them right now
                    if (rfocusMorph.test(type + jQuery.event.triggered)) {
                        return;
                    }

                    if (type.indexOf(".") > -1) {

                        // Namespaced trigger; create a regexp to match event type in handle()
                        namespaces = type.split(".");
                        type = namespaces.shift();
                        namespaces.sort();
                    }
                    ontype = type.indexOf(":") < 0 && "on" + type;

                    // Caller can pass in a jQuery.Event object, Object, or just an event type string
                    event = event[jQuery.expando] ?
                        event :
                        new jQuery.Event(type, typeof event === "object" && event);

                    // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
                    event.isTrigger = onlyHandlers ? 2 : 3;
                    event.namespace = namespaces.join(".");
                    event.rnamespace = event.namespace ?
                        new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") :
                        null;

                    // Clean up the event in case it is being reused
                    event.result = undefined;
                    if (!event.target) {
                        event.target = elem;
                    }

                    // Clone any incoming data and prepend the event, creating the handler arg list
                    data = data == null ?
                        [event] :
                        jQuery.makeArray(data, [event]);

                    // Allow special events to draw outside the lines
                    special = jQuery.event.special[type] || {};
                    if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
                        return;
                    }

                    // Determine event propagation path in advance, per W3C events spec (#9951)
                    // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                    if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {

                        bubbleType = special.delegateType || type;
                        if (!rfocusMorph.test(bubbleType + type)) {
                            cur = cur.parentNode;
                        }
                        for (; cur; cur = cur.parentNode) {
                            eventPath.push(cur);
                            tmp = cur;
                        }

                        // Only add window if we got to document (e.g., not plain obj or detached DOM)
                        if (tmp === (elem.ownerDocument || document)) {
                            eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                        }
                    }

                    // Fire handlers on the event path
                    i = 0;
                    while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
                        lastElement = cur;
                        event.type = i > 1 ?
                            bubbleType :
                            special.bindType || type;

                        // jQuery handler
                        handle = (dataPriv.get(cur, "events") || {})[event.type] &&
                            dataPriv.get(cur, "handle");
                        if (handle) {
                            handle.apply(cur, data);
                        }

                        // Native handler
                        handle = ontype && cur[ontype];
                        if (handle && handle.apply && acceptData(cur)) {
                            event.result = handle.apply(cur, data);
                            if (event.result === false) {
                                event.preventDefault();
                            }
                        }
                    }
                    event.type = type;

                    // If nobody prevented the default action, do it now
                    if (!onlyHandlers && !event.isDefaultPrevented()) {

                        if ((!special._default ||
                            special._default.apply(eventPath.pop(), data) === false) &&
                            acceptData(elem)) {

                            // Call a native DOM method on the target with the same name as the event.
                            // Don't do default actions on window, that's where global variables be (#6170)
                            if (ontype && isFunction(elem[type]) && !isWindow(elem)) {

                                // Don't re-trigger an onFOO event when we call its FOO() method
                                tmp = elem[ontype];

                                if (tmp) {
                                    elem[ontype] = null;
                                }

                                // Prevent re-triggering of the same event, since we already bubbled it above
                                jQuery.event.triggered = type;

                                if (event.isPropagationStopped()) {
                                    lastElement.addEventListener(type, stopPropagationCallback);
                                }

                                elem[type]();

                                if (event.isPropagationStopped()) {
                                    lastElement.removeEventListener(type, stopPropagationCallback);
                                }

                                jQuery.event.triggered = undefined;

                                if (tmp) {
                                    elem[ontype] = tmp;
                                }
                            }
                        }
                    }

                    return event.result;
                },

                // Piggyback on a donor event to simulate a different one
                // Used only for `focus(in | out)` events
                simulate: function (type, elem, event) {
                    var e = jQuery.extend(
                        new jQuery.Event(),
                        event,
                        {
                            type: type,
                            isSimulated: true
                        }
                    );

                    jQuery.event.trigger(e, null, elem);
                }

            });

            jQuery.fn.extend({

                trigger: function (type, data) {
                    return this.each(function () {
                        jQuery.event.trigger(type, data, this);
                    });
                },
                triggerHandler: function (type, data) {
                    var elem = this[0];
                    if (elem) {
                        return jQuery.event.trigger(type, data, elem, true);
                    }
                }
            });


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
            if (!support.focusin) {
                jQuery.each({focus: "focusin", blur: "focusout"}, function (orig, fix) {

                    // Attach a single capturing handler on the document while someone wants focusin/focusout
                    var handler = function (event) {
                        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
                    };

                    jQuery.event.special[fix] = {
                        setup: function () {
                            var doc = this.ownerDocument || this,
                                attaches = dataPriv.access(doc, fix);

                            if (!attaches) {
                                doc.addEventListener(orig, handler, true);
                            }
                            dataPriv.access(doc, fix, (attaches || 0) + 1);
                        },
                        teardown: function () {
                            var doc = this.ownerDocument || this,
                                attaches = dataPriv.access(doc, fix) - 1;

                            if (!attaches) {
                                doc.removeEventListener(orig, handler, true);
                                dataPriv.remove(doc, fix);

                            } else {
                                dataPriv.access(doc, fix, attaches);
                            }
                        }
                    };
                });
            }
            var location = window.location;

            var nonce = Date.now();

            var rquery = (/\?/);


// Cross-browser xml parsing
            jQuery.parseXML = function (data) {
                var xml;
                if (!data || typeof data !== "string") {
                    return null;
                }

                // Support: IE 9 - 11 only
                // IE throws on parseFromString with invalid input.
                try {
                    xml = (new window.DOMParser()).parseFromString(data, "text/xml");
                } catch (e) {
                    xml = undefined;
                }

                if (!xml || xml.getElementsByTagName("parsererror").length) {
                    jQuery.error("Invalid XML: " + data);
                }
                return xml;
            };


            var
                rbracket = /\[\]$/,
                rCRLF = /\r?\n/g,
                rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
                rsubmittable = /^(?:input|select|textarea|keygen)/i;

            function buildParams(prefix, obj, traditional, add) {
                var name;

                if (Array.isArray(obj)) {

                    // Serialize array item.
                    jQuery.each(obj, function (i, v) {
                        if (traditional || rbracket.test(prefix)) {

                            // Treat each array item as a scalar.
                            add(prefix, v);

                        } else {

                            // Item is non-scalar (array or object), encode its numeric index.
                            buildParams(
                                prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]",
                                v,
                                traditional,
                                add
                            );
                        }
                    });

                } else if (!traditional && toType(obj) === "object") {

                    // Serialize object item.
                    for (name in obj) {
                        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
                    }

                } else {

                    // Serialize scalar item.
                    add(prefix, obj);
                }
            }

// Serialize an array of form elements or a set of
// key/values into a query string
            jQuery.param = function (a, traditional) {
                var prefix,
                    s = [],
                    add = function (key, valueOrFunction) {

                        // If value is a function, invoke it and use its return value
                        var value = isFunction(valueOrFunction) ?
                            valueOrFunction() :
                            valueOrFunction;

                        s[s.length] = encodeURIComponent(key) + "=" +
                            encodeURIComponent(value == null ? "" : value);
                    };

                if (a == null) {
                    return "";
                }

                // If an array was passed in, assume that it is an array of form elements.
                if (Array.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {

                    // Serialize the form elements
                    jQuery.each(a, function () {
                        add(this.name, this.value);
                    });

                } else {

                    // If traditional, encode the "old" way (the way 1.3.2 or older
                    // did it), otherwise encode params recursively.
                    for (prefix in a) {
                        buildParams(prefix, a[prefix], traditional, add);
                    }
                }

                // Return the resulting serialization
                return s.join("&");
            };

            jQuery.fn.extend({
                serialize: function () {
                    return jQuery.param(this.serializeArray());
                },
                serializeArray: function () {
                    return this.map(function () {

                        // Can add propHook for "elements" to filter or add form elements
                        var elements = jQuery.prop(this, "elements");
                        return elements ? jQuery.makeArray(elements) : this;
                    })
                        .filter(function () {
                            var type = this.type;

                            // Use .is( ":disabled" ) so that fieldset[disabled] works
                            return this.name && !jQuery(this).is(":disabled") &&
                                rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) &&
                                (this.checked || !rcheckableType.test(type));
                        })
                        .map(function (i, elem) {
                            var val = jQuery(this).val();

                            if (val == null) {
                                return null;
                            }

                            if (Array.isArray(val)) {
                                return jQuery.map(val, function (val) {
                                    return {name: elem.name, value: val.replace(rCRLF, "\r\n")};
                                });
                            }

                            return {name: elem.name, value: val.replace(rCRLF, "\r\n")};
                        }).get();
                }
            });


            var
                r20 = /%20/g,
                rhash = /#.*$/,
                rantiCache = /([?&])_=[^&]*/,
                rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

                // #7653, #8125, #8152: local protocol detection
                rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                rnoContent = /^(?:GET|HEAD)$/,
                rprotocol = /^\/\//,

                /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
                prefilters = {},

                /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
                transports = {},

                // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
                allTypes = "*/".concat("*"),

                // Anchor tag for parsing the document origin
                originAnchor = document.createElement("a");
            originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
            function addToPrefiltersOrTransports(structure) {

                // dataTypeExpression is optional and defaults to "*"
                return function (dataTypeExpression, func) {

                    if (typeof dataTypeExpression !== "string") {
                        func = dataTypeExpression;
                        dataTypeExpression = "*";
                    }

                    var dataType,
                        i = 0,
                        dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

                    if (isFunction(func)) {

                        // For each dataType in the dataTypeExpression
                        while ((dataType = dataTypes[i++])) {

                            // Prepend if requested
                            if (dataType[0] === "+") {
                                dataType = dataType.slice(1) || "*";
                                (structure[dataType] = structure[dataType] || []).unshift(func);

                                // Otherwise append
                            } else {
                                (structure[dataType] = structure[dataType] || []).push(func);
                            }
                        }
                    }
                };
            }

// Base inspection function for prefilters and transports
            function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {

                var inspected = {},
                    seekingTransport = (structure === transports);

                function inspect(dataType) {
                    var selected;
                    inspected[dataType] = true;
                    jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
                        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                        if (typeof dataTypeOrTransport === "string" &&
                            !seekingTransport && !inspected[dataTypeOrTransport]) {

                            options.dataTypes.unshift(dataTypeOrTransport);
                            inspect(dataTypeOrTransport);
                            return false;
                        } else if (seekingTransport) {
                            return !(selected = dataTypeOrTransport);
                        }
                    });
                    return selected;
                }

                return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
            }

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
            function ajaxExtend(target, src) {
                var key, deep,
                    flatOptions = jQuery.ajaxSettings.flatOptions || {};

                for (key in src) {
                    if (src[key] !== undefined) {
                        (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];
                    }
                }
                if (deep) {
                    jQuery.extend(true, target, deep);
                }

                return target;
            }

            /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
            function ajaxHandleResponses(s, jqXHR, responses) {

                var ct, type, finalDataType, firstDataType,
                    contents = s.contents,
                    dataTypes = s.dataTypes;

                // Remove auto dataType and get content-type in the process
                while (dataTypes[0] === "*") {
                    dataTypes.shift();
                    if (ct === undefined) {
                        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
                    }
                }

                // Check if we're dealing with a known content-type
                if (ct) {
                    for (type in contents) {
                        if (contents[type] && contents[type].test(ct)) {
                            dataTypes.unshift(type);
                            break;
                        }
                    }
                }

                // Check to see if we have a response for the expected dataType
                if (dataTypes[0] in responses) {
                    finalDataType = dataTypes[0];
                } else {

                    // Try convertible dataTypes
                    for (type in responses) {
                        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                            finalDataType = type;
                            break;
                        }
                        if (!firstDataType) {
                            firstDataType = type;
                        }
                    }

                    // Or just use first one
                    finalDataType = finalDataType || firstDataType;
                }

                // If we found a dataType
                // We add the dataType to the list if needed
                // and return the corresponding response
                if (finalDataType) {
                    if (finalDataType !== dataTypes[0]) {
                        dataTypes.unshift(finalDataType);
                    }
                    return responses[finalDataType];
                }
            }

            /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
            function ajaxConvert(s, response, jqXHR, isSuccess) {
                var conv2, current, conv, tmp, prev,
                    converters = {},

                    // Work with a copy of dataTypes in case we need to modify it for conversion
                    dataTypes = s.dataTypes.slice();

                // Create converters map with lowercased keys
                if (dataTypes[1]) {
                    for (conv in s.converters) {
                        converters[conv.toLowerCase()] = s.converters[conv];
                    }
                }

                current = dataTypes.shift();

                // Convert to each sequential dataType
                while (current) {

                    if (s.responseFields[current]) {
                        jqXHR[s.responseFields[current]] = response;
                    }

                    // Apply the dataFilter if provided
                    if (!prev && isSuccess && s.dataFilter) {
                        response = s.dataFilter(response, s.dataType);
                    }

                    prev = current;
                    current = dataTypes.shift();

                    if (current) {

                        // There's only work to do if current dataType is non-auto
                        if (current === "*") {

                            current = prev;

                            // Convert response if prev dataType is non-auto and differs from current
                        } else if (prev !== "*" && prev !== current) {

                            // Seek a direct converter
                            conv = converters[prev + " " + current] || converters["* " + current];

                            // If none found, seek a pair
                            if (!conv) {
                                for (conv2 in converters) {

                                    // If conv2 outputs current
                                    tmp = conv2.split(" ");
                                    if (tmp[1] === current) {

                                        // If prev can be converted to accepted input
                                        conv = converters[prev + " " + tmp[0]] ||
                                            converters["* " + tmp[0]];
                                        if (conv) {

                                            // Condense equivalence converters
                                            if (conv === true) {
                                                conv = converters[conv2];

                                                // Otherwise, insert the intermediate dataType
                                            } else if (converters[conv2] !== true) {
                                                current = tmp[0];
                                                dataTypes.unshift(tmp[1]);
                                            }
                                            break;
                                        }
                                    }
                                }
                            }

                            // Apply converter (if not an equivalence)
                            if (conv !== true) {

                                // Unless errors are allowed to bubble, catch and return them
                                if (conv && s.throws) {
                                    response = conv(response);
                                } else {
                                    try {
                                        response = conv(response);
                                    } catch (e) {
                                        return {
                                            state: "parsererror",
                                            error: conv ? e : "No conversion from " + prev + " to " + current
                                        };
                                    }
                                }
                            }
                        }
                    }
                }

                return {state: "success", data: response};
            }

            jQuery.extend({

                // Counter for holding the number of active queries
                active: 0,

                // Last-Modified header cache for next request
                lastModified: {},
                etag: {},

                ajaxSettings: {
                    url: location.href,
                    type: "GET",
                    isLocal: rlocalProtocol.test(location.protocol),
                    global: true,
                    processData: true,
                    async: true,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",

                    /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

                    accepts: {
                        "*": allTypes,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },

                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },

                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },

                    // Data converters
                    // Keys separate source (or catchall "*") and destination types with a single space
                    converters: {

                        // Convert anything to text
                        "* text": String,

                        // Text to html (true = no transformation)
                        "text html": true,

                        // Evaluate text as a json expression
                        "text json": JSON.parse,

                        // Parse text as xml
                        "text xml": jQuery.parseXML
                    },

                    // For options that shouldn't be deep extended:
                    // you can add your own custom options here if
                    // and when you create one that shouldn't be
                    // deep extended (see ajaxExtend)
                    flatOptions: {
                        url: true,
                        context: true
                    }
                },

                // Creates a full fledged settings object into target
                // with both ajaxSettings and settings fields.
                // If target is omitted, writes into ajaxSettings.
                ajaxSetup: function (target, settings) {
                    return settings ?

                        // Building a settings object
                        ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :

                        // Extending ajaxSettings
                        ajaxExtend(jQuery.ajaxSettings, target);
                },

                ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
                ajaxTransport: addToPrefiltersOrTransports(transports),

                // Main method
                ajax: function (url, options) {

                    // If url is an object, simulate pre-1.5 signature
                    if (typeof url === "object") {
                        options = url;
                        url = undefined;
                    }

                    // Force options to be an object
                    options = options || {};

                    var transport,

                        // URL without anti-cache param
                        cacheURL,

                        // Response headers
                        responseHeadersString,
                        responseHeaders,

                        // timeout handle
                        timeoutTimer,

                        // Url cleanup var
                        urlAnchor,

                        // Request state (becomes false upon send and true upon completion)
                        completed,

                        // To know if global events are to be dispatched
                        fireGlobals,

                        // Loop variable
                        i,

                        // uncached part of the url
                        uncached,

                        // Create the final options object
                        s = jQuery.ajaxSetup({}, options),

                        // Callbacks context
                        callbackContext = s.context || s,

                        // Context for global events is callbackContext if it is a DOM node or jQuery collection
                        globalEventContext = s.context &&
                        (callbackContext.nodeType || callbackContext.jquery) ?
                            jQuery(callbackContext) :
                            jQuery.event,

                        // Deferreds
                        deferred = jQuery.Deferred(),
                        completeDeferred = jQuery.Callbacks("once memory"),

                        // Status-dependent callbacks
                        statusCode = s.statusCode || {},

                        // Headers (they are sent all at once)
                        requestHeaders = {},
                        requestHeadersNames = {},

                        // Default abort message
                        strAbort = "canceled",

                        // Fake xhr
                        jqXHR = {
                            readyState: 0,

                            // Builds headers hashtable if needed
                            getResponseHeader: function (key) {
                                var match;
                                if (completed) {
                                    if (!responseHeaders) {
                                        responseHeaders = {};
                                        while ((match = rheaders.exec(responseHeadersString))) {
                                            responseHeaders[match[1].toLowerCase() + " "] =
                                                (responseHeaders[match[1].toLowerCase() + " "] || [])
                                                    .concat(match[2]);
                                        }
                                    }
                                    match = responseHeaders[key.toLowerCase() + " "];
                                }
                                return match == null ? null : match.join(", ");
                            },

                            // Raw string
                            getAllResponseHeaders: function () {
                                return completed ? responseHeadersString : null;
                            },

                            // Caches the header
                            setRequestHeader: function (name, value) {
                                if (completed == null) {
                                    name = requestHeadersNames[name.toLowerCase()] =
                                        requestHeadersNames[name.toLowerCase()] || name;
                                    requestHeaders[name] = value;
                                }
                                return this;
                            },

                            // Overrides response content-type header
                            overrideMimeType: function (type) {
                                if (completed == null) {
                                    s.mimeType = type;
                                }
                                return this;
                            },

                            // Status-dependent callbacks
                            statusCode: function (map) {
                                var code;
                                if (map) {
                                    if (completed) {

                                        // Execute the appropriate callbacks
                                        jqXHR.always(map[jqXHR.status]);
                                    } else {

                                        // Lazy-add the new callbacks in a way that preserves old ones
                                        for (code in map) {
                                            statusCode[code] = [statusCode[code], map[code]];
                                        }
                                    }
                                }
                                return this;
                            },

                            // Cancel the request
                            abort: function (statusText) {
                                var finalText = statusText || strAbort;
                                if (transport) {
                                    transport.abort(finalText);
                                }
                                done(0, finalText);
                                return this;
                            }
                        };

                    // Attach deferreds
                    deferred.promise(jqXHR);

                    // Add protocol if not provided (prefilters might expect it)
                    // Handle falsy url in the settings object (#10093: consistency with old signature)
                    // We also use the url parameter if available
                    s.url = ((url || s.url || location.href) + "")
                        .replace(rprotocol, location.protocol + "//");

                    // Alias method option to type as per ticket #12004
                    s.type = options.method || options.type || s.method || s.type;

                    // Extract dataTypes list
                    s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];

                    // A cross-domain request is in order when the origin doesn't match the current origin.
                    if (s.crossDomain == null) {
                        urlAnchor = document.createElement("a");

                        // Support: IE <=8 - 11, Edge 12 - 15
                        // IE throws exception on accessing the href property if url is malformed,
                        // e.g. http://example.com:80x/
                        try {
                            urlAnchor.href = s.url;

                            // Support: IE <=8 - 11 only
                            // Anchor's host property isn't correctly set when s.url is relative
                            urlAnchor.href = urlAnchor.href;
                            s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
                                urlAnchor.protocol + "//" + urlAnchor.host;
                        } catch (e) {

                            // If there is an error parsing the URL, assume it is crossDomain,
                            // it can be rejected by the transport if it is invalid
                            s.crossDomain = true;
                        }
                    }

                    // Convert data if not already a string
                    if (s.data && s.processData && typeof s.data !== "string") {
                        s.data = jQuery.param(s.data, s.traditional);
                    }

                    // Apply prefilters
                    inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

                    // If request was aborted inside a prefilter, stop there
                    if (completed) {
                        return jqXHR;
                    }

                    // We can fire global events as of now if asked to
                    // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
                    fireGlobals = jQuery.event && s.global;

                    // Watch for a new set of requests
                    if (fireGlobals && jQuery.active++ === 0) {
                        jQuery.event.trigger("ajaxStart");
                    }

                    // Uppercase the type
                    s.type = s.type.toUpperCase();

                    // Determine if request has content
                    s.hasContent = !rnoContent.test(s.type);

                    // Save the URL in case we're toying with the If-Modified-Since
                    // and/or If-None-Match header later on
                    // Remove hash to simplify url manipulation
                    cacheURL = s.url.replace(rhash, "");

                    // More options handling for requests with no content
                    if (!s.hasContent) {

                        // Remember the hash so we can put it back
                        uncached = s.url.slice(cacheURL.length);

                        // If data is available and should be processed, append data to url
                        if (s.data && (s.processData || typeof s.data === "string")) {
                            cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;

                            // #9682: remove data so that it's not used in an eventual retry
                            delete s.data;
                        }

                        // Add or update anti-cache param if needed
                        if (s.cache === false) {
                            cacheURL = cacheURL.replace(rantiCache, "$1");
                            uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + (nonce++) + uncached;
                        }

                        // Put hash and anti-cache on the URL that will be requested (gh-1732)
                        s.url = cacheURL + uncached;

                        // Change '%20' to '+' if this is encoded form body content (gh-2658)
                    } else if (s.data && s.processData &&
                        (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
                        s.data = s.data.replace(r20, "+");
                    }

                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                    if (s.ifModified) {
                        if (jQuery.lastModified[cacheURL]) {
                            jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
                        }
                        if (jQuery.etag[cacheURL]) {
                            jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
                        }
                    }

                    // Set the correct header, if data is being sent
                    if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
                        jqXHR.setRequestHeader("Content-Type", s.contentType);
                    }

                    // Set the Accepts header for the server, depending on the dataType
                    jqXHR.setRequestHeader(
                        "Accept",
                        s.dataTypes[0] && s.accepts[s.dataTypes[0]] ?
                            s.accepts[s.dataTypes[0]] +
                            (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") :
                            s.accepts["*"]
                    );

                    // Check for headers option
                    for (i in s.headers) {
                        jqXHR.setRequestHeader(i, s.headers[i]);
                    }

                    // Allow custom headers/mimetypes and early abort
                    if (s.beforeSend &&
                        (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {

                        // Abort if not done already and return
                        return jqXHR.abort();
                    }

                    // Aborting is no longer a cancellation
                    strAbort = "abort";

                    // Install callbacks on deferreds
                    completeDeferred.add(s.complete);
                    jqXHR.done(s.success);
                    jqXHR.fail(s.error);

                    // Get transport
                    transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

                    // If no transport, we auto-abort
                    if (!transport) {
                        done(-1, "No Transport");
                    } else {
                        jqXHR.readyState = 1;

                        // Send global event
                        if (fireGlobals) {
                            globalEventContext.trigger("ajaxSend", [jqXHR, s]);
                        }

                        // If request was aborted inside ajaxSend, stop there
                        if (completed) {
                            return jqXHR;
                        }

                        // Timeout
                        if (s.async && s.timeout > 0) {
                            timeoutTimer = window.setTimeout(function () {
                                jqXHR.abort("timeout");
                            }, s.timeout);
                        }

                        try {
                            completed = false;
                            transport.send(requestHeaders, done);
                        } catch (e) {

                            // Rethrow post-completion exceptions
                            if (completed) {
                                throw e;
                            }

                            // Propagate others as results
                            done(-1, e);
                        }
                    }

                    // Callback for when everything is done
                    function done(status, nativeStatusText, responses, headers) {
                        var isSuccess, success, error, response, modified,
                            statusText = nativeStatusText;

                        // Ignore repeat invocations
                        if (completed) {
                            return;
                        }

                        completed = true;

                        // Clear timeout if it exists
                        if (timeoutTimer) {
                            window.clearTimeout(timeoutTimer);
                        }

                        // Dereference transport for early garbage collection
                        // (no matter how long the jqXHR object will be used)
                        transport = undefined;

                        // Cache response headers
                        responseHeadersString = headers || "";

                        // Set readyState
                        jqXHR.readyState = status > 0 ? 4 : 0;

                        // Determine if successful
                        isSuccess = status >= 200 && status < 300 || status === 304;

                        // Get response data
                        if (responses) {
                            response = ajaxHandleResponses(s, jqXHR, responses);
                        }

                        // Convert no matter what (that way responseXXX fields are always set)
                        response = ajaxConvert(s, response, jqXHR, isSuccess);

                        // If successful, handle type chaining
                        if (isSuccess) {

                            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                            if (s.ifModified) {
                                modified = jqXHR.getResponseHeader("Last-Modified");
                                if (modified) {
                                    jQuery.lastModified[cacheURL] = modified;
                                }
                                modified = jqXHR.getResponseHeader("etag");
                                if (modified) {
                                    jQuery.etag[cacheURL] = modified;
                                }
                            }

                            // if no content
                            if (status === 204 || s.type === "HEAD") {
                                statusText = "nocontent";

                                // if not modified
                            } else if (status === 304) {
                                statusText = "notmodified";

                                // If we have data, let's convert it
                            } else {
                                statusText = response.state;
                                success = response.data;
                                error = response.error;
                                isSuccess = !error;
                            }
                        } else {

                            // Extract error from statusText and normalize for non-aborts
                            error = statusText;
                            if (status || !statusText) {
                                statusText = "error";
                                if (status < 0) {
                                    status = 0;
                                }
                            }
                        }

                        // Set data for the fake xhr object
                        jqXHR.status = status;
                        jqXHR.statusText = (nativeStatusText || statusText) + "";

                        // Success/Error
                        if (isSuccess) {
                            deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
                        } else {
                            deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
                        }

                        // Status-dependent callbacks
                        jqXHR.statusCode(statusCode);
                        statusCode = undefined;

                        if (fireGlobals) {
                            globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError",
                                [jqXHR, s, isSuccess ? success : error]);
                        }

                        // Complete
                        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

                        if (fireGlobals) {
                            globalEventContext.trigger("ajaxComplete", [jqXHR, s]);

                            // Handle the global AJAX counter
                            if (!(--jQuery.active)) {
                                jQuery.event.trigger("ajaxStop");
                            }
                        }
                    }

                    return jqXHR;
                },

                getJSON: function (url, data, callback) {
                    return jQuery.get(url, data, callback, "json");
                },

                getScript: function (url, callback) {
                    return jQuery.get(url, undefined, callback, "script");
                }
            });

            jQuery.each(["get", "post"], function (i, method) {
                jQuery[method] = function (url, data, callback, type) {

                    // Shift arguments if data argument was omitted
                    if (isFunction(data)) {
                        type = type || callback;
                        callback = data;
                        data = undefined;
                    }

                    // The url can be an options object (which then must have .url)
                    return jQuery.ajax(jQuery.extend({
                        url: url,
                        type: method,
                        dataType: type,
                        data: data,
                        success: callback
                    }, jQuery.isPlainObject(url) && url));
                };
            });


            jQuery._evalUrl = function (url, options) {
                return jQuery.ajax({
                    url: url,

                    // Make this explicit, since user can override this through ajaxSetup (#11264)
                    type: "GET",
                    dataType: "script",
                    cache: true,
                    async: false,
                    global: false,

                    // Only evaluate the response if it is successful (gh-4126)
                    // dataFilter is not invoked for failure responses, so using it instead
                    // of the default converter is kludgy but it works.
                    converters: {
                        "text script": function () {
                        }
                    },
                    dataFilter: function (response) {
                        jQuery.globalEval(response, options);
                    }
                });
            };


            jQuery.fn.extend({
                wrapAll: function (html) {
                    var wrap;

                    if (this[0]) {
                        if (isFunction(html)) {
                            html = html.call(this[0]);
                        }

                        // The elements to wrap the target around
                        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

                        if (this[0].parentNode) {
                            wrap.insertBefore(this[0]);
                        }

                        wrap.map(function () {
                            var elem = this;

                            while (elem.firstElementChild) {
                                elem = elem.firstElementChild;
                            }

                            return elem;
                        }).append(this);
                    }

                    return this;
                },

                wrapInner: function (html) {
                    if (isFunction(html)) {
                        return this.each(function (i) {
                            jQuery(this).wrapInner(html.call(this, i));
                        });
                    }

                    return this.each(function () {
                        var self = jQuery(this),
                            contents = self.contents();

                        if (contents.length) {
                            contents.wrapAll(html);

                        } else {
                            self.append(html);
                        }
                    });
                },

                wrap: function (html) {
                    var htmlIsFunction = isFunction(html);

                    return this.each(function (i) {
                        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
                    });
                },

                unwrap: function (selector) {
                    this.parent(selector).not("body").each(function () {
                        jQuery(this).replaceWith(this.childNodes);
                    });
                    return this;
                }
            });


            jQuery.expr.pseudos.hidden = function (elem) {
                return !jQuery.expr.pseudos.visible(elem);
            };
            jQuery.expr.pseudos.visible = function (elem) {
                return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
            };


            jQuery.ajaxSettings.xhr = function () {
                try {
                    return new window.XMLHttpRequest();
                } catch (e) {
                }
            };

            var xhrSuccessStatus = {

                    // File protocol always yields status code 0, assume 200
                    0: 200,

                    // Support: IE <=9 only
                    // #1450: sometimes IE returns 1223 when it should be 204
                    1223: 204
                },
                xhrSupported = jQuery.ajaxSettings.xhr();

            support.cors = !!xhrSupported && ("withCredentials" in xhrSupported);
            support.ajax = xhrSupported = !!xhrSupported;

            jQuery.ajaxTransport(function (options) {
                var callback, errorCallback;

                // Cross domain only allowed if supported through XMLHttpRequest
                if (support.cors || xhrSupported && !options.crossDomain) {
                    return {
                        send: function (headers, complete) {
                            var i,
                                xhr = options.xhr();

                            xhr.open(
                                options.type,
                                options.url,
                                options.async,
                                options.username,
                                options.password
                            );

                            // Apply custom fields if provided
                            if (options.xhrFields) {
                                for (i in options.xhrFields) {
                                    xhr[i] = options.xhrFields[i];
                                }
                            }

                            // Override mime type if needed
                            if (options.mimeType && xhr.overrideMimeType) {
                                xhr.overrideMimeType(options.mimeType);
                            }

                            // X-Requested-With header
                            // For cross-domain requests, seeing as conditions for a preflight are
                            // akin to a jigsaw puzzle, we simply never set it to be sure.
                            // (it can always be set on a per-request basis or even using ajaxSetup)
                            // For same-domain requests, won't change header if already provided.
                            if (!options.crossDomain && !headers["X-Requested-With"]) {
                                headers["X-Requested-With"] = "XMLHttpRequest";
                            }

                            // Set headers
                            for (i in headers) {
                                xhr.setRequestHeader(i, headers[i]);
                            }

                            // Callback
                            callback = function (type) {
                                return function () {
                                    if (callback) {
                                        callback = errorCallback = xhr.onload =
                                            xhr.onerror = xhr.onabort = xhr.ontimeout =
                                                xhr.onreadystatechange = null;

                                        if (type === "abort") {
                                            xhr.abort();
                                        } else if (type === "error") {

                                            // Support: IE <=9 only
                                            // On a manual native abort, IE9 throws
                                            // errors on any property access that is not readyState
                                            if (typeof xhr.status !== "number") {
                                                complete(0, "error");
                                            } else {
                                                complete(
                                                    // File: protocol always yields status 0; see #8605, #14207
                                                    xhr.status,
                                                    xhr.statusText
                                                );
                                            }
                                        } else {
                                            complete(
                                                xhrSuccessStatus[xhr.status] || xhr.status,
                                                xhr.statusText,

                                                // Support: IE <=9 only
                                                // IE9 has no XHR2 but throws on binary (trac-11426)
                                                // For XHR2 non-text, let the caller handle it (gh-2498)
                                                (xhr.responseType || "text") !== "text" ||
                                                typeof xhr.responseText !== "string" ?
                                                    {binary: xhr.response} :
                                                    {text: xhr.responseText},
                                                xhr.getAllResponseHeaders()
                                            );
                                        }
                                    }
                                };
                            };

                            // Listen to events
                            xhr.onload = callback();
                            errorCallback = xhr.onerror = xhr.ontimeout = callback("error");

                            // Support: IE 9 only
                            // Use onreadystatechange to replace onabort
                            // to handle uncaught aborts
                            if (xhr.onabort !== undefined) {
                                xhr.onabort = errorCallback;
                            } else {
                                xhr.onreadystatechange = function () {

                                    // Check readyState before timeout as it changes
                                    if (xhr.readyState === 4) {

                                        // Allow onerror to be called first,
                                        // but that will not handle a native abort
                                        // Also, save errorCallback to a variable
                                        // as xhr.onerror cannot be accessed
                                        window.setTimeout(function () {
                                            if (callback) {
                                                errorCallback();
                                            }
                                        });
                                    }
                                };
                            }

                            // Create the abort callback
                            callback = callback("abort");

                            try {

                                // Do send the request (this may raise an exception)
                                xhr.send(options.hasContent && options.data || null);
                            } catch (e) {

                                // #14683: Only rethrow if this hasn't been notified as an error yet
                                if (callback) {
                                    throw e;
                                }
                            }
                        },

                        abort: function () {
                            if (callback) {
                                callback();
                            }
                        }
                    };
                }
            });


// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
            jQuery.ajaxPrefilter(function (s) {
                if (s.crossDomain) {
                    s.contents.script = false;
                }
            });

// Install script dataType
            jQuery.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, " +
                        "application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function (text) {
                        jQuery.globalEval(text);
                        return text;
                    }
                }
            });

// Handle cache's special case and crossDomain
            jQuery.ajaxPrefilter("script", function (s) {
                if (s.cache === undefined) {
                    s.cache = false;
                }
                if (s.crossDomain) {
                    s.type = "GET";
                }
            });

// Bind script tag hack transport
            jQuery.ajaxTransport("script", function (s) {

                // This transport only deals with cross domain or forced-by-attrs requests
                if (s.crossDomain || s.scriptAttrs) {
                    var script, callback;
                    return {
                        send: function (_, complete) {
                            script = jQuery("<script>")
                                .attr(s.scriptAttrs || {})
                                .prop({charset: s.scriptCharset, src: s.url})
                                .on("load error", callback = function (evt) {
                                    script.remove();
                                    callback = null;
                                    if (evt) {
                                        complete(evt.type === "error" ? 404 : 200, evt.type);
                                    }
                                });

                            // Use native DOM manipulation to avoid our domManip AJAX trickery
                            document.head.appendChild(script[0]);
                        },
                        abort: function () {
                            if (callback) {
                                callback();
                            }
                        }
                    };
                }
            });


            var oldCallbacks = [],
                rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
            jQuery.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function () {
                    var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
                    this[callback] = true;
                    return callback;
                }
            });

// Detect, normalize options and install callbacks for jsonp requests
            jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {

                var callbackName, overwritten, responseContainer,
                    jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ?
                            "url" :
                            typeof s.data === "string" &&
                            (s.contentType || "")
                                .indexOf("application/x-www-form-urlencoded") === 0 &&
                            rjsonp.test(s.data) && "data"
                    );

                // Handle iff the expected data type is "jsonp" or we have a parameter to set
                if (jsonProp || s.dataTypes[0] === "jsonp") {

                    // Get callback name, remembering preexisting value associated with it
                    callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ?
                        s.jsonpCallback() :
                        s.jsonpCallback;

                    // Insert callback into url or form data
                    if (jsonProp) {
                        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
                    } else if (s.jsonp !== false) {
                        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
                    }

                    // Use data converter to retrieve json after script execution
                    s.converters["script json"] = function () {
                        if (!responseContainer) {
                            jQuery.error(callbackName + " was not called");
                        }
                        return responseContainer[0];
                    };

                    // Force json dataType
                    s.dataTypes[0] = "json";

                    // Install callback
                    overwritten = window[callbackName];
                    window[callbackName] = function () {
                        responseContainer = arguments;
                    };

                    // Clean-up function (fires after converters)
                    jqXHR.always(function () {

                        // If previous value didn't exist - remove it
                        if (overwritten === undefined) {
                            jQuery(window).removeProp(callbackName);

                            // Otherwise restore preexisting value
                        } else {
                            window[callbackName] = overwritten;
                        }

                        // Save back as free
                        if (s[callbackName]) {

                            // Make sure that re-using the options doesn't screw things around
                            s.jsonpCallback = originalSettings.jsonpCallback;

                            // Save the callback name for future use
                            oldCallbacks.push(callbackName);
                        }

                        // Call if it was a function and we have a response
                        if (responseContainer && isFunction(overwritten)) {
                            overwritten(responseContainer[0]);
                        }

                        responseContainer = overwritten = undefined;
                    });

                    // Delegate to script
                    return "script";
                }
            });


// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
            support.createHTMLDocument = (function () {
                var body = document.implementation.createHTMLDocument("").body;
                body.innerHTML = "<form></form><form></form>";
                return body.childNodes.length === 2;
            })();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
            jQuery.parseHTML = function (data, context, keepScripts) {
                if (typeof data !== "string") {
                    return [];
                }
                if (typeof context === "boolean") {
                    keepScripts = context;
                    context = false;
                }

                var base, parsed, scripts;

                if (!context) {

                    // Stop scripts or inline event handlers from being executed immediately
                    // by using document.implementation
                    if (support.createHTMLDocument) {
                        context = document.implementation.createHTMLDocument("");

                        // Set the base href for the created document
                        // so any parsed elements with URLs
                        // are based on the document's URL (gh-2965)
                        base = context.createElement("base");
                        base.href = document.location.href;
                        context.head.appendChild(base);
                    } else {
                        context = document;
                    }
                }

                parsed = rsingleTag.exec(data);
                scripts = !keepScripts && [];

                // Single tag
                if (parsed) {
                    return [context.createElement(parsed[1])];
                }

                parsed = buildFragment([data], context, scripts);

                if (scripts && scripts.length) {
                    jQuery(scripts).remove();
                }

                return jQuery.merge([], parsed.childNodes);
            };


            /**
             * Load a url into a page
             */
            jQuery.fn.load = function (url, params, callback) {
                var selector, type, response,
                    self = this,
                    off = url.indexOf(" ");

                if (off > -1) {
                    selector = stripAndCollapse(url.slice(off));
                    url = url.slice(0, off);
                }

                // If it's a function
                if (isFunction(params)) {

                    // We assume that it's the callback
                    callback = params;
                    params = undefined;

                    // Otherwise, build a param string
                } else if (params && typeof params === "object") {
                    type = "POST";
                }

                // If we have elements to modify, make the request
                if (self.length > 0) {
                    jQuery.ajax({
                        url: url,

                        // If "type" variable is undefined, then "GET" method will be used.
                        // Make value of this field explicit since
                        // user can override it through ajaxSetup method
                        type: type || "GET",
                        dataType: "html",
                        data: params
                    }).done(function (responseText) {

                        // Save response for use in complete callback
                        response = arguments;

                        self.html(selector ?

                            // If a selector was specified, locate the right elements in a dummy div
                            // Exclude scripts to avoid IE 'Permission Denied' errors
                            jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) :

                            // Otherwise use the full result
                            responseText);

                        // If the request succeeds, this function gets "data", "status", "jqXHR"
                        // but they are ignored because response was set above.
                        // If it fails, this function gets "jqXHR", "status", "error"
                    }).always(callback && function (jqXHR, status) {
                        self.each(function () {
                            callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
                        });
                    });
                }

                return this;
            };


// Attach a bunch of functions for handling common AJAX events
            jQuery.each([
                "ajaxStart",
                "ajaxStop",
                "ajaxComplete",
                "ajaxError",
                "ajaxSuccess",
                "ajaxSend"
            ], function (i, type) {
                jQuery.fn[type] = function (fn) {
                    return this.on(type, fn);
                };
            });


            jQuery.expr.pseudos.animated = function (elem) {
                return jQuery.grep(jQuery.timers, function (fn) {
                    return elem === fn.elem;
                }).length;
            };


            jQuery.offset = {
                setOffset: function (elem, options, i) {
                    var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
                        position = jQuery.css(elem, "position"),
                        curElem = jQuery(elem),
                        props = {};

                    // Set position first, in-case top/left are set even on static elem
                    if (position === "static") {
                        elem.style.position = "relative";
                    }

                    curOffset = curElem.offset();
                    curCSSTop = jQuery.css(elem, "top");
                    curCSSLeft = jQuery.css(elem, "left");
                    calculatePosition = (position === "absolute" || position === "fixed") &&
                        (curCSSTop + curCSSLeft).indexOf("auto") > -1;

                    // Need to be able to calculate position if either
                    // top or left is auto and position is either absolute or fixed
                    if (calculatePosition) {
                        curPosition = curElem.position();
                        curTop = curPosition.top;
                        curLeft = curPosition.left;

                    } else {
                        curTop = parseFloat(curCSSTop) || 0;
                        curLeft = parseFloat(curCSSLeft) || 0;
                    }

                    if (isFunction(options)) {

                        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
                        options = options.call(elem, i, jQuery.extend({}, curOffset));
                    }

                    if (options.top != null) {
                        props.top = (options.top - curOffset.top) + curTop;
                    }
                    if (options.left != null) {
                        props.left = (options.left - curOffset.left) + curLeft;
                    }

                    if ("using" in options) {
                        options.using.call(elem, props);

                    } else {
                        curElem.css(props);
                    }
                }
            };

            jQuery.fn.extend({

                // offset() relates an element's border box to the document origin
                offset: function (options) {

                    // Preserve chaining for setter
                    if (arguments.length) {
                        return options === undefined ?
                            this :
                            this.each(function (i) {
                                jQuery.offset.setOffset(this, options, i);
                            });
                    }

                    var rect, win,
                        elem = this[0];

                    if (!elem) {
                        return;
                    }

                    // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
                    // Support: IE <=11 only
                    // Running getBoundingClientRect on a
                    // disconnected node in IE throws an error
                    if (!elem.getClientRects().length) {
                        return {top: 0, left: 0};
                    }

                    // Get document-relative position by adding viewport scroll to viewport-relative gBCR
                    rect = elem.getBoundingClientRect();
                    win = elem.ownerDocument.defaultView;
                    return {
                        top: rect.top + win.pageYOffset,
                        left: rect.left + win.pageXOffset
                    };
                },

                // position() relates an element's margin box to its offset parent's padding box
                // This corresponds to the behavior of CSS absolute positioning
                position: function () {
                    if (!this[0]) {
                        return;
                    }

                    var offsetParent, offset, doc,
                        elem = this[0],
                        parentOffset = {top: 0, left: 0};

                    // position:fixed elements are offset from the viewport, which itself always has zero offset
                    if (jQuery.css(elem, "position") === "fixed") {

                        // Assume position:fixed implies availability of getBoundingClientRect
                        offset = elem.getBoundingClientRect();

                    } else {
                        offset = this.offset();

                        // Account for the *real* offset parent, which can be the document or its root element
                        // when a statically positioned element is identified
                        doc = elem.ownerDocument;
                        offsetParent = elem.offsetParent || doc.documentElement;
                        while (offsetParent &&
                        (offsetParent === doc.body || offsetParent === doc.documentElement) &&
                        jQuery.css(offsetParent, "position") === "static") {

                            offsetParent = offsetParent.parentNode;
                        }
                        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {

                            // Incorporate borders into its offset, since they are outside its content origin
                            parentOffset = jQuery(offsetParent).offset();
                            parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
                            parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
                        }
                    }

                    // Subtract parent offsets and element margins
                    return {
                        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
                        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
                    };
                },

                // This method will return documentElement in the following cases:
                // 1) For the element inside the iframe without offsetParent, this method will return
                //    documentElement of the parent window
                // 2) For the hidden or detached element
                // 3) For body or html element, i.e. in case of the html node - it will return itself
                //
                // but those exceptions were never presented as a real life use-cases
                // and might be considered as more preferable results.
                //
                // This logic, however, is not guaranteed and can change at any point in the future
                offsetParent: function () {
                    return this.map(function () {
                        var offsetParent = this.offsetParent;

                        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
                            offsetParent = offsetParent.offsetParent;
                        }

                        return offsetParent || documentElement;
                    });
                }
            });

// Create scrollLeft and scrollTop methods
            jQuery.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (method, prop) {
                var top = "pageYOffset" === prop;

                jQuery.fn[method] = function (val) {
                    return access(this, function (elem, method, val) {

                        // Coalesce documents and windows
                        var win;
                        if (isWindow(elem)) {
                            win = elem;
                        } else if (elem.nodeType === 9) {
                            win = elem.defaultView;
                        }

                        if (val === undefined) {
                            return win ? win[prop] : elem[method];
                        }

                        if (win) {
                            win.scrollTo(
                                !top ? val : win.pageXOffset,
                                top ? val : win.pageYOffset
                            );

                        } else {
                            elem[method] = val;
                        }
                    }, method, val, arguments.length);
                };
            });

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
            jQuery.each(["top", "left"], function (i, prop) {
                jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition,
                    function (elem, computed) {
                        if (computed) {
                            computed = curCSS(elem, prop);

                            // If curCSS returns percentage, fallback to offset
                            return rnumnonpx.test(computed) ?
                                jQuery(elem).position()[prop] + "px" :
                                computed;
                        }
                    }
                );
            });


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
            jQuery.each({Height: "height", Width: "width"}, function (name, type) {
                jQuery.each({padding: "inner" + name, content: type, "": "outer" + name},
                    function (defaultExtra, funcName) {

                        // Margin is only for outerHeight, outerWidth
                        jQuery.fn[funcName] = function (margin, value) {
                            var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
                                extra = defaultExtra || (margin === true || value === true ? "margin" : "border");

                            return access(this, function (elem, type, value) {
                                var doc;

                                if (isWindow(elem)) {

                                    // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                                    return funcName.indexOf("outer") === 0 ?
                                        elem["inner" + name] :
                                        elem.document.documentElement["client" + name];
                                }

                                // Get document width or height
                                if (elem.nodeType === 9) {
                                    doc = elem.documentElement;

                                    // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                                    // whichever is greatest
                                    return Math.max(
                                        elem.body["scroll" + name], doc["scroll" + name],
                                        elem.body["offset" + name], doc["offset" + name],
                                        doc["client" + name]
                                    );
                                }

                                return value === undefined ?

                                    // Get width or height on the element, requesting but not forcing parseFloat
                                    jQuery.css(elem, type, extra) :

                                    // Set width or height on the element
                                    jQuery.style(elem, type, value, extra);
                            }, type, chainable ? margin : undefined, chainable);
                        };
                    });
            });


            jQuery.each(("blur focus focusin focusout resize scroll click dblclick " +
                "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
                "change select submit keydown keypress keyup contextmenu").split(" "),
                function (i, name) {

                    // Handle event binding
                    jQuery.fn[name] = function (data, fn) {
                        return arguments.length > 0 ?
                            this.on(name, null, data, fn) :
                            this.trigger(name);
                    };
                });

            jQuery.fn.extend({
                hover: function (fnOver, fnOut) {
                    return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
                }
            });


            jQuery.fn.extend({

                bind: function (types, data, fn) {
                    return this.on(types, null, data, fn);
                },
                unbind: function (types, fn) {
                    return this.off(types, null, fn);
                },

                delegate: function (selector, types, data, fn) {
                    return this.on(types, selector, data, fn);
                },
                undelegate: function (selector, types, fn) {

                    // ( namespace ) or ( selector, types [, fn] )
                    return arguments.length === 1 ?
                        this.off(selector, "**") :
                        this.off(types, selector || "**", fn);
                }
            });

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
            jQuery.proxy = function (fn, context) {
                var tmp, args, proxy;

                if (typeof context === "string") {
                    tmp = fn[context];
                    context = fn;
                    fn = tmp;
                }

                // Quick check to determine if target is callable, in the spec
                // this throws a TypeError, but we will just return undefined.
                if (!isFunction(fn)) {
                    return undefined;
                }

                // Simulated bind
                args = slice.call(arguments, 2);
                proxy = function () {
                    return fn.apply(context || this, args.concat(slice.call(arguments)));
                };

                // Set the guid of unique handler to the same of original handler, so it can be removed
                proxy.guid = fn.guid = fn.guid || jQuery.guid++;

                return proxy;
            };

            jQuery.holdReady = function (hold) {
                if (hold) {
                    jQuery.readyWait++;
                } else {
                    jQuery.ready(true);
                }
            };
            jQuery.isArray = Array.isArray;
            jQuery.parseJSON = JSON.parse;
            jQuery.nodeName = nodeName;
            jQuery.isFunction = isFunction;
            jQuery.isWindow = isWindow;
            jQuery.camelCase = camelCase;
            jQuery.type = toType;

            jQuery.now = Date.now;

            jQuery.isNumeric = function (obj) {

                // As of jQuery 3.0, isNumeric is limited to
                // strings and numbers (primitives or objects)
                // that can be coerced to finite numbers (gh-2662)
                var type = jQuery.type(obj);
                return (type === "number" || type === "string") &&

                    // parseFloat NaNs numeric-cast false positives ("")
                    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
                    // subtraction forces infinities to NaN
                    !isNaN(obj - parseFloat(obj));
            };


// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

            if (true) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
                    return jQuery;
                }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }


            var

                // Map over jQuery in case of overwrite
                _jQuery = window.jQuery,

                // Map over the $ in case of overwrite
                _$ = window.$;

            jQuery.noConflict = function (deep) {
                if (window.$ === jQuery) {
                    window.$ = _$;
                }

                if (deep && window.jQuery === jQuery) {
                    window.jQuery = _jQuery;
                }

                return jQuery;
            };

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
            if (!noGlobal) {
                window.jQuery = window.$ = jQuery;
            }


            return jQuery;
        });


        /***/
    }),

    /***/ "./node_modules/process/browser.js":
    /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
    /*! no static exports found */
    /***/ (function (module, exports) {

// shim for using process in browser
        var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }

        function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
        }

        (function () {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        }())

        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }


        }

        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }


        }

        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }

        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {
        }

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) {
            return []
        }

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
            return '/'
        };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
            return 0;
        };


        /***/
    }),

    /***/ "./node_modules/setimmediate/setImmediate.js":
    /*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (global, process) {
            (function (global, undefined) {
                "use strict";

                if (global.setImmediate) {
                    return;
                }

                var nextHandle = 1; // Spec says greater than zero
                var tasksByHandle = {};
                var currentlyRunningATask = false;
                var doc = global.document;
                var registerImmediate;

                function setImmediate(callback) {
                    // Callback can either be a function or a string
                    if (typeof callback !== "function") {
                        callback = new Function("" + callback);
                    }
                    // Copy function arguments
                    var args = new Array(arguments.length - 1);
                    for (var i = 0; i < args.length; i++) {
                        args[i] = arguments[i + 1];
                    }
                    // Store and register the task
                    var task = {callback: callback, args: args};
                    tasksByHandle[nextHandle] = task;
                    registerImmediate(nextHandle);
                    return nextHandle++;
                }

                function clearImmediate(handle) {
                    delete tasksByHandle[handle];
                }

                function run(task) {
                    var callback = task.callback;
                    var args = task.args;
                    switch (args.length) {
                        case 0:
                            callback();
                            break;
                        case 1:
                            callback(args[0]);
                            break;
                        case 2:
                            callback(args[0], args[1]);
                            break;
                        case 3:
                            callback(args[0], args[1], args[2]);
                            break;
                        default:
                            callback.apply(undefined, args);
                            break;
                    }
                }

                function runIfPresent(handle) {
                    // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
                    // So if we're currently running a task, we'll need to delay this invocation.
                    if (currentlyRunningATask) {
                        // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                        // "too much recursion" error.
                        setTimeout(runIfPresent, 0, handle);
                    } else {
                        var task = tasksByHandle[handle];
                        if (task) {
                            currentlyRunningATask = true;
                            try {
                                run(task);
                            } finally {
                                clearImmediate(handle);
                                currentlyRunningATask = false;
                            }
                        }
                    }
                }

                function installNextTickImplementation() {
                    registerImmediate = function (handle) {
                        process.nextTick(function () {
                            runIfPresent(handle);
                        });
                    };
                }

                function canUsePostMessage() {
                    // The test against `importScripts` prevents this implementation from being installed inside a web worker,
                    // where `global.postMessage` means something completely different and can't be used for this purpose.
                    if (global.postMessage && !global.importScripts) {
                        var postMessageIsAsynchronous = true;
                        var oldOnMessage = global.onmessage;
                        global.onmessage = function () {
                            postMessageIsAsynchronous = false;
                        };
                        global.postMessage("", "*");
                        global.onmessage = oldOnMessage;
                        return postMessageIsAsynchronous;
                    }
                }

                function installPostMessageImplementation() {
                    // Installs an event handler on `global` for the `message` event: see
                    // * https://developer.mozilla.org/en/DOM/window.postMessage
                    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

                    var messagePrefix = "setImmediate$" + Math.random() + "$";
                    var onGlobalMessage = function (event) {
                        if (event.source === global &&
                            typeof event.data === "string" &&
                            event.data.indexOf(messagePrefix) === 0) {
                            runIfPresent(+event.data.slice(messagePrefix.length));
                        }
                    };

                    if (global.addEventListener) {
                        global.addEventListener("message", onGlobalMessage, false);
                    } else {
                        global.attachEvent("onmessage", onGlobalMessage);
                    }

                    registerImmediate = function (handle) {
                        global.postMessage(messagePrefix + handle, "*");
                    };
                }

                function installMessageChannelImplementation() {
                    var channel = new MessageChannel();
                    channel.port1.onmessage = function (event) {
                        var handle = event.data;
                        runIfPresent(handle);
                    };

                    registerImmediate = function (handle) {
                        channel.port2.postMessage(handle);
                    };
                }

                function installReadyStateChangeImplementation() {
                    var html = doc.documentElement;
                    registerImmediate = function (handle) {
                        // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                        // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                        var script = doc.createElement("script");
                        script.onreadystatechange = function () {
                            runIfPresent(handle);
                            script.onreadystatechange = null;
                            html.removeChild(script);
                            script = null;
                        };
                        html.appendChild(script);
                    };
                }

                function installSetTimeoutImplementation() {
                    registerImmediate = function (handle) {
                        setTimeout(runIfPresent, 0, handle);
                    };
                }

                // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
                var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
                attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

                // Don't get fooled by e.g. browserify environments.
                if ({}.toString.call(global.process) === "[object process]") {
                    // For Node.js before 0.9
                    installNextTickImplementation();

                } else if (canUsePostMessage()) {
                    // For non-IE10 modern browsers
                    installPostMessageImplementation();

                } else if (global.MessageChannel) {
                    // For web workers, where supported
                    installMessageChannelImplementation();

                } else if (doc && "onreadystatechange" in doc.createElement("script")) {
                    // For IE 6–8
                    installReadyStateChangeImplementation();

                } else {
                    // For older browsers
                    installSetTimeoutImplementation();
                }

                attachTo.setImmediate = setImmediate;
                attachTo.clearImmediate = clearImmediate;
            }(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

            /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

        /***/
    }),

    /***/ "./node_modules/timers-browserify/main.js":
    /*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (global) {
            var scope = (typeof global !== "undefined" && global) ||
                (typeof self !== "undefined" && self) ||
                window;
            var apply = Function.prototype.apply;

// DOM APIs, for completeness

            exports.setTimeout = function () {
                return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
            };
            exports.setInterval = function () {
                return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
            };
            exports.clearTimeout =
                exports.clearInterval = function (timeout) {
                    if (timeout) {
                        timeout.close();
                    }
                };

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }

            Timeout.prototype.unref = Timeout.prototype.ref = function () {
            };
            Timeout.prototype.close = function () {
                this._clearFn.call(scope, this._id);
            };

// Does not start the time, just sets up the members needed.
            exports.enroll = function (item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            };

            exports.unenroll = function (item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            };

            exports._unrefActive = exports.active = function (item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            };

// setimmediate attaches itself to the global object
            __webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
            exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                (typeof global !== "undefined" && global.setImmediate) ||
                (this && this.setImmediate);
            exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                (typeof global !== "undefined" && global.clearImmediate) ||
                (this && this.clearImmediate);

            /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/
    }),

    /***/ "./node_modules/webpack/buildin/global.js":
    /*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function (module, exports) {

        var g;

// This works in non-strict mode
        g = (function () {
            return this;
        })();

        try {
            // This works if eval is allowed (see CSP)
            g = g || new Function("return this")();
        } catch (e) {
            // This works if the window reference is available
            if (typeof window === "object") g = window;
        }

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

        module.exports = g;


        /***/
    }),

    /***/ "./node_modules/webpack/buildin/module.js":
    /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
    /*! no static exports found */
    /***/ (function (module, exports) {

        module.exports = function (module) {
            if (!module.webpackPolyfill) {
                module.deprecate = function () {
                };
                module.paths = [];
                // module.parent = undefined by default
                if (!module.children) module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function () {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function () {
                        return module.i;
                    }
                });
                module.webpackPolyfill = 1;
            }
            return module;
        };


        /***/
    }),

    /***/ "./resources/js/main.js":
    /*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(/*! ./myFiles/jquery.min.js */ "./resources/js/myFiles/jquery.min.js");

        __webpack_require__(/*! ./myFiles/bootstrap.bundle.min.js */ "./resources/js/myFiles/bootstrap.bundle.min.js");

        __webpack_require__(/*! ./myFiles/select2.min.js */ "./resources/js/myFiles/select2.min.js");

        __webpack_require__(/*! ./myFiles/sweetalert.min.js */ "./resources/js/myFiles/sweetalert.min.js");

        /***/
    }),

    /***/ "./resources/js/myFiles/bootstrap.bundle.min.js":
    /*!******************************************************!*\
  !*** ./resources/js/myFiles/bootstrap.bundle.min.js ***!
  \******************************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (global) {
            var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

            function _typeof(obj) {
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                    _typeof = function _typeof(obj) {
                        return typeof obj;
                    };
                } else {
                    _typeof = function _typeof(obj) {
                        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                    };
                }
                return _typeof(obj);
            }

            /*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
            !function (t, e) {
                "object" == (false ? undefined : _typeof(exports)) && "undefined" != typeof module ? e(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")) : true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
                    __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                        (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
            }(this, function (t, p) {
                "use strict";

                function i(t, e) {
                    for (var n = 0; n < e.length; n++) {
                        var i = e[n];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
                    }
                }

                function s(t, e, n) {
                    return e && i(t.prototype, e), n && i(t, n), t;
                }

                function l(o) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = null != arguments[t] ? arguments[t] : {},
                            e = Object.keys(r);
                        "function" == typeof Object.getOwnPropertySymbols && (e = e.concat(Object.getOwnPropertySymbols(r).filter(function (t) {
                            return Object.getOwnPropertyDescriptor(r, t).enumerable;
                        }))), e.forEach(function (t) {
                            var e, n, i;
                            e = o, i = r[n = t], n in e ? Object.defineProperty(e, n, {
                                value: i,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : e[n] = i;
                        });
                    }

                    return o;
                }

                p = p && p.hasOwnProperty("default") ? p["default"] : p;
                var e = "transitionend";

                function n(t) {
                    var e = this,
                        n = !1;
                    return p(this).one(m.TRANSITION_END, function () {
                        n = !0;
                    }), setTimeout(function () {
                        n || m.triggerTransitionEnd(e);
                    }, t), this;
                }

                var m = {
                    TRANSITION_END: "bsTransitionEnd",
                    getUID: function getUID(t) {
                        for (; t += ~~(1e6 * Math.random()), document.getElementById(t);) {
                            ;
                        }

                        return t;
                    },
                    getSelectorFromElement: function getSelectorFromElement(t) {
                        var e = t.getAttribute("data-target");

                        if (!e || "#" === e) {
                            var n = t.getAttribute("href");
                            e = n && "#" !== n ? n.trim() : "";
                        }

                        try {
                            return document.querySelector(e) ? e : null;
                        } catch (t) {
                            return null;
                        }
                    },
                    getTransitionDurationFromElement: function getTransitionDurationFromElement(t) {
                        if (!t) return 0;
                        var e = p(t).css("transition-duration"),
                            n = p(t).css("transition-delay"),
                            i = parseFloat(e),
                            o = parseFloat(n);
                        return i || o ? (e = e.split(",")[0], n = n.split(",")[0], 1e3 * (parseFloat(e) + parseFloat(n))) : 0;
                    },
                    reflow: function reflow(t) {
                        return t.offsetHeight;
                    },
                    triggerTransitionEnd: function triggerTransitionEnd(t) {
                        p(t).trigger(e);
                    },
                    supportsTransitionEnd: function supportsTransitionEnd() {
                        return Boolean(e);
                    },
                    isElement: function isElement(t) {
                        return (t[0] || t).nodeType;
                    },
                    typeCheckConfig: function typeCheckConfig(t, e, n) {
                        for (var i in n) {
                            if (Object.prototype.hasOwnProperty.call(n, i)) {
                                var o = n[i],
                                    r = e[i],
                                    s = r && m.isElement(r) ? "element" : (a = r, {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());
                                if (!new RegExp(o).test(s)) throw new Error(t.toUpperCase() + ': Option "' + i + '" provided type "' + s + '" but expected type "' + o + '".');
                            }
                        }

                        var a;
                    },
                    findShadowRoot: function findShadowRoot(t) {
                        if (!document.documentElement.attachShadow) return null;
                        if ("function" != typeof t.getRootNode) return t instanceof ShadowRoot ? t : t.parentNode ? m.findShadowRoot(t.parentNode) : null;
                        var e = t.getRootNode();
                        return e instanceof ShadowRoot ? e : null;
                    }
                };
                p.fn.emulateTransitionEnd = n, p.event.special[m.TRANSITION_END] = {
                    bindType: e,
                    delegateType: e,
                    handle: function handle(t) {
                        if (p(t.target).is(this)) return t.handleObj.handler.apply(this, arguments);
                    }
                };

                var o = "alert",
                    r = "bs.alert",
                    a = "." + r,
                    c = p.fn[o],
                    h = {
                        CLOSE: "close" + a,
                        CLOSED: "closed" + a,
                        CLICK_DATA_API: "click" + a + ".data-api"
                    },
                    u = "alert",
                    f = "fade",
                    d = "show",
                    g = function () {
                        function i(t) {
                            this._element = t;
                        }

                        var t = i.prototype;
                        return t.close = function (t) {
                            var e = this._element;
                            t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e);
                        }, t.dispose = function () {
                            p.removeData(this._element, r), this._element = null;
                        }, t._getRootElement = function (t) {
                            var e = m.getSelectorFromElement(t),
                                n = !1;
                            return e && (n = document.querySelector(e)), n || (n = p(t).closest("." + u)[0]), n;
                        }, t._triggerCloseEvent = function (t) {
                            var e = p.Event(h.CLOSE);
                            return p(t).trigger(e), e;
                        }, t._removeElement = function (e) {
                            var n = this;

                            if (p(e).removeClass(d), p(e).hasClass(f)) {
                                var t = m.getTransitionDurationFromElement(e);
                                p(e).one(m.TRANSITION_END, function (t) {
                                    return n._destroyElement(e, t);
                                }).emulateTransitionEnd(t);
                            } else this._destroyElement(e);
                        }, t._destroyElement = function (t) {
                            p(t).detach().trigger(h.CLOSED).remove();
                        }, i._jQueryInterface = function (n) {
                            return this.each(function () {
                                var t = p(this),
                                    e = t.data(r);
                                e || (e = new i(this), t.data(r, e)), "close" === n && e[n](this);
                            });
                        }, i._handleDismiss = function (e) {
                            return function (t) {
                                t && t.preventDefault(), e.close(this);
                            };
                        }, s(i, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }]), i;
                    }();

                p(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', g._handleDismiss(new g())), p.fn[o] = g._jQueryInterface, p.fn[o].Constructor = g, p.fn[o].noConflict = function () {
                    return p.fn[o] = c, g._jQueryInterface;
                };

                var _ = "button",
                    v = "bs.button",
                    y = "." + v,
                    E = ".data-api",
                    b = p.fn[_],
                    w = "active",
                    C = "btn",
                    T = "focus",
                    S = '[data-toggle^="button"]',
                    D = '[data-toggle="buttons"]',
                    I = 'input:not([type="hidden"])',
                    A = ".active",
                    O = ".btn",
                    N = {
                        CLICK_DATA_API: "click" + y + E,
                        FOCUS_BLUR_DATA_API: "focus" + y + E + " blur" + y + E
                    },
                    k = function () {
                        function n(t) {
                            this._element = t;
                        }

                        var t = n.prototype;
                        return t.toggle = function () {
                            var t = !0,
                                e = !0,
                                n = p(this._element).closest(D)[0];

                            if (n) {
                                var i = this._element.querySelector(I);

                                if (i) {
                                    if ("radio" === i.type) if (i.checked && this._element.classList.contains(w)) t = !1; else {
                                        var o = n.querySelector(A);
                                        o && p(o).removeClass(w);
                                    }

                                    if (t) {
                                        if (i.hasAttribute("disabled") || n.hasAttribute("disabled") || i.classList.contains("disabled") || n.classList.contains("disabled")) return;
                                        i.checked = !this._element.classList.contains(w), p(i).trigger("change");
                                    }

                                    i.focus(), e = !1;
                                }
                            }

                            e && this._element.setAttribute("aria-pressed", !this._element.classList.contains(w)), t && p(this._element).toggleClass(w);
                        }, t.dispose = function () {
                            p.removeData(this._element, v), this._element = null;
                        }, n._jQueryInterface = function (e) {
                            return this.each(function () {
                                var t = p(this).data(v);
                                t || (t = new n(this), p(this).data(v, t)), "toggle" === e && t[e]();
                            });
                        }, s(n, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }]), n;
                    }();

                p(document).on(N.CLICK_DATA_API, S, function (t) {
                    t.preventDefault();
                    var e = t.target;
                    p(e).hasClass(C) || (e = p(e).closest(O)), k._jQueryInterface.call(p(e), "toggle");
                }).on(N.FOCUS_BLUR_DATA_API, S, function (t) {
                    var e = p(t.target).closest(O)[0];
                    p(e).toggleClass(T, /^focus(in)?$/.test(t.type));
                }), p.fn[_] = k._jQueryInterface, p.fn[_].Constructor = k, p.fn[_].noConflict = function () {
                    return p.fn[_] = b, k._jQueryInterface;
                };

                var L = "carousel",
                    x = "bs.carousel",
                    P = "." + x,
                    H = ".data-api",
                    j = p.fn[L],
                    R = {
                        interval: 5e3,
                        keyboard: !0,
                        slide: !1,
                        pause: "hover",
                        wrap: !0,
                        touch: !0
                    },
                    F = {
                        interval: "(number|boolean)",
                        keyboard: "boolean",
                        slide: "(boolean|string)",
                        pause: "(string|boolean)",
                        wrap: "boolean",
                        touch: "boolean"
                    },
                    M = "next",
                    W = "prev",
                    U = "left",
                    B = "right",
                    q = {
                        SLIDE: "slide" + P,
                        SLID: "slid" + P,
                        KEYDOWN: "keydown" + P,
                        MOUSEENTER: "mouseenter" + P,
                        MOUSELEAVE: "mouseleave" + P,
                        TOUCHSTART: "touchstart" + P,
                        TOUCHMOVE: "touchmove" + P,
                        TOUCHEND: "touchend" + P,
                        POINTERDOWN: "pointerdown" + P,
                        POINTERUP: "pointerup" + P,
                        DRAG_START: "dragstart" + P,
                        LOAD_DATA_API: "load" + P + H,
                        CLICK_DATA_API: "click" + P + H
                    },
                    K = "carousel",
                    Q = "active",
                    V = "slide",
                    Y = "carousel-item-right",
                    z = "carousel-item-left",
                    X = "carousel-item-next",
                    G = "carousel-item-prev",
                    $ = "pointer-event",
                    J = ".active",
                    Z = ".active.carousel-item",
                    tt = ".carousel-item",
                    et = ".carousel-item img",
                    nt = ".carousel-item-next, .carousel-item-prev",
                    it = ".carousel-indicators",
                    ot = "[data-slide], [data-slide-to]",
                    rt = '[data-ride="carousel"]',
                    st = {
                        TOUCH: "touch",
                        PEN: "pen"
                    },
                    at = function () {
                        function r(t, e) {
                            this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(it), this._touchSupported = "ontouchstart" in document.documentElement || 0 < navigator.maxTouchPoints, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners();
                        }

                        var t = r.prototype;
                        return t.next = function () {
                            this._isSliding || this._slide(M);
                        }, t.nextWhenVisible = function () {
                            !document.hidden && p(this._element).is(":visible") && "hidden" !== p(this._element).css("visibility") && this.next();
                        }, t.prev = function () {
                            this._isSliding || this._slide(W);
                        }, t.pause = function (t) {
                            t || (this._isPaused = !0), this._element.querySelector(nt) && (m.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null;
                        }, t.cycle = function (t) {
                            t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
                        }, t.to = function (t) {
                            var e = this;
                            this._activeElement = this._element.querySelector(Z);

                            var n = this._getItemIndex(this._activeElement);

                            if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding) p(this._element).one(q.SLID, function () {
                                return e.to(t);
                            }); else {
                                if (n === t) return this.pause(), void this.cycle();
                                var i = n < t ? M : W;

                                this._slide(i, this._items[t]);
                            }
                        }, t.dispose = function () {
                            p(this._element).off(P), p.removeData(this._element, x), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null;
                        }, t._getConfig = function (t) {
                            return t = l({}, R, t), m.typeCheckConfig(L, t, F), t;
                        }, t._handleSwipe = function () {
                            var t = Math.abs(this.touchDeltaX);

                            if (!(t <= 40)) {
                                var e = t / this.touchDeltaX;
                                0 < e && this.prev(), e < 0 && this.next();
                            }
                        }, t._addEventListeners = function () {
                            var e = this;
                            this._config.keyboard && p(this._element).on(q.KEYDOWN, function (t) {
                                return e._keydown(t);
                            }), "hover" === this._config.pause && p(this._element).on(q.MOUSEENTER, function (t) {
                                return e.pause(t);
                            }).on(q.MOUSELEAVE, function (t) {
                                return e.cycle(t);
                            }), this._config.touch && this._addTouchEventListeners();
                        }, t._addTouchEventListeners = function () {
                            var n = this;

                            if (this._touchSupported) {
                                var e = function e(t) {
                                        n._pointerEvent && st[t.originalEvent.pointerType.toUpperCase()] ? n.touchStartX = t.originalEvent.clientX : n._pointerEvent || (n.touchStartX = t.originalEvent.touches[0].clientX);
                                    },
                                    i = function i(t) {
                                        n._pointerEvent && st[t.originalEvent.pointerType.toUpperCase()] && (n.touchDeltaX = t.originalEvent.clientX - n.touchStartX), n._handleSwipe(), "hover" === n._config.pause && (n.pause(), n.touchTimeout && clearTimeout(n.touchTimeout), n.touchTimeout = setTimeout(function (t) {
                                            return n.cycle(t);
                                        }, 500 + n._config.interval));
                                    };

                                p(this._element.querySelectorAll(et)).on(q.DRAG_START, function (t) {
                                    return t.preventDefault();
                                }), this._pointerEvent ? (p(this._element).on(q.POINTERDOWN, function (t) {
                                    return e(t);
                                }), p(this._element).on(q.POINTERUP, function (t) {
                                    return i(t);
                                }), this._element.classList.add($)) : (p(this._element).on(q.TOUCHSTART, function (t) {
                                    return e(t);
                                }), p(this._element).on(q.TOUCHMOVE, function (t) {
                                    var e;
                                    (e = t).originalEvent.touches && 1 < e.originalEvent.touches.length ? n.touchDeltaX = 0 : n.touchDeltaX = e.originalEvent.touches[0].clientX - n.touchStartX;
                                }), p(this._element).on(q.TOUCHEND, function (t) {
                                    return i(t);
                                }));
                            }
                        }, t._keydown = function (t) {
                            if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) {
                                case 37:
                                    t.preventDefault(), this.prev();
                                    break;

                                case 39:
                                    t.preventDefault(), this.next();
                            }
                        }, t._getItemIndex = function (t) {
                            return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(tt)) : [], this._items.indexOf(t);
                        }, t._getItemByDirection = function (t, e) {
                            var n = t === M,
                                i = t === W,
                                o = this._getItemIndex(e),
                                r = this._items.length - 1;

                            if ((i && 0 === o || n && o === r) && !this._config.wrap) return e;
                            var s = (o + (t === W ? -1 : 1)) % this._items.length;
                            return -1 === s ? this._items[this._items.length - 1] : this._items[s];
                        }, t._triggerSlideEvent = function (t, e) {
                            var n = this._getItemIndex(t),
                                i = this._getItemIndex(this._element.querySelector(Z)),
                                o = p.Event(q.SLIDE, {
                                    relatedTarget: t,
                                    direction: e,
                                    from: i,
                                    to: n
                                });

                            return p(this._element).trigger(o), o;
                        }, t._setActiveIndicatorElement = function (t) {
                            if (this._indicatorsElement) {
                                var e = [].slice.call(this._indicatorsElement.querySelectorAll(J));
                                p(e).removeClass(Q);

                                var n = this._indicatorsElement.children[this._getItemIndex(t)];

                                n && p(n).addClass(Q);
                            }
                        }, t._slide = function (t, e) {
                            var n,
                                i,
                                o,
                                r = this,
                                s = this._element.querySelector(Z),
                                a = this._getItemIndex(s),
                                l = e || s && this._getItemByDirection(t, s),
                                c = this._getItemIndex(l),
                                h = Boolean(this._interval);

                            if (o = t === M ? (n = z, i = X, U) : (n = Y, i = G, B), l && p(l).hasClass(Q)) this._isSliding = !1; else if (!this._triggerSlideEvent(l, o).isDefaultPrevented() && s && l) {
                                this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l);
                                var u = p.Event(q.SLID, {
                                    relatedTarget: l,
                                    direction: o,
                                    from: a,
                                    to: c
                                });

                                if (p(this._element).hasClass(V)) {
                                    p(l).addClass(i), m.reflow(l), p(s).addClass(n), p(l).addClass(n);
                                    var f = parseInt(l.getAttribute("data-interval"), 10);
                                    this._config.interval = f ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f) : this._config.defaultInterval || this._config.interval;
                                    var d = m.getTransitionDurationFromElement(s);
                                    p(s).one(m.TRANSITION_END, function () {
                                        p(l).removeClass(n + " " + i).addClass(Q), p(s).removeClass(Q + " " + i + " " + n), r._isSliding = !1, setTimeout(function () {
                                            return p(r._element).trigger(u);
                                        }, 0);
                                    }).emulateTransitionEnd(d);
                                } else p(s).removeClass(Q), p(l).addClass(Q), this._isSliding = !1, p(this._element).trigger(u);

                                h && this.cycle();
                            }
                        }, r._jQueryInterface = function (i) {
                            return this.each(function () {
                                var t = p(this).data(x),
                                    e = l({}, R, p(this).data());
                                "object" == _typeof(i) && (e = l({}, e, i));
                                var n = "string" == typeof i ? i : e.slide;
                                if (t || (t = new r(this, e), p(this).data(x, t)), "number" == typeof i) t.to(i); else if ("string" == typeof n) {
                                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                                    t[n]();
                                } else e.interval && e.ride && (t.pause(), t.cycle());
                            });
                        }, r._dataApiClickHandler = function (t) {
                            var e = m.getSelectorFromElement(this);

                            if (e) {
                                var n = p(e)[0];

                                if (n && p(n).hasClass(K)) {
                                    var i = l({}, p(n).data(), p(this).data()),
                                        o = this.getAttribute("data-slide-to");
                                    o && (i.interval = !1), r._jQueryInterface.call(p(n), i), o && p(n).data(x).to(o), t.preventDefault();
                                }
                            }
                        }, s(r, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return R;
                            }
                        }]), r;
                    }();

                p(document).on(q.CLICK_DATA_API, ot, at._dataApiClickHandler), p(window).on(q.LOAD_DATA_API, function () {
                    for (var t = [].slice.call(document.querySelectorAll(rt)), e = 0, n = t.length; e < n; e++) {
                        var i = p(t[e]);

                        at._jQueryInterface.call(i, i.data());
                    }
                }), p.fn[L] = at._jQueryInterface, p.fn[L].Constructor = at, p.fn[L].noConflict = function () {
                    return p.fn[L] = j, at._jQueryInterface;
                };

                var lt = "collapse",
                    ct = "bs.collapse",
                    ht = "." + ct,
                    ut = p.fn[lt],
                    ft = {
                        toggle: !0,
                        parent: ""
                    },
                    dt = {
                        toggle: "boolean",
                        parent: "(string|element)"
                    },
                    pt = {
                        SHOW: "show" + ht,
                        SHOWN: "shown" + ht,
                        HIDE: "hide" + ht,
                        HIDDEN: "hidden" + ht,
                        CLICK_DATA_API: "click" + ht + ".data-api"
                    },
                    mt = "show",
                    gt = "collapse",
                    _t = "collapsing",
                    vt = "collapsed",
                    yt = "width",
                    Et = "height",
                    bt = ".show, .collapsing",
                    wt = '[data-toggle="collapse"]',
                    Ct = function () {
                        function a(e, t) {
                            this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]'));

                            for (var n = [].slice.call(document.querySelectorAll(wt)), i = 0, o = n.length; i < o; i++) {
                                var r = n[i],
                                    s = m.getSelectorFromElement(r),
                                    a = [].slice.call(document.querySelectorAll(s)).filter(function (t) {
                                        return t === e;
                                    });
                                null !== s && 0 < a.length && (this._selector = s, this._triggerArray.push(r));
                            }

                            this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
                        }

                        var t = a.prototype;
                        return t.toggle = function () {
                            p(this._element).hasClass(mt) ? this.hide() : this.show();
                        }, t.show = function () {
                            var t,
                                e,
                                n = this;

                            if (!this._isTransitioning && !p(this._element).hasClass(mt) && (this._parent && 0 === (t = [].slice.call(this._parent.querySelectorAll(bt)).filter(function (t) {
                                return "string" == typeof n._config.parent ? t.getAttribute("data-parent") === n._config.parent : t.classList.contains(gt);
                            })).length && (t = null), !(t && (e = p(t).not(this._selector).data(ct)) && e._isTransitioning))) {
                                var i = p.Event(pt.SHOW);

                                if (p(this._element).trigger(i), !i.isDefaultPrevented()) {
                                    t && (a._jQueryInterface.call(p(t).not(this._selector), "hide"), e || p(t).data(ct, null));

                                    var o = this._getDimension();

                                    p(this._element).removeClass(gt).addClass(_t), this._element.style[o] = 0, this._triggerArray.length && p(this._triggerArray).removeClass(vt).attr("aria-expanded", !0), this.setTransitioning(!0);
                                    var r = "scroll" + (o[0].toUpperCase() + o.slice(1)),
                                        s = m.getTransitionDurationFromElement(this._element);
                                    p(this._element).one(m.TRANSITION_END, function () {
                                        p(n._element).removeClass(_t).addClass(gt).addClass(mt), n._element.style[o] = "", n.setTransitioning(!1), p(n._element).trigger(pt.SHOWN);
                                    }).emulateTransitionEnd(s), this._element.style[o] = this._element[r] + "px";
                                }
                            }
                        }, t.hide = function () {
                            var t = this;

                            if (!this._isTransitioning && p(this._element).hasClass(mt)) {
                                var e = p.Event(pt.HIDE);

                                if (p(this._element).trigger(e), !e.isDefaultPrevented()) {
                                    var n = this._getDimension();

                                    this._element.style[n] = this._element.getBoundingClientRect()[n] + "px", m.reflow(this._element), p(this._element).addClass(_t).removeClass(gt).removeClass(mt);
                                    var i = this._triggerArray.length;
                                    if (0 < i) for (var o = 0; o < i; o++) {
                                        var r = this._triggerArray[o],
                                            s = m.getSelectorFromElement(r);
                                        if (null !== s) p([].slice.call(document.querySelectorAll(s))).hasClass(mt) || p(r).addClass(vt).attr("aria-expanded", !1);
                                    }
                                    this.setTransitioning(!0);
                                    this._element.style[n] = "";
                                    var a = m.getTransitionDurationFromElement(this._element);
                                    p(this._element).one(m.TRANSITION_END, function () {
                                        t.setTransitioning(!1), p(t._element).removeClass(_t).addClass(gt).trigger(pt.HIDDEN);
                                    }).emulateTransitionEnd(a);
                                }
                            }
                        }, t.setTransitioning = function (t) {
                            this._isTransitioning = t;
                        }, t.dispose = function () {
                            p.removeData(this._element, ct), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null;
                        }, t._getConfig = function (t) {
                            return (t = l({}, ft, t)).toggle = Boolean(t.toggle), m.typeCheckConfig(lt, t, dt), t;
                        }, t._getDimension = function () {
                            return p(this._element).hasClass(yt) ? yt : Et;
                        }, t._getParent = function () {
                            var t,
                                n = this;
                            m.isElement(this._config.parent) ? (t = this._config.parent, "undefined" != typeof this._config.parent.jquery && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent);
                            var e = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]',
                                i = [].slice.call(t.querySelectorAll(e));
                            return p(i).each(function (t, e) {
                                n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]);
                            }), t;
                        }, t._addAriaAndCollapsedClass = function (t, e) {
                            var n = p(t).hasClass(mt);
                            e.length && p(e).toggleClass(vt, !n).attr("aria-expanded", n);
                        }, a._getTargetFromElement = function (t) {
                            var e = m.getSelectorFromElement(t);
                            return e ? document.querySelector(e) : null;
                        }, a._jQueryInterface = function (i) {
                            return this.each(function () {
                                var t = p(this),
                                    e = t.data(ct),
                                    n = l({}, ft, t.data(), "object" == _typeof(i) && i ? i : {});

                                if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(ct, e)), "string" == typeof i) {
                                    if ("undefined" == typeof e[i]) throw new TypeError('No method named "' + i + '"');
                                    e[i]();
                                }
                            });
                        }, s(a, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return ft;
                            }
                        }]), a;
                    }();

                p(document).on(pt.CLICK_DATA_API, wt, function (t) {
                    "A" === t.currentTarget.tagName && t.preventDefault();
                    var n = p(this),
                        e = m.getSelectorFromElement(this),
                        i = [].slice.call(document.querySelectorAll(e));
                    p(i).each(function () {
                        var t = p(this),
                            e = t.data(ct) ? "toggle" : n.data();

                        Ct._jQueryInterface.call(t, e);
                    });
                }), p.fn[lt] = Ct._jQueryInterface, p.fn[lt].Constructor = Ct, p.fn[lt].noConflict = function () {
                    return p.fn[lt] = ut, Ct._jQueryInterface;
                };

                for (var Tt = "undefined" != typeof window && "undefined" != typeof document, St = ["Edge", "Trident", "Firefox"], Dt = 0, It = 0; It < St.length; It += 1) {
                    if (Tt && 0 <= navigator.userAgent.indexOf(St[It])) {
                        Dt = 1;
                        break;
                    }
                }

                var At = Tt && window.Promise ? function (t) {
                    var e = !1;
                    return function () {
                        e || (e = !0, window.Promise.resolve().then(function () {
                            e = !1, t();
                        }));
                    };
                } : function (t) {
                    var e = !1;
                    return function () {
                        e || (e = !0, setTimeout(function () {
                            e = !1, t();
                        }, Dt));
                    };
                };

                function Ot(t) {
                    return t && "[object Function]" === {}.toString.call(t);
                }

                function Nt(t, e) {
                    if (1 !== t.nodeType) return [];
                    var n = t.ownerDocument.defaultView.getComputedStyle(t, null);
                    return e ? n[e] : n;
                }

                function kt(t) {
                    return "HTML" === t.nodeName ? t : t.parentNode || t.host;
                }

                function Lt(t) {
                    if (!t) return document.body;

                    switch (t.nodeName) {
                        case "HTML":
                        case "BODY":
                            return t.ownerDocument.body;

                        case "#document":
                            return t.body;
                    }

                    var e = Nt(t),
                        n = e.overflow,
                        i = e.overflowX,
                        o = e.overflowY;
                    return /(auto|scroll|overlay)/.test(n + o + i) ? t : Lt(kt(t));
                }

                var xt = Tt && !(!window.MSInputMethodContext || !document.documentMode),
                    Pt = Tt && /MSIE 10/.test(navigator.userAgent);

                function Ht(t) {
                    return 11 === t ? xt : 10 === t ? Pt : xt || Pt;
                }

                function jt(t) {
                    if (!t) return document.documentElement;

                    for (var e = Ht(10) ? document.body : null, n = t.offsetParent || null; n === e && t.nextElementSibling;) {
                        n = (t = t.nextElementSibling).offsetParent;
                    }

                    var i = n && n.nodeName;
                    return i && "BODY" !== i && "HTML" !== i ? -1 !== ["TH", "TD", "TABLE"].indexOf(n.nodeName) && "static" === Nt(n, "position") ? jt(n) : n : t ? t.ownerDocument.documentElement : document.documentElement;
                }

                function Rt(t) {
                    return null !== t.parentNode ? Rt(t.parentNode) : t;
                }

                function Ft(t, e) {
                    if (!(t && t.nodeType && e && e.nodeType)) return document.documentElement;
                    var n = t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_FOLLOWING,
                        i = n ? t : e,
                        o = n ? e : t,
                        r = document.createRange();
                    r.setStart(i, 0), r.setEnd(o, 0);
                    var s,
                        a,
                        l = r.commonAncestorContainer;
                    if (t !== l && e !== l || i.contains(o)) return "BODY" === (a = (s = l).nodeName) || "HTML" !== a && jt(s.firstElementChild) !== s ? jt(l) : l;
                    var c = Rt(t);
                    return c.host ? Ft(c.host, e) : Ft(t, Rt(e).host);
                }

                function Mt(t) {
                    var e = "top" === (1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "top") ? "scrollTop" : "scrollLeft",
                        n = t.nodeName;
                    if ("BODY" !== n && "HTML" !== n) return t[e];
                    var i = t.ownerDocument.documentElement;
                    return (t.ownerDocument.scrollingElement || i)[e];
                }

                function Wt(t, e) {
                    var n = "x" === e ? "Left" : "Top",
                        i = "Left" === n ? "Right" : "Bottom";
                    return parseFloat(t["border" + n + "Width"], 10) + parseFloat(t["border" + i + "Width"], 10);
                }

                function Ut(t, e, n, i) {
                    return Math.max(e["offset" + t], e["scroll" + t], n["client" + t], n["offset" + t], n["scroll" + t], Ht(10) ? parseInt(n["offset" + t]) + parseInt(i["margin" + ("Height" === t ? "Top" : "Left")]) + parseInt(i["margin" + ("Height" === t ? "Bottom" : "Right")]) : 0);
                }

                function Bt(t) {
                    var e = t.body,
                        n = t.documentElement,
                        i = Ht(10) && getComputedStyle(n);
                    return {
                        height: Ut("Height", e, n, i),
                        width: Ut("Width", e, n, i)
                    };
                }

                var qt = function () {
                        function i(t, e) {
                            for (var n = 0; n < e.length; n++) {
                                var i = e[n];
                                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
                            }
                        }

                        return function (t, e, n) {
                            return e && i(t.prototype, e), n && i(t, n), t;
                        };
                    }(),
                    Kt = function Kt(t, e, n) {
                        return e in t ? Object.defineProperty(t, e, {
                            value: n,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : t[e] = n, t;
                    },
                    Qt = Object.assign || function (t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = arguments[e];

                            for (var i in n) {
                                Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
                            }
                        }

                        return t;
                    };

                function Vt(t) {
                    return Qt({}, t, {
                        right: t.left + t.width,
                        bottom: t.top + t.height
                    });
                }

                function Yt(t) {
                    var e = {};

                    try {
                        if (Ht(10)) {
                            e = t.getBoundingClientRect();
                            var n = Mt(t, "top"),
                                i = Mt(t, "left");
                            e.top += n, e.left += i, e.bottom += n, e.right += i;
                        } else e = t.getBoundingClientRect();
                    } catch (t) {
                    }

                    var o = {
                            left: e.left,
                            top: e.top,
                            width: e.right - e.left,
                            height: e.bottom - e.top
                        },
                        r = "HTML" === t.nodeName ? Bt(t.ownerDocument) : {},
                        s = r.width || t.clientWidth || o.right - o.left,
                        a = r.height || t.clientHeight || o.bottom - o.top,
                        l = t.offsetWidth - s,
                        c = t.offsetHeight - a;

                    if (l || c) {
                        var h = Nt(t);
                        l -= Wt(h, "x"), c -= Wt(h, "y"), o.width -= l, o.height -= c;
                    }

                    return Vt(o);
                }

                function zt(t, e) {
                    var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
                        i = Ht(10),
                        o = "HTML" === e.nodeName,
                        r = Yt(t),
                        s = Yt(e),
                        a = Lt(t),
                        l = Nt(e),
                        c = parseFloat(l.borderTopWidth, 10),
                        h = parseFloat(l.borderLeftWidth, 10);
                    n && o && (s.top = Math.max(s.top, 0), s.left = Math.max(s.left, 0));
                    var u = Vt({
                        top: r.top - s.top - c,
                        left: r.left - s.left - h,
                        width: r.width,
                        height: r.height
                    });

                    if (u.marginTop = 0, u.marginLeft = 0, !i && o) {
                        var f = parseFloat(l.marginTop, 10),
                            d = parseFloat(l.marginLeft, 10);
                        u.top -= c - f, u.bottom -= c - f, u.left -= h - d, u.right -= h - d, u.marginTop = f, u.marginLeft = d;
                    }

                    return (i && !n ? e.contains(a) : e === a && "BODY" !== a.nodeName) && (u = function (t, e) {
                        var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
                            i = Mt(e, "top"),
                            o = Mt(e, "left"),
                            r = n ? -1 : 1;
                        return t.top += i * r, t.bottom += i * r, t.left += o * r, t.right += o * r, t;
                    }(u, e)), u;
                }

                function Xt(t) {
                    if (!t || !t.parentElement || Ht()) return document.documentElement;

                    for (var e = t.parentElement; e && "none" === Nt(e, "transform");) {
                        e = e.parentElement;
                    }

                    return e || document.documentElement;
                }

                function Gt(t, e, n, i) {
                    var o = 4 < arguments.length && void 0 !== arguments[4] && arguments[4],
                        r = {
                            top: 0,
                            left: 0
                        },
                        s = o ? Xt(t) : Ft(t, e);
                    if ("viewport" === i) r = function (t) {
                        var e = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                            n = t.ownerDocument.documentElement,
                            i = zt(t, n),
                            o = Math.max(n.clientWidth, window.innerWidth || 0),
                            r = Math.max(n.clientHeight, window.innerHeight || 0),
                            s = e ? 0 : Mt(n),
                            a = e ? 0 : Mt(n, "left");
                        return Vt({
                            top: s - i.top + i.marginTop,
                            left: a - i.left + i.marginLeft,
                            width: o,
                            height: r
                        });
                    }(s, o); else {
                        var a = void 0;
                        "scrollParent" === i ? "BODY" === (a = Lt(kt(e))).nodeName && (a = t.ownerDocument.documentElement) : a = "window" === i ? t.ownerDocument.documentElement : i;
                        var l = zt(a, s, o);
                        if ("HTML" !== a.nodeName || function t(e) {
                            var n = e.nodeName;
                            if ("BODY" === n || "HTML" === n) return !1;
                            if ("fixed" === Nt(e, "position")) return !0;
                            var i = kt(e);
                            return !!i && t(i);
                        }(s)) r = l; else {
                            var c = Bt(t.ownerDocument),
                                h = c.height,
                                u = c.width;
                            r.top += l.top - l.marginTop, r.bottom = h + l.top, r.left += l.left - l.marginLeft, r.right = u + l.left;
                        }
                    }
                    var f = "number" == typeof (n = n || 0);
                    return r.left += f ? n : n.left || 0, r.top += f ? n : n.top || 0, r.right -= f ? n : n.right || 0, r.bottom -= f ? n : n.bottom || 0, r;
                }

                function $t(t, e, i, n, o) {
                    var r = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0;
                    if (-1 === t.indexOf("auto")) return t;
                    var s = Gt(i, n, r, o),
                        a = {
                            top: {
                                width: s.width,
                                height: e.top - s.top
                            },
                            right: {
                                width: s.right - e.right,
                                height: s.height
                            },
                            bottom: {
                                width: s.width,
                                height: s.bottom - e.bottom
                            },
                            left: {
                                width: e.left - s.left,
                                height: s.height
                            }
                        },
                        l = Object.keys(a).map(function (t) {
                            return Qt({
                                key: t
                            }, a[t], {
                                area: (e = a[t], e.width * e.height)
                            });
                            var e;
                        }).sort(function (t, e) {
                            return e.area - t.area;
                        }),
                        c = l.filter(function (t) {
                            var e = t.width,
                                n = t.height;
                            return e >= i.clientWidth && n >= i.clientHeight;
                        }),
                        h = 0 < c.length ? c[0].key : l[0].key,
                        u = t.split("-")[1];
                    return h + (u ? "-" + u : "");
                }

                function Jt(t, e, n) {
                    var i = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                    return zt(n, i ? Xt(e) : Ft(e, n), i);
                }

                function Zt(t) {
                    var e = t.ownerDocument.defaultView.getComputedStyle(t),
                        n = parseFloat(e.marginTop || 0) + parseFloat(e.marginBottom || 0),
                        i = parseFloat(e.marginLeft || 0) + parseFloat(e.marginRight || 0);
                    return {
                        width: t.offsetWidth + i,
                        height: t.offsetHeight + n
                    };
                }

                function te(t) {
                    var e = {
                        left: "right",
                        right: "left",
                        bottom: "top",
                        top: "bottom"
                    };
                    return t.replace(/left|right|bottom|top/g, function (t) {
                        return e[t];
                    });
                }

                function ee(t, e, n) {
                    n = n.split("-")[0];
                    var i = Zt(t),
                        o = {
                            width: i.width,
                            height: i.height
                        },
                        r = -1 !== ["right", "left"].indexOf(n),
                        s = r ? "top" : "left",
                        a = r ? "left" : "top",
                        l = r ? "height" : "width",
                        c = r ? "width" : "height";
                    return o[s] = e[s] + e[l] / 2 - i[l] / 2, o[a] = n === a ? e[a] - i[c] : e[te(a)], o;
                }

                function ne(t, e) {
                    return Array.prototype.find ? t.find(e) : t.filter(e)[0];
                }

                function ie(t, n, e) {
                    return (void 0 === e ? t : t.slice(0, function (t, e, n) {
                        if (Array.prototype.findIndex) return t.findIndex(function (t) {
                            return t[e] === n;
                        });
                        var i = ne(t, function (t) {
                            return t[e] === n;
                        });
                        return t.indexOf(i);
                    }(t, "name", e))).forEach(function (t) {
                        t["function"] && console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
                        var e = t["function"] || t.fn;
                        t.enabled && Ot(e) && (n.offsets.popper = Vt(n.offsets.popper), n.offsets.reference = Vt(n.offsets.reference), n = e(n, t));
                    }), n;
                }

                function oe(t, n) {
                    return t.some(function (t) {
                        var e = t.name;
                        return t.enabled && e === n;
                    });
                }

                function re(t) {
                    for (var e = [!1, "ms", "Webkit", "Moz", "O"], n = t.charAt(0).toUpperCase() + t.slice(1), i = 0; i < e.length; i++) {
                        var o = e[i],
                            r = o ? "" + o + n : t;
                        if ("undefined" != typeof document.body.style[r]) return r;
                    }

                    return null;
                }

                function se(t) {
                    var e = t.ownerDocument;
                    return e ? e.defaultView : window;
                }

                function ae(t, e, n, i) {
                    n.updateBound = i, se(t).addEventListener("resize", n.updateBound, {
                        passive: !0
                    });
                    var o = Lt(t);
                    return function t(e, n, i, o) {
                        var r = "BODY" === e.nodeName,
                            s = r ? e.ownerDocument.defaultView : e;
                        s.addEventListener(n, i, {
                            passive: !0
                        }), r || t(Lt(s.parentNode), n, i, o), o.push(s);
                    }(o, "scroll", n.updateBound, n.scrollParents), n.scrollElement = o, n.eventsEnabled = !0, n;
                }

                function le() {
                    var t, e;
                    this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = (t = this.reference, e = this.state, se(t).removeEventListener("resize", e.updateBound), e.scrollParents.forEach(function (t) {
                        t.removeEventListener("scroll", e.updateBound);
                    }), e.updateBound = null, e.scrollParents = [], e.scrollElement = null, e.eventsEnabled = !1, e));
                }

                function ce(t) {
                    return "" !== t && !isNaN(parseFloat(t)) && isFinite(t);
                }

                function he(n, i) {
                    Object.keys(i).forEach(function (t) {
                        var e = "";
                        -1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(t) && ce(i[t]) && (e = "px"), n.style[t] = i[t] + e;
                    });
                }

                var ue = Tt && /Firefox/i.test(navigator.userAgent);

                function fe(t, e, n) {
                    var i = ne(t, function (t) {
                            return t.name === e;
                        }),
                        o = !!i && t.some(function (t) {
                            return t.name === n && t.enabled && t.order < i.order;
                        });

                    if (!o) {
                        var r = "`" + e + "`",
                            s = "`" + n + "`";
                        console.warn(s + " modifier is required by " + r + " modifier in order to work, be sure to include it before " + r + "!");
                    }

                    return o;
                }

                var de = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"],
                    pe = de.slice(3);

                function me(t) {
                    var e = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                        n = pe.indexOf(t),
                        i = pe.slice(n + 1).concat(pe.slice(0, n));
                    return e ? i.reverse() : i;
                }

                var ge = "flip",
                    _e = "clockwise",
                    ve = "counterclockwise";

                function ye(t, o, r, e) {
                    var s = [0, 0],
                        a = -1 !== ["right", "left"].indexOf(e),
                        n = t.split(/(\+|\-)/).map(function (t) {
                            return t.trim();
                        }),
                        i = n.indexOf(ne(n, function (t) {
                            return -1 !== t.search(/,|\s/);
                        }));
                    n[i] && -1 === n[i].indexOf(",") && console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
                    var l = /\s*,\s*|\s+/,
                        c = -1 !== i ? [n.slice(0, i).concat([n[i].split(l)[0]]), [n[i].split(l)[1]].concat(n.slice(i + 1))] : [n];
                    return (c = c.map(function (t, e) {
                        var n = (1 === e ? !a : a) ? "height" : "width",
                            i = !1;
                        return t.reduce(function (t, e) {
                            return "" === t[t.length - 1] && -1 !== ["+", "-"].indexOf(e) ? (t[t.length - 1] = e, i = !0, t) : i ? (t[t.length - 1] += e, i = !1, t) : t.concat(e);
                        }, []).map(function (t) {
                            return function (t, e, n, i) {
                                var o = t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
                                    r = +o[1],
                                    s = o[2];
                                if (!r) return t;
                                if (0 !== s.indexOf("%")) return "vh" !== s && "vw" !== s ? r : ("vh" === s ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) / 100 * r;
                                var a = void 0;

                                switch (s) {
                                    case "%p":
                                        a = n;
                                        break;

                                    case "%":
                                    case "%r":
                                    default:
                                        a = i;
                                }

                                return Vt(a)[e] / 100 * r;
                            }(t, n, o, r);
                        });
                    })).forEach(function (n, i) {
                        n.forEach(function (t, e) {
                            ce(t) && (s[i] += t * ("-" === n[e - 1] ? -1 : 1));
                        });
                    }), s;
                }

                var Ee = {
                        placement: "bottom",
                        positionFixed: !1,
                        eventsEnabled: !0,
                        removeOnDestroy: !1,
                        onCreate: function onCreate() {
                        },
                        onUpdate: function onUpdate() {
                        },
                        modifiers: {
                            shift: {
                                order: 100,
                                enabled: !0,
                                fn: function fn(t) {
                                    var e = t.placement,
                                        n = e.split("-")[0],
                                        i = e.split("-")[1];

                                    if (i) {
                                        var o = t.offsets,
                                            r = o.reference,
                                            s = o.popper,
                                            a = -1 !== ["bottom", "top"].indexOf(n),
                                            l = a ? "left" : "top",
                                            c = a ? "width" : "height",
                                            h = {
                                                start: Kt({}, l, r[l]),
                                                end: Kt({}, l, r[l] + r[c] - s[c])
                                            };
                                        t.offsets.popper = Qt({}, s, h[i]);
                                    }

                                    return t;
                                }
                            },
                            offset: {
                                order: 200,
                                enabled: !0,
                                fn: function fn(t, e) {
                                    var n = e.offset,
                                        i = t.placement,
                                        o = t.offsets,
                                        r = o.popper,
                                        s = o.reference,
                                        a = i.split("-")[0],
                                        l = void 0;
                                    return l = ce(+n) ? [+n, 0] : ye(n, r, s, a), "left" === a ? (r.top += l[0], r.left -= l[1]) : "right" === a ? (r.top += l[0], r.left += l[1]) : "top" === a ? (r.left += l[0], r.top -= l[1]) : "bottom" === a && (r.left += l[0], r.top += l[1]), t.popper = r, t;
                                },
                                offset: 0
                            },
                            preventOverflow: {
                                order: 300,
                                enabled: !0,
                                fn: function fn(t, i) {
                                    var e = i.boundariesElement || jt(t.instance.popper);
                                    t.instance.reference === e && (e = jt(e));
                                    var n = re("transform"),
                                        o = t.instance.popper.style,
                                        r = o.top,
                                        s = o.left,
                                        a = o[n];
                                    o.top = "", o.left = "", o[n] = "";
                                    var l = Gt(t.instance.popper, t.instance.reference, i.padding, e, t.positionFixed);
                                    o.top = r, o.left = s, o[n] = a, i.boundaries = l;
                                    var c = i.priority,
                                        h = t.offsets.popper,
                                        u = {
                                            primary: function primary(t) {
                                                var e = h[t];
                                                return h[t] < l[t] && !i.escapeWithReference && (e = Math.max(h[t], l[t])), Kt({}, t, e);
                                            },
                                            secondary: function secondary(t) {
                                                var e = "right" === t ? "left" : "top",
                                                    n = h[e];
                                                return h[t] > l[t] && !i.escapeWithReference && (n = Math.min(h[e], l[t] - ("right" === t ? h.width : h.height))), Kt({}, e, n);
                                            }
                                        };
                                    return c.forEach(function (t) {
                                        var e = -1 !== ["left", "top"].indexOf(t) ? "primary" : "secondary";
                                        h = Qt({}, h, u[e](t));
                                    }), t.offsets.popper = h, t;
                                },
                                priority: ["left", "right", "top", "bottom"],
                                padding: 5,
                                boundariesElement: "scrollParent"
                            },
                            keepTogether: {
                                order: 400,
                                enabled: !0,
                                fn: function fn(t) {
                                    var e = t.offsets,
                                        n = e.popper,
                                        i = e.reference,
                                        o = t.placement.split("-")[0],
                                        r = Math.floor,
                                        s = -1 !== ["top", "bottom"].indexOf(o),
                                        a = s ? "right" : "bottom",
                                        l = s ? "left" : "top",
                                        c = s ? "width" : "height";
                                    return n[a] < r(i[l]) && (t.offsets.popper[l] = r(i[l]) - n[c]), n[l] > r(i[a]) && (t.offsets.popper[l] = r(i[a])), t;
                                }
                            },
                            arrow: {
                                order: 500,
                                enabled: !0,
                                fn: function fn(t, e) {
                                    var n;
                                    if (!fe(t.instance.modifiers, "arrow", "keepTogether")) return t;
                                    var i = e.element;

                                    if ("string" == typeof i) {
                                        if (!(i = t.instance.popper.querySelector(i))) return t;
                                    } else if (!t.instance.popper.contains(i)) return console.warn("WARNING: `arrow.element` must be child of its popper element!"), t;

                                    var o = t.placement.split("-")[0],
                                        r = t.offsets,
                                        s = r.popper,
                                        a = r.reference,
                                        l = -1 !== ["left", "right"].indexOf(o),
                                        c = l ? "height" : "width",
                                        h = l ? "Top" : "Left",
                                        u = h.toLowerCase(),
                                        f = l ? "left" : "top",
                                        d = l ? "bottom" : "right",
                                        p = Zt(i)[c];
                                    a[d] - p < s[u] && (t.offsets.popper[u] -= s[u] - (a[d] - p)), a[u] + p > s[d] && (t.offsets.popper[u] += a[u] + p - s[d]), t.offsets.popper = Vt(t.offsets.popper);

                                    var m = a[u] + a[c] / 2 - p / 2,
                                        g = Nt(t.instance.popper),
                                        _ = parseFloat(g["margin" + h], 10),
                                        v = parseFloat(g["border" + h + "Width"], 10),
                                        y = m - t.offsets.popper[u] - _ - v;

                                    return y = Math.max(Math.min(s[c] - p, y), 0), t.arrowElement = i, t.offsets.arrow = (Kt(n = {}, u, Math.round(y)), Kt(n, f, ""), n), t;
                                },
                                element: "[x-arrow]"
                            },
                            flip: {
                                order: 600,
                                enabled: !0,
                                fn: function fn(p, m) {
                                    if (oe(p.instance.modifiers, "inner")) return p;
                                    if (p.flipped && p.placement === p.originalPlacement) return p;
                                    var g = Gt(p.instance.popper, p.instance.reference, m.padding, m.boundariesElement, p.positionFixed),
                                        _ = p.placement.split("-")[0],
                                        v = te(_),
                                        y = p.placement.split("-")[1] || "",
                                        E = [];

                                    switch (m.behavior) {
                                        case ge:
                                            E = [_, v];
                                            break;

                                        case _e:
                                            E = me(_);
                                            break;

                                        case ve:
                                            E = me(_, !0);
                                            break;

                                        default:
                                            E = m.behavior;
                                    }

                                    return E.forEach(function (t, e) {
                                        if (_ !== t || E.length === e + 1) return p;
                                        _ = p.placement.split("-")[0], v = te(_);
                                        var n,
                                            i = p.offsets.popper,
                                            o = p.offsets.reference,
                                            r = Math.floor,
                                            s = "left" === _ && r(i.right) > r(o.left) || "right" === _ && r(i.left) < r(o.right) || "top" === _ && r(i.bottom) > r(o.top) || "bottom" === _ && r(i.top) < r(o.bottom),
                                            a = r(i.left) < r(g.left),
                                            l = r(i.right) > r(g.right),
                                            c = r(i.top) < r(g.top),
                                            h = r(i.bottom) > r(g.bottom),
                                            u = "left" === _ && a || "right" === _ && l || "top" === _ && c || "bottom" === _ && h,
                                            f = -1 !== ["top", "bottom"].indexOf(_),
                                            d = !!m.flipVariations && (f && "start" === y && a || f && "end" === y && l || !f && "start" === y && c || !f && "end" === y && h);
                                        (s || u || d) && (p.flipped = !0, (s || u) && (_ = E[e + 1]), d && (y = "end" === (n = y) ? "start" : "start" === n ? "end" : n), p.placement = _ + (y ? "-" + y : ""), p.offsets.popper = Qt({}, p.offsets.popper, ee(p.instance.popper, p.offsets.reference, p.placement)), p = ie(p.instance.modifiers, p, "flip"));
                                    }), p;
                                },
                                behavior: "flip",
                                padding: 5,
                                boundariesElement: "viewport"
                            },
                            inner: {
                                order: 700,
                                enabled: !1,
                                fn: function fn(t) {
                                    var e = t.placement,
                                        n = e.split("-")[0],
                                        i = t.offsets,
                                        o = i.popper,
                                        r = i.reference,
                                        s = -1 !== ["left", "right"].indexOf(n),
                                        a = -1 === ["top", "left"].indexOf(n);
                                    return o[s ? "left" : "top"] = r[n] - (a ? o[s ? "width" : "height"] : 0), t.placement = te(e), t.offsets.popper = Vt(o), t;
                                }
                            },
                            hide: {
                                order: 800,
                                enabled: !0,
                                fn: function fn(t) {
                                    if (!fe(t.instance.modifiers, "hide", "preventOverflow")) return t;
                                    var e = t.offsets.reference,
                                        n = ne(t.instance.modifiers, function (t) {
                                            return "preventOverflow" === t.name;
                                        }).boundaries;

                                    if (e.bottom < n.top || e.left > n.right || e.top > n.bottom || e.right < n.left) {
                                        if (!0 === t.hide) return t;
                                        t.hide = !0, t.attributes["x-out-of-boundaries"] = "";
                                    } else {
                                        if (!1 === t.hide) return t;
                                        t.hide = !1, t.attributes["x-out-of-boundaries"] = !1;
                                    }

                                    return t;
                                }
                            },
                            computeStyle: {
                                order: 850,
                                enabled: !0,
                                fn: function fn(t, e) {
                                    var n = e.x,
                                        i = e.y,
                                        o = t.offsets.popper,
                                        r = ne(t.instance.modifiers, function (t) {
                                            return "applyStyle" === t.name;
                                        }).gpuAcceleration;
                                    void 0 !== r && console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");

                                    var s,
                                        a,
                                        l,
                                        c,
                                        h,
                                        u,
                                        f,
                                        d,
                                        p,
                                        m,
                                        g,
                                        _,
                                        v,
                                        y,
                                        E = void 0 !== r ? r : e.gpuAcceleration,
                                        b = jt(t.instance.popper),
                                        w = Yt(b),
                                        C = {
                                            position: o.position
                                        },
                                        T = (s = t, a = window.devicePixelRatio < 2 || !ue, l = s.offsets, c = l.popper, h = l.reference, u = Math.round, f = Math.floor, d = function d(t) {
                                            return t;
                                        }, p = u(h.width), m = u(c.width), g = -1 !== ["left", "right"].indexOf(s.placement), _ = -1 !== s.placement.indexOf("-"), y = a ? u : d, {
                                            left: (v = a ? g || _ || p % 2 == m % 2 ? u : f : d)(p % 2 == 1 && m % 2 == 1 && !_ && a ? c.left - 1 : c.left),
                                            top: y(c.top),
                                            bottom: y(c.bottom),
                                            right: v(c.right)
                                        }),
                                        S = "bottom" === n ? "top" : "bottom",
                                        D = "right" === i ? "left" : "right",
                                        I = re("transform"),
                                        A = void 0,
                                        O = void 0;

                                    if (O = "bottom" === S ? "HTML" === b.nodeName ? -b.clientHeight + T.bottom : -w.height + T.bottom : T.top, A = "right" === D ? "HTML" === b.nodeName ? -b.clientWidth + T.right : -w.width + T.right : T.left, E && I) C[I] = "translate3d(" + A + "px, " + O + "px, 0)", C[S] = 0, C[D] = 0, C.willChange = "transform"; else {
                                        var N = "bottom" === S ? -1 : 1,
                                            k = "right" === D ? -1 : 1;
                                        C[S] = O * N, C[D] = A * k, C.willChange = S + ", " + D;
                                    }
                                    var L = {
                                        "x-placement": t.placement
                                    };
                                    return t.attributes = Qt({}, L, t.attributes), t.styles = Qt({}, C, t.styles), t.arrowStyles = Qt({}, t.offsets.arrow, t.arrowStyles), t;
                                },
                                gpuAcceleration: !0,
                                x: "bottom",
                                y: "right"
                            },
                            applyStyle: {
                                order: 900,
                                enabled: !0,
                                fn: function fn(t) {
                                    var e, n;
                                    return he(t.instance.popper, t.styles), e = t.instance.popper, n = t.attributes, Object.keys(n).forEach(function (t) {
                                        !1 !== n[t] ? e.setAttribute(t, n[t]) : e.removeAttribute(t);
                                    }), t.arrowElement && Object.keys(t.arrowStyles).length && he(t.arrowElement, t.arrowStyles), t;
                                },
                                onLoad: function onLoad(t, e, n, i, o) {
                                    var r = Jt(o, e, t, n.positionFixed),
                                        s = $t(n.placement, r, e, t, n.modifiers.flip.boundariesElement, n.modifiers.flip.padding);
                                    return e.setAttribute("x-placement", s), he(e, {
                                        position: n.positionFixed ? "fixed" : "absolute"
                                    }), n;
                                },
                                gpuAcceleration: void 0
                            }
                        }
                    },
                    be = function () {
                        function r(t, e) {
                            var n = this,
                                i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {};
                            !function (t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                            }(this, r), this.scheduleUpdate = function () {
                                return requestAnimationFrame(n.update);
                            }, this.update = At(this.update.bind(this)), this.options = Qt({}, r.Defaults, i), this.state = {
                                isDestroyed: !1,
                                isCreated: !1,
                                scrollParents: []
                            }, this.reference = t && t.jquery ? t[0] : t, this.popper = e && e.jquery ? e[0] : e, this.options.modifiers = {}, Object.keys(Qt({}, r.Defaults.modifiers, i.modifiers)).forEach(function (t) {
                                n.options.modifiers[t] = Qt({}, r.Defaults.modifiers[t] || {}, i.modifiers ? i.modifiers[t] : {});
                            }), this.modifiers = Object.keys(this.options.modifiers).map(function (t) {
                                return Qt({
                                    name: t
                                }, n.options.modifiers[t]);
                            }).sort(function (t, e) {
                                return t.order - e.order;
                            }), this.modifiers.forEach(function (t) {
                                t.enabled && Ot(t.onLoad) && t.onLoad(n.reference, n.popper, n.options, t, n.state);
                            }), this.update();
                            var o = this.options.eventsEnabled;
                            o && this.enableEventListeners(), this.state.eventsEnabled = o;
                        }

                        return qt(r, [{
                            key: "update",
                            value: function value() {
                                return function () {
                                    if (!this.state.isDestroyed) {
                                        var t = {
                                            instance: this,
                                            styles: {},
                                            arrowStyles: {},
                                            attributes: {},
                                            flipped: !1,
                                            offsets: {}
                                        };
                                        t.offsets.reference = Jt(this.state, this.popper, this.reference, this.options.positionFixed), t.placement = $t(this.options.placement, t.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), t.originalPlacement = t.placement, t.positionFixed = this.options.positionFixed, t.offsets.popper = ee(this.popper, t.offsets.reference, t.placement), t.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute", t = ie(this.modifiers, t), this.state.isCreated ? this.options.onUpdate(t) : (this.state.isCreated = !0, this.options.onCreate(t));
                                    }
                                }.call(this);
                            }
                        }, {
                            key: "destroy",
                            value: function value() {
                                return function () {
                                    return this.state.isDestroyed = !0, oe(this.modifiers, "applyStyle") && (this.popper.removeAttribute("x-placement"), this.popper.style.position = "", this.popper.style.top = "", this.popper.style.left = "", this.popper.style.right = "", this.popper.style.bottom = "", this.popper.style.willChange = "", this.popper.style[re("transform")] = ""), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;
                                }.call(this);
                            }
                        }, {
                            key: "enableEventListeners",
                            value: function value() {
                                return function () {
                                    this.state.eventsEnabled || (this.state = ae(this.reference, this.options, this.state, this.scheduleUpdate));
                                }.call(this);
                            }
                        }, {
                            key: "disableEventListeners",
                            value: function value() {
                                return le.call(this);
                            }
                        }]), r;
                    }();

                be.Utils = ("undefined" != typeof window ? window : global).PopperUtils, be.placements = de, be.Defaults = Ee;

                var we = "dropdown",
                    Ce = "bs.dropdown",
                    Te = "." + Ce,
                    Se = ".data-api",
                    De = p.fn[we],
                    Ie = new RegExp("38|40|27"),
                    Ae = {
                        HIDE: "hide" + Te,
                        HIDDEN: "hidden" + Te,
                        SHOW: "show" + Te,
                        SHOWN: "shown" + Te,
                        CLICK: "click" + Te,
                        CLICK_DATA_API: "click" + Te + Se,
                        KEYDOWN_DATA_API: "keydown" + Te + Se,
                        KEYUP_DATA_API: "keyup" + Te + Se
                    },
                    Oe = "disabled",
                    Ne = "show",
                    ke = "dropup",
                    Le = "dropright",
                    xe = "dropleft",
                    Pe = "dropdown-menu-right",
                    He = "position-static",
                    je = '[data-toggle="dropdown"]',
                    Re = ".dropdown form",
                    Fe = ".dropdown-menu",
                    Me = ".navbar-nav",
                    We = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
                    Ue = "top-start",
                    Be = "top-end",
                    qe = "bottom-start",
                    Ke = "bottom-end",
                    Qe = "right-start",
                    Ve = "left-start",
                    Ye = {
                        offset: 0,
                        flip: !0,
                        boundary: "scrollParent",
                        reference: "toggle",
                        display: "dynamic"
                    },
                    ze = {
                        offset: "(number|string|function)",
                        flip: "boolean",
                        boundary: "(string|element)",
                        reference: "(string|element)",
                        display: "string"
                    },
                    Xe = function () {
                        function c(t, e) {
                            this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
                        }

                        var t = c.prototype;
                        return t.toggle = function () {
                            if (!this._element.disabled && !p(this._element).hasClass(Oe)) {
                                var t = c._getParentFromElement(this._element),
                                    e = p(this._menu).hasClass(Ne);

                                if (c._clearMenus(), !e) {
                                    var n = {
                                            relatedTarget: this._element
                                        },
                                        i = p.Event(Ae.SHOW, n);

                                    if (p(t).trigger(i), !i.isDefaultPrevented()) {
                                        if (!this._inNavbar) {
                                            if ("undefined" == typeof be) throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");
                                            var o = this._element;
                                            "parent" === this._config.reference ? o = t : m.isElement(this._config.reference) && (o = this._config.reference, "undefined" != typeof this._config.reference.jquery && (o = this._config.reference[0])), "scrollParent" !== this._config.boundary && p(t).addClass(He), this._popper = new be(o, this._menu, this._getPopperConfig());
                                        }

                                        "ontouchstart" in document.documentElement && 0 === p(t).closest(Me).length && p(document.body).children().on("mouseover", null, p.noop), this._element.focus(), this._element.setAttribute("aria-expanded", !0), p(this._menu).toggleClass(Ne), p(t).toggleClass(Ne).trigger(p.Event(Ae.SHOWN, n));
                                    }
                                }
                            }
                        }, t.show = function () {
                            if (!(this._element.disabled || p(this._element).hasClass(Oe) || p(this._menu).hasClass(Ne))) {
                                var t = {
                                        relatedTarget: this._element
                                    },
                                    e = p.Event(Ae.SHOW, t),
                                    n = c._getParentFromElement(this._element);

                                p(n).trigger(e), e.isDefaultPrevented() || (p(this._menu).toggleClass(Ne), p(n).toggleClass(Ne).trigger(p.Event(Ae.SHOWN, t)));
                            }
                        }, t.hide = function () {
                            if (!this._element.disabled && !p(this._element).hasClass(Oe) && p(this._menu).hasClass(Ne)) {
                                var t = {
                                        relatedTarget: this._element
                                    },
                                    e = p.Event(Ae.HIDE, t),
                                    n = c._getParentFromElement(this._element);

                                p(n).trigger(e), e.isDefaultPrevented() || (p(this._menu).toggleClass(Ne), p(n).toggleClass(Ne).trigger(p.Event(Ae.HIDDEN, t)));
                            }
                        }, t.dispose = function () {
                            p.removeData(this._element, Ce), p(this._element).off(Te), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null);
                        }, t.update = function () {
                            this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate();
                        }, t._addEventListeners = function () {
                            var e = this;
                            p(this._element).on(Ae.CLICK, function (t) {
                                t.preventDefault(), t.stopPropagation(), e.toggle();
                            });
                        }, t._getConfig = function (t) {
                            return t = l({}, this.constructor.Default, p(this._element).data(), t), m.typeCheckConfig(we, t, this.constructor.DefaultType), t;
                        }, t._getMenuElement = function () {
                            if (!this._menu) {
                                var t = c._getParentFromElement(this._element);

                                t && (this._menu = t.querySelector(Fe));
                            }

                            return this._menu;
                        }, t._getPlacement = function () {
                            var t = p(this._element.parentNode),
                                e = qe;
                            return t.hasClass(ke) ? (e = Ue, p(this._menu).hasClass(Pe) && (e = Be)) : t.hasClass(Le) ? e = Qe : t.hasClass(xe) ? e = Ve : p(this._menu).hasClass(Pe) && (e = Ke), e;
                        }, t._detectNavbar = function () {
                            return 0 < p(this._element).closest(".navbar").length;
                        }, t._getOffset = function () {
                            var e = this,
                                t = {};
                            return "function" == typeof this._config.offset ? t.fn = function (t) {
                                return t.offsets = l({}, t.offsets, e._config.offset(t.offsets, e._element) || {}), t;
                            } : t.offset = this._config.offset, t;
                        }, t._getPopperConfig = function () {
                            var t = {
                                placement: this._getPlacement(),
                                modifiers: {
                                    offset: this._getOffset(),
                                    flip: {
                                        enabled: this._config.flip
                                    },
                                    preventOverflow: {
                                        boundariesElement: this._config.boundary
                                    }
                                }
                            };
                            return "static" === this._config.display && (t.modifiers.applyStyle = {
                                enabled: !1
                            }), t;
                        }, c._jQueryInterface = function (e) {
                            return this.each(function () {
                                var t = p(this).data(Ce);

                                if (t || (t = new c(this, "object" == _typeof(e) ? e : null), p(this).data(Ce, t)), "string" == typeof e) {
                                    if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
                                    t[e]();
                                }
                            });
                        }, c._clearMenus = function (t) {
                            if (!t || 3 !== t.which && ("keyup" !== t.type || 9 === t.which)) for (var e = [].slice.call(document.querySelectorAll(je)), n = 0, i = e.length; n < i; n++) {
                                var o = c._getParentFromElement(e[n]),
                                    r = p(e[n]).data(Ce),
                                    s = {
                                        relatedTarget: e[n]
                                    };

                                if (t && "click" === t.type && (s.clickEvent = t), r) {
                                    var a = r._menu;

                                    if (p(o).hasClass(Ne) && !(t && ("click" === t.type && /input|textarea/i.test(t.target.tagName) || "keyup" === t.type && 9 === t.which) && p.contains(o, t.target))) {
                                        var l = p.Event(Ae.HIDE, s);
                                        p(o).trigger(l), l.isDefaultPrevented() || ("ontouchstart" in document.documentElement && p(document.body).children().off("mouseover", null, p.noop), e[n].setAttribute("aria-expanded", "false"), p(a).removeClass(Ne), p(o).removeClass(Ne).trigger(p.Event(Ae.HIDDEN, s)));
                                    }
                                }
                            }
                        }, c._getParentFromElement = function (t) {
                            var e,
                                n = m.getSelectorFromElement(t);
                            return n && (e = document.querySelector(n)), e || t.parentNode;
                        }, c._dataApiKeydownHandler = function (t) {
                            if ((/input|textarea/i.test(t.target.tagName) ? !(32 === t.which || 27 !== t.which && (40 !== t.which && 38 !== t.which || p(t.target).closest(Fe).length)) : Ie.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !p(this).hasClass(Oe))) {
                                var e = c._getParentFromElement(this),
                                    n = p(e).hasClass(Ne);

                                if (n && (!n || 27 !== t.which && 32 !== t.which)) {
                                    var i = [].slice.call(e.querySelectorAll(We));

                                    if (0 !== i.length) {
                                        var o = i.indexOf(t.target);
                                        38 === t.which && 0 < o && o--, 40 === t.which && o < i.length - 1 && o++, o < 0 && (o = 0), i[o].focus();
                                    }
                                } else {
                                    if (27 === t.which) {
                                        var r = e.querySelector(je);
                                        p(r).trigger("focus");
                                    }

                                    p(this).trigger("click");
                                }
                            }
                        }, s(c, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return Ye;
                            }
                        }, {
                            key: "DefaultType",
                            get: function get() {
                                return ze;
                            }
                        }]), c;
                    }();

                p(document).on(Ae.KEYDOWN_DATA_API, je, Xe._dataApiKeydownHandler).on(Ae.KEYDOWN_DATA_API, Fe, Xe._dataApiKeydownHandler).on(Ae.CLICK_DATA_API + " " + Ae.KEYUP_DATA_API, Xe._clearMenus).on(Ae.CLICK_DATA_API, je, function (t) {
                    t.preventDefault(), t.stopPropagation(), Xe._jQueryInterface.call(p(this), "toggle");
                }).on(Ae.CLICK_DATA_API, Re, function (t) {
                    t.stopPropagation();
                }), p.fn[we] = Xe._jQueryInterface, p.fn[we].Constructor = Xe, p.fn[we].noConflict = function () {
                    return p.fn[we] = De, Xe._jQueryInterface;
                };

                var Ge = "modal",
                    $e = "bs.modal",
                    Je = "." + $e,
                    Ze = p.fn[Ge],
                    tn = {
                        backdrop: !0,
                        keyboard: !0,
                        focus: !0,
                        show: !0
                    },
                    en = {
                        backdrop: "(boolean|string)",
                        keyboard: "boolean",
                        focus: "boolean",
                        show: "boolean"
                    },
                    nn = {
                        HIDE: "hide" + Je,
                        HIDDEN: "hidden" + Je,
                        SHOW: "show" + Je,
                        SHOWN: "shown" + Je,
                        FOCUSIN: "focusin" + Je,
                        RESIZE: "resize" + Je,
                        CLICK_DISMISS: "click.dismiss" + Je,
                        KEYDOWN_DISMISS: "keydown.dismiss" + Je,
                        MOUSEUP_DISMISS: "mouseup.dismiss" + Je,
                        MOUSEDOWN_DISMISS: "mousedown.dismiss" + Je,
                        CLICK_DATA_API: "click" + Je + ".data-api"
                    },
                    on = "modal-dialog-scrollable",
                    rn = "modal-scrollbar-measure",
                    sn = "modal-backdrop",
                    an = "modal-open",
                    ln = "fade",
                    cn = "show",
                    hn = ".modal-dialog",
                    un = ".modal-body",
                    fn = '[data-toggle="modal"]',
                    dn = '[data-dismiss="modal"]',
                    pn = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
                    mn = ".sticky-top",
                    gn = function () {
                        function o(t, e) {
                            this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(hn), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0;
                        }

                        var t = o.prototype;
                        return t.toggle = function (t) {
                            return this._isShown ? this.hide() : this.show(t);
                        }, t.show = function (t) {
                            var e = this;

                            if (!this._isShown && !this._isTransitioning) {
                                p(this._element).hasClass(ln) && (this._isTransitioning = !0);
                                var n = p.Event(nn.SHOW, {
                                    relatedTarget: t
                                });
                                p(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), p(this._element).on(nn.CLICK_DISMISS, dn, function (t) {
                                    return e.hide(t);
                                }), p(this._dialog).on(nn.MOUSEDOWN_DISMISS, function () {
                                    p(e._element).one(nn.MOUSEUP_DISMISS, function (t) {
                                        p(t.target).is(e._element) && (e._ignoreBackdropClick = !0);
                                    });
                                }), this._showBackdrop(function () {
                                    return e._showElement(t);
                                }));
                            }
                        }, t.hide = function (t) {
                            var e = this;

                            if (t && t.preventDefault(), this._isShown && !this._isTransitioning) {
                                var n = p.Event(nn.HIDE);

                                if (p(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) {
                                    this._isShown = !1;
                                    var i = p(this._element).hasClass(ln);

                                    if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), p(document).off(nn.FOCUSIN), p(this._element).removeClass(cn), p(this._element).off(nn.CLICK_DISMISS), p(this._dialog).off(nn.MOUSEDOWN_DISMISS), i) {
                                        var o = m.getTransitionDurationFromElement(this._element);
                                        p(this._element).one(m.TRANSITION_END, function (t) {
                                            return e._hideModal(t);
                                        }).emulateTransitionEnd(o);
                                    } else this._hideModal();
                                }
                            }
                        }, t.dispose = function () {
                            [window, this._element, this._dialog].forEach(function (t) {
                                return p(t).off(Je);
                            }), p(document).off(nn.FOCUSIN), p.removeData(this._element, $e), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null;
                        }, t.handleUpdate = function () {
                            this._adjustDialog();
                        }, t._getConfig = function (t) {
                            return t = l({}, tn, t), m.typeCheckConfig(Ge, t, en), t;
                        }, t._showElement = function (t) {
                            var e = this,
                                n = p(this._element).hasClass(ln);
                            this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), p(this._dialog).hasClass(on) ? this._dialog.querySelector(un).scrollTop = 0 : this._element.scrollTop = 0, n && m.reflow(this._element), p(this._element).addClass(cn), this._config.focus && this._enforceFocus();

                            var i = p.Event(nn.SHOWN, {
                                    relatedTarget: t
                                }),
                                o = function o() {
                                    e._config.focus && e._element.focus(), e._isTransitioning = !1, p(e._element).trigger(i);
                                };

                            if (n) {
                                var r = m.getTransitionDurationFromElement(this._dialog);
                                p(this._dialog).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
                            } else o();
                        }, t._enforceFocus = function () {
                            var e = this;
                            p(document).off(nn.FOCUSIN).on(nn.FOCUSIN, function (t) {
                                document !== t.target && e._element !== t.target && 0 === p(e._element).has(t.target).length && e._element.focus();
                            });
                        }, t._setEscapeEvent = function () {
                            var e = this;
                            this._isShown && this._config.keyboard ? p(this._element).on(nn.KEYDOWN_DISMISS, function (t) {
                                27 === t.which && (t.preventDefault(), e.hide());
                            }) : this._isShown || p(this._element).off(nn.KEYDOWN_DISMISS);
                        }, t._setResizeEvent = function () {
                            var e = this;
                            this._isShown ? p(window).on(nn.RESIZE, function (t) {
                                return e.handleUpdate(t);
                            }) : p(window).off(nn.RESIZE);
                        }, t._hideModal = function () {
                            var t = this;
                            this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._isTransitioning = !1, this._showBackdrop(function () {
                                p(document.body).removeClass(an), t._resetAdjustments(), t._resetScrollbar(), p(t._element).trigger(nn.HIDDEN);
                            });
                        }, t._removeBackdrop = function () {
                            this._backdrop && (p(this._backdrop).remove(), this._backdrop = null);
                        }, t._showBackdrop = function (t) {
                            var e = this,
                                n = p(this._element).hasClass(ln) ? ln : "";

                            if (this._isShown && this._config.backdrop) {
                                if (this._backdrop = document.createElement("div"), this._backdrop.className = sn, n && this._backdrop.classList.add(n), p(this._backdrop).appendTo(document.body), p(this._element).on(nn.CLICK_DISMISS, function (t) {
                                    e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && ("static" === e._config.backdrop ? e._element.focus() : e.hide());
                                }), n && m.reflow(this._backdrop), p(this._backdrop).addClass(cn), !t) return;
                                if (!n) return void t();
                                var i = m.getTransitionDurationFromElement(this._backdrop);
                                p(this._backdrop).one(m.TRANSITION_END, t).emulateTransitionEnd(i);
                            } else if (!this._isShown && this._backdrop) {
                                p(this._backdrop).removeClass(cn);

                                var o = function o() {
                                    e._removeBackdrop(), t && t();
                                };

                                if (p(this._element).hasClass(ln)) {
                                    var r = m.getTransitionDurationFromElement(this._backdrop);
                                    p(this._backdrop).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
                                } else o();
                            } else t && t();
                        }, t._adjustDialog = function () {
                            var t = this._element.scrollHeight > document.documentElement.clientHeight;
                            !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px");
                        }, t._resetAdjustments = function () {
                            this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
                        }, t._checkScrollbar = function () {
                            var t = document.body.getBoundingClientRect();
                            this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth();
                        }, t._setScrollbar = function () {
                            var o = this;

                            if (this._isBodyOverflowing) {
                                var t = [].slice.call(document.querySelectorAll(pn)),
                                    e = [].slice.call(document.querySelectorAll(mn));
                                p(t).each(function (t, e) {
                                    var n = e.style.paddingRight,
                                        i = p(e).css("padding-right");
                                    p(e).data("padding-right", n).css("padding-right", parseFloat(i) + o._scrollbarWidth + "px");
                                }), p(e).each(function (t, e) {
                                    var n = e.style.marginRight,
                                        i = p(e).css("margin-right");
                                    p(e).data("margin-right", n).css("margin-right", parseFloat(i) - o._scrollbarWidth + "px");
                                });
                                var n = document.body.style.paddingRight,
                                    i = p(document.body).css("padding-right");
                                p(document.body).data("padding-right", n).css("padding-right", parseFloat(i) + this._scrollbarWidth + "px");
                            }

                            p(document.body).addClass(an);
                        }, t._resetScrollbar = function () {
                            var t = [].slice.call(document.querySelectorAll(pn));
                            p(t).each(function (t, e) {
                                var n = p(e).data("padding-right");
                                p(e).removeData("padding-right"), e.style.paddingRight = n || "";
                            });
                            var e = [].slice.call(document.querySelectorAll("" + mn));
                            p(e).each(function (t, e) {
                                var n = p(e).data("margin-right");
                                "undefined" != typeof n && p(e).css("margin-right", n).removeData("margin-right");
                            });
                            var n = p(document.body).data("padding-right");
                            p(document.body).removeData("padding-right"), document.body.style.paddingRight = n || "";
                        }, t._getScrollbarWidth = function () {
                            var t = document.createElement("div");
                            t.className = rn, document.body.appendChild(t);
                            var e = t.getBoundingClientRect().width - t.clientWidth;
                            return document.body.removeChild(t), e;
                        }, o._jQueryInterface = function (n, i) {
                            return this.each(function () {
                                var t = p(this).data($e),
                                    e = l({}, tn, p(this).data(), "object" == _typeof(n) && n ? n : {});

                                if (t || (t = new o(this, e), p(this).data($e, t)), "string" == typeof n) {
                                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                                    t[n](i);
                                } else e.show && t.show(i);
                            });
                        }, s(o, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return tn;
                            }
                        }]), o;
                    }();

                p(document).on(nn.CLICK_DATA_API, fn, function (t) {
                    var e,
                        n = this,
                        i = m.getSelectorFromElement(this);
                    i && (e = document.querySelector(i));
                    var o = p(e).data($e) ? "toggle" : l({}, p(e).data(), p(this).data());
                    "A" !== this.tagName && "AREA" !== this.tagName || t.preventDefault();
                    var r = p(e).one(nn.SHOW, function (t) {
                        t.isDefaultPrevented() || r.one(nn.HIDDEN, function () {
                            p(n).is(":visible") && n.focus();
                        });
                    });

                    gn._jQueryInterface.call(p(e), o, this);
                }), p.fn[Ge] = gn._jQueryInterface, p.fn[Ge].Constructor = gn, p.fn[Ge].noConflict = function () {
                    return p.fn[Ge] = Ze, gn._jQueryInterface;
                };
                var _n = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"],
                    vn = {
                        "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
                        a: ["target", "href", "title", "rel"],
                        area: [],
                        b: [],
                        br: [],
                        col: [],
                        code: [],
                        div: [],
                        em: [],
                        hr: [],
                        h1: [],
                        h2: [],
                        h3: [],
                        h4: [],
                        h5: [],
                        h6: [],
                        i: [],
                        img: ["src", "alt", "title", "width", "height"],
                        li: [],
                        ol: [],
                        p: [],
                        pre: [],
                        s: [],
                        small: [],
                        span: [],
                        sub: [],
                        sup: [],
                        strong: [],
                        u: [],
                        ul: []
                    },
                    yn = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
                    En = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

                function bn(t, s, e) {
                    if (0 === t.length) return t;
                    if (e && "function" == typeof e) return e(t);

                    for (var n = new window.DOMParser().parseFromString(t, "text/html"), a = Object.keys(s), l = [].slice.call(n.body.querySelectorAll("*")), i = function i(t, e) {
                        var n = l[t],
                            i = n.nodeName.toLowerCase();
                        if (-1 === a.indexOf(n.nodeName.toLowerCase())) return n.parentNode.removeChild(n), "continue";
                        var o = [].slice.call(n.attributes),
                            r = [].concat(s["*"] || [], s[i] || []);
                        o.forEach(function (t) {
                            (function (t, e) {
                                var n = t.nodeName.toLowerCase();
                                if (-1 !== e.indexOf(n)) return -1 === _n.indexOf(n) || Boolean(t.nodeValue.match(yn) || t.nodeValue.match(En));

                                for (var i = e.filter(function (t) {
                                    return t instanceof RegExp;
                                }), o = 0, r = i.length; o < r; o++) {
                                    if (n.match(i[o])) return !0;
                                }

                                return !1;
                            })(t, r) || n.removeAttribute(t.nodeName);
                        });
                    }, o = 0, r = l.length; o < r; o++) {
                        i(o);
                    }

                    return n.body.innerHTML;
                }

                var wn = "tooltip",
                    Cn = "bs.tooltip",
                    Tn = "." + Cn,
                    Sn = p.fn[wn],
                    Dn = "bs-tooltip",
                    In = new RegExp("(^|\\s)" + Dn + "\\S+", "g"),
                    An = ["sanitize", "whiteList", "sanitizeFn"],
                    On = {
                        animation: "boolean",
                        template: "string",
                        title: "(string|element|function)",
                        trigger: "string",
                        delay: "(number|object)",
                        html: "boolean",
                        selector: "(string|boolean)",
                        placement: "(string|function)",
                        offset: "(number|string|function)",
                        container: "(string|element|boolean)",
                        fallbackPlacement: "(string|array)",
                        boundary: "(string|element)",
                        sanitize: "boolean",
                        sanitizeFn: "(null|function)",
                        whiteList: "object"
                    },
                    Nn = {
                        AUTO: "auto",
                        TOP: "top",
                        RIGHT: "right",
                        BOTTOM: "bottom",
                        LEFT: "left"
                    },
                    kn = {
                        animation: !0,
                        template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
                        trigger: "hover focus",
                        title: "",
                        delay: 0,
                        html: !1,
                        selector: !1,
                        placement: "top",
                        offset: 0,
                        container: !1,
                        fallbackPlacement: "flip",
                        boundary: "scrollParent",
                        sanitize: !0,
                        sanitizeFn: null,
                        whiteList: vn
                    },
                    Ln = "show",
                    xn = "out",
                    Pn = {
                        HIDE: "hide" + Tn,
                        HIDDEN: "hidden" + Tn,
                        SHOW: "show" + Tn,
                        SHOWN: "shown" + Tn,
                        INSERTED: "inserted" + Tn,
                        CLICK: "click" + Tn,
                        FOCUSIN: "focusin" + Tn,
                        FOCUSOUT: "focusout" + Tn,
                        MOUSEENTER: "mouseenter" + Tn,
                        MOUSELEAVE: "mouseleave" + Tn
                    },
                    Hn = "fade",
                    jn = "show",
                    Rn = ".tooltip-inner",
                    Fn = ".arrow",
                    Mn = "hover",
                    Wn = "focus",
                    Un = "click",
                    Bn = "manual",
                    qn = function () {
                        function i(t, e) {
                            if ("undefined" == typeof be) throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");
                            this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners();
                        }

                        var t = i.prototype;
                        return t.enable = function () {
                            this._isEnabled = !0;
                        }, t.disable = function () {
                            this._isEnabled = !1;
                        }, t.toggleEnabled = function () {
                            this._isEnabled = !this._isEnabled;
                        }, t.toggle = function (t) {
                            if (this._isEnabled) if (t) {
                                var e = this.constructor.DATA_KEY,
                                    n = p(t.currentTarget).data(e);
                                n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n);
                            } else {
                                if (p(this.getTipElement()).hasClass(jn)) return void this._leave(null, this);

                                this._enter(null, this);
                            }
                        }, t.dispose = function () {
                            clearTimeout(this._timeout), p.removeData(this.element, this.constructor.DATA_KEY), p(this.element).off(this.constructor.EVENT_KEY), p(this.element).closest(".modal").off("hide.bs.modal"), this.tip && p(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null;
                        }, t.show = function () {
                            var e = this;
                            if ("none" === p(this.element).css("display")) throw new Error("Please use show on visible elements");
                            var t = p.Event(this.constructor.Event.SHOW);

                            if (this.isWithContent() && this._isEnabled) {
                                p(this.element).trigger(t);
                                var n = m.findShadowRoot(this.element),
                                    i = p.contains(null !== n ? n : this.element.ownerDocument.documentElement, this.element);
                                if (t.isDefaultPrevented() || !i) return;
                                var o = this.getTipElement(),
                                    r = m.getUID(this.constructor.NAME);
                                o.setAttribute("id", r), this.element.setAttribute("aria-describedby", r), this.setContent(), this.config.animation && p(o).addClass(Hn);

                                var s = "function" == typeof this.config.placement ? this.config.placement.call(this, o, this.element) : this.config.placement,
                                    a = this._getAttachment(s);

                                this.addAttachmentClass(a);

                                var l = this._getContainer();

                                p(o).data(this.constructor.DATA_KEY, this), p.contains(this.element.ownerDocument.documentElement, this.tip) || p(o).appendTo(l), p(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new be(this.element, o, {
                                    placement: a,
                                    modifiers: {
                                        offset: this._getOffset(),
                                        flip: {
                                            behavior: this.config.fallbackPlacement
                                        },
                                        arrow: {
                                            element: Fn
                                        },
                                        preventOverflow: {
                                            boundariesElement: this.config.boundary
                                        }
                                    },
                                    onCreate: function onCreate(t) {
                                        t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t);
                                    },
                                    onUpdate: function onUpdate(t) {
                                        return e._handlePopperPlacementChange(t);
                                    }
                                }), p(o).addClass(jn), "ontouchstart" in document.documentElement && p(document.body).children().on("mouseover", null, p.noop);

                                var c = function c() {
                                    e.config.animation && e._fixTransition();
                                    var t = e._hoverState;
                                    e._hoverState = null, p(e.element).trigger(e.constructor.Event.SHOWN), t === xn && e._leave(null, e);
                                };

                                if (p(this.tip).hasClass(Hn)) {
                                    var h = m.getTransitionDurationFromElement(this.tip);
                                    p(this.tip).one(m.TRANSITION_END, c).emulateTransitionEnd(h);
                                } else c();
                            }
                        }, t.hide = function (t) {
                            var e = this,
                                n = this.getTipElement(),
                                i = p.Event(this.constructor.Event.HIDE),
                                o = function o() {
                                    e._hoverState !== Ln && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute("aria-describedby"), p(e.element).trigger(e.constructor.Event.HIDDEN), null !== e._popper && e._popper.destroy(), t && t();
                                };

                            if (p(this.element).trigger(i), !i.isDefaultPrevented()) {
                                if (p(n).removeClass(jn), "ontouchstart" in document.documentElement && p(document.body).children().off("mouseover", null, p.noop), this._activeTrigger[Un] = !1, this._activeTrigger[Wn] = !1, this._activeTrigger[Mn] = !1, p(this.tip).hasClass(Hn)) {
                                    var r = m.getTransitionDurationFromElement(n);
                                    p(n).one(m.TRANSITION_END, o).emulateTransitionEnd(r);
                                } else o();

                                this._hoverState = "";
                            }
                        }, t.update = function () {
                            null !== this._popper && this._popper.scheduleUpdate();
                        }, t.isWithContent = function () {
                            return Boolean(this.getTitle());
                        }, t.addAttachmentClass = function (t) {
                            p(this.getTipElement()).addClass(Dn + "-" + t);
                        }, t.getTipElement = function () {
                            return this.tip = this.tip || p(this.config.template)[0], this.tip;
                        }, t.setContent = function () {
                            var t = this.getTipElement();
                            this.setElementContent(p(t.querySelectorAll(Rn)), this.getTitle()), p(t).removeClass(Hn + " " + jn);
                        }, t.setElementContent = function (t, e) {
                            "object" != _typeof(e) || !e.nodeType && !e.jquery ? this.config.html ? (this.config.sanitize && (e = bn(e, this.config.whiteList, this.config.sanitizeFn)), t.html(e)) : t.text(e) : this.config.html ? p(e).parent().is(t) || t.empty().append(e) : t.text(p(e).text());
                        }, t.getTitle = function () {
                            var t = this.element.getAttribute("data-original-title");
                            return t || (t = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t;
                        }, t._getOffset = function () {
                            var e = this,
                                t = {};
                            return "function" == typeof this.config.offset ? t.fn = function (t) {
                                return t.offsets = l({}, t.offsets, e.config.offset(t.offsets, e.element) || {}), t;
                            } : t.offset = this.config.offset, t;
                        }, t._getContainer = function () {
                            return !1 === this.config.container ? document.body : m.isElement(this.config.container) ? p(this.config.container) : p(document).find(this.config.container);
                        }, t._getAttachment = function (t) {
                            return Nn[t.toUpperCase()];
                        }, t._setListeners = function () {
                            var i = this;
                            this.config.trigger.split(" ").forEach(function (t) {
                                if ("click" === t) p(i.element).on(i.constructor.Event.CLICK, i.config.selector, function (t) {
                                    return i.toggle(t);
                                }); else if (t !== Bn) {
                                    var e = t === Mn ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN,
                                        n = t === Mn ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT;
                                    p(i.element).on(e, i.config.selector, function (t) {
                                        return i._enter(t);
                                    }).on(n, i.config.selector, function (t) {
                                        return i._leave(t);
                                    });
                                }
                            }), p(this.element).closest(".modal").on("hide.bs.modal", function () {
                                i.element && i.hide();
                            }), this.config.selector ? this.config = l({}, this.config, {
                                trigger: "manual",
                                selector: ""
                            }) : this._fixTitle();
                        }, t._fixTitle = function () {
                            var t = _typeof(this.element.getAttribute("data-original-title"));

                            (this.element.getAttribute("title") || "string" !== t) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
                        }, t._enter = function (t, e) {
                            var n = this.constructor.DATA_KEY;
                            (e = e || p(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusin" === t.type ? Wn : Mn] = !0), p(e.getTipElement()).hasClass(jn) || e._hoverState === Ln ? e._hoverState = Ln : (clearTimeout(e._timeout), e._hoverState = Ln, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(function () {
                                e._hoverState === Ln && e.show();
                            }, e.config.delay.show) : e.show());
                        }, t._leave = function (t, e) {
                            var n = this.constructor.DATA_KEY;
                            (e = e || p(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), p(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusout" === t.type ? Wn : Mn] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = xn, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(function () {
                                e._hoverState === xn && e.hide();
                            }, e.config.delay.hide) : e.hide());
                        }, t._isWithActiveTrigger = function () {
                            for (var t in this._activeTrigger) {
                                if (this._activeTrigger[t]) return !0;
                            }

                            return !1;
                        }, t._getConfig = function (t) {
                            var e = p(this.element).data();
                            return Object.keys(e).forEach(function (t) {
                                -1 !== An.indexOf(t) && delete e[t];
                            }), "number" == typeof (t = l({}, this.constructor.Default, e, "object" == _typeof(t) && t ? t : {})).delay && (t.delay = {
                                show: t.delay,
                                hide: t.delay
                            }), "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), m.typeCheckConfig(wn, t, this.constructor.DefaultType), t.sanitize && (t.template = bn(t.template, t.whiteList, t.sanitizeFn)), t;
                        }, t._getDelegateConfig = function () {
                            var t = {};
                            if (this.config) for (var e in this.config) {
                                this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]);
                            }
                            return t;
                        }, t._cleanTipClass = function () {
                            var t = p(this.getTipElement()),
                                e = t.attr("class").match(In);
                            null !== e && e.length && t.removeClass(e.join(""));
                        }, t._handlePopperPlacementChange = function (t) {
                            var e = t.instance;
                            this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement));
                        }, t._fixTransition = function () {
                            var t = this.getTipElement(),
                                e = this.config.animation;
                            null === t.getAttribute("x-placement") && (p(t).removeClass(Hn), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e);
                        }, i._jQueryInterface = function (n) {
                            return this.each(function () {
                                var t = p(this).data(Cn),
                                    e = "object" == _typeof(n) && n;

                                if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), p(this).data(Cn, t)), "string" == typeof n)) {
                                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                                    t[n]();
                                }
                            });
                        }, s(i, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return kn;
                            }
                        }, {
                            key: "NAME",
                            get: function get() {
                                return wn;
                            }
                        }, {
                            key: "DATA_KEY",
                            get: function get() {
                                return Cn;
                            }
                        }, {
                            key: "Event",
                            get: function get() {
                                return Pn;
                            }
                        }, {
                            key: "EVENT_KEY",
                            get: function get() {
                                return Tn;
                            }
                        }, {
                            key: "DefaultType",
                            get: function get() {
                                return On;
                            }
                        }]), i;
                    }();

                p.fn[wn] = qn._jQueryInterface, p.fn[wn].Constructor = qn, p.fn[wn].noConflict = function () {
                    return p.fn[wn] = Sn, qn._jQueryInterface;
                };

                var Kn = "popover",
                    Qn = "bs.popover",
                    Vn = "." + Qn,
                    Yn = p.fn[Kn],
                    zn = "bs-popover",
                    Xn = new RegExp("(^|\\s)" + zn + "\\S+", "g"),
                    Gn = l({}, qn.Default, {
                        placement: "right",
                        trigger: "click",
                        content: "",
                        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
                    }),
                    $n = l({}, qn.DefaultType, {
                        content: "(string|element|function)"
                    }),
                    Jn = "fade",
                    Zn = "show",
                    ti = ".popover-header",
                    ei = ".popover-body",
                    ni = {
                        HIDE: "hide" + Vn,
                        HIDDEN: "hidden" + Vn,
                        SHOW: "show" + Vn,
                        SHOWN: "shown" + Vn,
                        INSERTED: "inserted" + Vn,
                        CLICK: "click" + Vn,
                        FOCUSIN: "focusin" + Vn,
                        FOCUSOUT: "focusout" + Vn,
                        MOUSEENTER: "mouseenter" + Vn,
                        MOUSELEAVE: "mouseleave" + Vn
                    },
                    ii = function (t) {
                        var e, n;

                        function i() {
                            return t.apply(this, arguments) || this;
                        }

                        n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n;
                        var o = i.prototype;
                        return o.isWithContent = function () {
                            return this.getTitle() || this._getContent();
                        }, o.addAttachmentClass = function (t) {
                            p(this.getTipElement()).addClass(zn + "-" + t);
                        }, o.getTipElement = function () {
                            return this.tip = this.tip || p(this.config.template)[0], this.tip;
                        }, o.setContent = function () {
                            var t = p(this.getTipElement());
                            this.setElementContent(t.find(ti), this.getTitle());

                            var e = this._getContent();

                            "function" == typeof e && (e = e.call(this.element)), this.setElementContent(t.find(ei), e), t.removeClass(Jn + " " + Zn);
                        }, o._getContent = function () {
                            return this.element.getAttribute("data-content") || this.config.content;
                        }, o._cleanTipClass = function () {
                            var t = p(this.getTipElement()),
                                e = t.attr("class").match(Xn);
                            null !== e && 0 < e.length && t.removeClass(e.join(""));
                        }, i._jQueryInterface = function (n) {
                            return this.each(function () {
                                var t = p(this).data(Qn),
                                    e = "object" == _typeof(n) ? n : null;

                                if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), p(this).data(Qn, t)), "string" == typeof n)) {
                                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                                    t[n]();
                                }
                            });
                        }, s(i, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return Gn;
                            }
                        }, {
                            key: "NAME",
                            get: function get() {
                                return Kn;
                            }
                        }, {
                            key: "DATA_KEY",
                            get: function get() {
                                return Qn;
                            }
                        }, {
                            key: "Event",
                            get: function get() {
                                return ni;
                            }
                        }, {
                            key: "EVENT_KEY",
                            get: function get() {
                                return Vn;
                            }
                        }, {
                            key: "DefaultType",
                            get: function get() {
                                return $n;
                            }
                        }]), i;
                    }(qn);

                p.fn[Kn] = ii._jQueryInterface, p.fn[Kn].Constructor = ii, p.fn[Kn].noConflict = function () {
                    return p.fn[Kn] = Yn, ii._jQueryInterface;
                };

                var oi = "scrollspy",
                    ri = "bs.scrollspy",
                    si = "." + ri,
                    ai = p.fn[oi],
                    li = {
                        offset: 10,
                        method: "auto",
                        target: ""
                    },
                    ci = {
                        offset: "number",
                        method: "string",
                        target: "(string|element)"
                    },
                    hi = {
                        ACTIVATE: "activate" + si,
                        SCROLL: "scroll" + si,
                        LOAD_DATA_API: "load" + si + ".data-api"
                    },
                    ui = "dropdown-item",
                    fi = "active",
                    di = '[data-spy="scroll"]',
                    pi = ".nav, .list-group",
                    mi = ".nav-link",
                    gi = ".nav-item",
                    _i = ".list-group-item",
                    vi = ".dropdown",
                    yi = ".dropdown-item",
                    Ei = ".dropdown-toggle",
                    bi = "offset",
                    wi = "position",
                    Ci = function () {
                        function n(t, e) {
                            var n = this;
                            this._element = t, this._scrollElement = "BODY" === t.tagName ? window : t, this._config = this._getConfig(e), this._selector = this._config.target + " " + mi + "," + this._config.target + " " + _i + "," + this._config.target + " " + yi, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, p(this._scrollElement).on(hi.SCROLL, function (t) {
                                return n._process(t);
                            }), this.refresh(), this._process();
                        }

                        var t = n.prototype;
                        return t.refresh = function () {
                            var e = this,
                                t = this._scrollElement === this._scrollElement.window ? bi : wi,
                                o = "auto" === this._config.method ? t : this._config.method,
                                r = o === wi ? this._getScrollTop() : 0;
                            this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function (t) {
                                var e,
                                    n = m.getSelectorFromElement(t);

                                if (n && (e = document.querySelector(n)), e) {
                                    var i = e.getBoundingClientRect();
                                    if (i.width || i.height) return [p(e)[o]().top + r, n];
                                }

                                return null;
                            }).filter(function (t) {
                                return t;
                            }).sort(function (t, e) {
                                return t[0] - e[0];
                            }).forEach(function (t) {
                                e._offsets.push(t[0]), e._targets.push(t[1]);
                            });
                        }, t.dispose = function () {
                            p.removeData(this._element, ri), p(this._scrollElement).off(si), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
                        }, t._getConfig = function (t) {
                            if ("string" != typeof (t = l({}, li, "object" == _typeof(t) && t ? t : {})).target) {
                                var e = p(t.target).attr("id");
                                e || (e = m.getUID(oi), p(t.target).attr("id", e)), t.target = "#" + e;
                            }

                            return m.typeCheckConfig(oi, t, ci), t;
                        }, t._getScrollTop = function () {
                            return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
                        }, t._getScrollHeight = function () {
                            return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
                        }, t._getOffsetHeight = function () {
                            return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
                        }, t._process = function () {
                            var t = this._getScrollTop() + this._config.offset,
                                e = this._getScrollHeight(),
                                n = this._config.offset + e - this._getOffsetHeight();

                            if (this._scrollHeight !== e && this.refresh(), n <= t) {
                                var i = this._targets[this._targets.length - 1];
                                this._activeTarget !== i && this._activate(i);
                            } else {
                                if (this._activeTarget && t < this._offsets[0] && 0 < this._offsets[0]) return this._activeTarget = null, void this._clear();

                                for (var o = this._offsets.length; o--;) {
                                    this._activeTarget !== this._targets[o] && t >= this._offsets[o] && ("undefined" == typeof this._offsets[o + 1] || t < this._offsets[o + 1]) && this._activate(this._targets[o]);
                                }
                            }
                        }, t._activate = function (e) {
                            this._activeTarget = e, this._clear();

                            var t = this._selector.split(",").map(function (t) {
                                    return t + '[data-target="' + e + '"],' + t + '[href="' + e + '"]';
                                }),
                                n = p([].slice.call(document.querySelectorAll(t.join(","))));

                            n.hasClass(ui) ? (n.closest(vi).find(Ei).addClass(fi), n.addClass(fi)) : (n.addClass(fi), n.parents(pi).prev(mi + ", " + _i).addClass(fi), n.parents(pi).prev(gi).children(mi).addClass(fi)), p(this._scrollElement).trigger(hi.ACTIVATE, {
                                relatedTarget: e
                            });
                        }, t._clear = function () {
                            [].slice.call(document.querySelectorAll(this._selector)).filter(function (t) {
                                return t.classList.contains(fi);
                            }).forEach(function (t) {
                                return t.classList.remove(fi);
                            });
                        }, n._jQueryInterface = function (e) {
                            return this.each(function () {
                                var t = p(this).data(ri);

                                if (t || (t = new n(this, "object" == _typeof(e) && e), p(this).data(ri, t)), "string" == typeof e) {
                                    if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
                                    t[e]();
                                }
                            });
                        }, s(n, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return li;
                            }
                        }]), n;
                    }();

                p(window).on(hi.LOAD_DATA_API, function () {
                    for (var t = [].slice.call(document.querySelectorAll(di)), e = t.length; e--;) {
                        var n = p(t[e]);

                        Ci._jQueryInterface.call(n, n.data());
                    }
                }), p.fn[oi] = Ci._jQueryInterface, p.fn[oi].Constructor = Ci, p.fn[oi].noConflict = function () {
                    return p.fn[oi] = ai, Ci._jQueryInterface;
                };

                var Ti = "bs.tab",
                    Si = "." + Ti,
                    Di = p.fn.tab,
                    Ii = {
                        HIDE: "hide" + Si,
                        HIDDEN: "hidden" + Si,
                        SHOW: "show" + Si,
                        SHOWN: "shown" + Si,
                        CLICK_DATA_API: "click" + Si + ".data-api"
                    },
                    Ai = "dropdown-menu",
                    Oi = "active",
                    Ni = "disabled",
                    ki = "fade",
                    Li = "show",
                    xi = ".dropdown",
                    Pi = ".nav, .list-group",
                    Hi = ".active",
                    ji = "> li > .active",
                    Ri = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
                    Fi = ".dropdown-toggle",
                    Mi = "> .dropdown-menu .active",
                    Wi = function () {
                        function i(t) {
                            this._element = t;
                        }

                        var t = i.prototype;
                        return t.show = function () {
                            var n = this;

                            if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && p(this._element).hasClass(Oi) || p(this._element).hasClass(Ni))) {
                                var t,
                                    i,
                                    e = p(this._element).closest(Pi)[0],
                                    o = m.getSelectorFromElement(this._element);

                                if (e) {
                                    var r = "UL" === e.nodeName || "OL" === e.nodeName ? ji : Hi;
                                    i = (i = p.makeArray(p(e).find(r)))[i.length - 1];
                                }

                                var s = p.Event(Ii.HIDE, {
                                        relatedTarget: this._element
                                    }),
                                    a = p.Event(Ii.SHOW, {
                                        relatedTarget: i
                                    });

                                if (i && p(i).trigger(s), p(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
                                    o && (t = document.querySelector(o)), this._activate(this._element, e);

                                    var l = function l() {
                                        var t = p.Event(Ii.HIDDEN, {
                                                relatedTarget: n._element
                                            }),
                                            e = p.Event(Ii.SHOWN, {
                                                relatedTarget: i
                                            });
                                        p(i).trigger(t), p(n._element).trigger(e);
                                    };

                                    t ? this._activate(t, t.parentNode, l) : l();
                                }
                            }
                        }, t.dispose = function () {
                            p.removeData(this._element, Ti), this._element = null;
                        }, t._activate = function (t, e, n) {
                            var i = this,
                                o = (!e || "UL" !== e.nodeName && "OL" !== e.nodeName ? p(e).children(Hi) : p(e).find(ji))[0],
                                r = n && o && p(o).hasClass(ki),
                                s = function s() {
                                    return i._transitionComplete(t, o, n);
                                };

                            if (o && r) {
                                var a = m.getTransitionDurationFromElement(o);
                                p(o).removeClass(Li).one(m.TRANSITION_END, s).emulateTransitionEnd(a);
                            } else s();
                        }, t._transitionComplete = function (t, e, n) {
                            if (e) {
                                p(e).removeClass(Oi);
                                var i = p(e.parentNode).find(Mi)[0];
                                i && p(i).removeClass(Oi), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !1);
                            }

                            if (p(t).addClass(Oi), "tab" === t.getAttribute("role") && t.setAttribute("aria-selected", !0), m.reflow(t), t.classList.contains(ki) && t.classList.add(Li), t.parentNode && p(t.parentNode).hasClass(Ai)) {
                                var o = p(t).closest(xi)[0];

                                if (o) {
                                    var r = [].slice.call(o.querySelectorAll(Fi));
                                    p(r).addClass(Oi);
                                }

                                t.setAttribute("aria-expanded", !0);
                            }

                            n && n();
                        }, i._jQueryInterface = function (n) {
                            return this.each(function () {
                                var t = p(this),
                                    e = t.data(Ti);

                                if (e || (e = new i(this), t.data(Ti, e)), "string" == typeof n) {
                                    if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
                                    e[n]();
                                }
                            });
                        }, s(i, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }]), i;
                    }();

                p(document).on(Ii.CLICK_DATA_API, Ri, function (t) {
                    t.preventDefault(), Wi._jQueryInterface.call(p(this), "show");
                }), p.fn.tab = Wi._jQueryInterface, p.fn.tab.Constructor = Wi, p.fn.tab.noConflict = function () {
                    return p.fn.tab = Di, Wi._jQueryInterface;
                };

                var Ui = "toast",
                    Bi = "bs.toast",
                    qi = "." + Bi,
                    Ki = p.fn[Ui],
                    Qi = {
                        CLICK_DISMISS: "click.dismiss" + qi,
                        HIDE: "hide" + qi,
                        HIDDEN: "hidden" + qi,
                        SHOW: "show" + qi,
                        SHOWN: "shown" + qi
                    },
                    Vi = "fade",
                    Yi = "hide",
                    zi = "show",
                    Xi = "showing",
                    Gi = {
                        animation: "boolean",
                        autohide: "boolean",
                        delay: "number"
                    },
                    $i = {
                        animation: !0,
                        autohide: !0,
                        delay: 500
                    },
                    Ji = '[data-dismiss="toast"]',
                    Zi = function () {
                        function i(t, e) {
                            this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners();
                        }

                        var t = i.prototype;
                        return t.show = function () {
                            var t = this;
                            p(this._element).trigger(Qi.SHOW), this._config.animation && this._element.classList.add(Vi);

                            var e = function e() {
                                t._element.classList.remove(Xi), t._element.classList.add(zi), p(t._element).trigger(Qi.SHOWN), t._config.autohide && t.hide();
                            };

                            if (this._element.classList.remove(Yi), this._element.classList.add(Xi), this._config.animation) {
                                var n = m.getTransitionDurationFromElement(this._element);
                                p(this._element).one(m.TRANSITION_END, e).emulateTransitionEnd(n);
                            } else e();
                        }, t.hide = function (t) {
                            var e = this;
                            this._element.classList.contains(zi) && (p(this._element).trigger(Qi.HIDE), t ? this._close() : this._timeout = setTimeout(function () {
                                e._close();
                            }, this._config.delay));
                        }, t.dispose = function () {
                            clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(zi) && this._element.classList.remove(zi), p(this._element).off(Qi.CLICK_DISMISS), p.removeData(this._element, Bi), this._element = null, this._config = null;
                        }, t._getConfig = function (t) {
                            return t = l({}, $i, p(this._element).data(), "object" == _typeof(t) && t ? t : {}), m.typeCheckConfig(Ui, t, this.constructor.DefaultType), t;
                        }, t._setListeners = function () {
                            var t = this;
                            p(this._element).on(Qi.CLICK_DISMISS, Ji, function () {
                                return t.hide(!0);
                            });
                        }, t._close = function () {
                            var t = this,
                                e = function e() {
                                    t._element.classList.add(Yi), p(t._element).trigger(Qi.HIDDEN);
                                };

                            if (this._element.classList.remove(zi), this._config.animation) {
                                var n = m.getTransitionDurationFromElement(this._element);
                                p(this._element).one(m.TRANSITION_END, e).emulateTransitionEnd(n);
                            } else e();
                        }, i._jQueryInterface = function (n) {
                            return this.each(function () {
                                var t = p(this),
                                    e = t.data(Bi);

                                if (e || (e = new i(this, "object" == _typeof(n) && n), t.data(Bi, e)), "string" == typeof n) {
                                    if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
                                    e[n](this);
                                }
                            });
                        }, s(i, null, [{
                            key: "VERSION",
                            get: function get() {
                                return "4.3.1";
                            }
                        }, {
                            key: "DefaultType",
                            get: function get() {
                                return Gi;
                            }
                        }, {
                            key: "Default",
                            get: function get() {
                                return $i;
                            }
                        }]), i;
                    }();

                p.fn[Ui] = Zi._jQueryInterface, p.fn[Ui].Constructor = Zi, p.fn[Ui].noConflict = function () {
                    return p.fn[Ui] = Ki, Zi._jQueryInterface;
                }, function () {
                    if ("undefined" == typeof p) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
                    var t = p.fn.jquery.split(" ")[0].split(".");
                    if (t[0] < 2 && t[1] < 9 || 1 === t[0] && 9 === t[1] && t[2] < 1 || 4 <= t[0]) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
                }(), t.Util = m, t.Alert = g, t.Button = k, t.Carousel = at, t.Collapse = Ct, t.Dropdown = Xe, t.Modal = gn, t.Popover = ii, t.Scrollspy = Ci, t.Tab = Wi, t.Toast = Zi, t.Tooltip = qn, Object.defineProperty(t, "__esModule", {
                    value: !0
                });
            });
            /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

        /***/
    }),

    /***/ "./resources/js/myFiles/jquery.min.js":
    /*!********************************************!*\
  !*** ./resources/js/myFiles/jquery.min.js ***!
  \********************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (module) {
            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

            function _typeof(obj) {
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                    _typeof = function _typeof(obj) {
                        return typeof obj;
                    };
                } else {
                    _typeof = function _typeof(obj) {
                        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                    };
                }
                return _typeof(obj);
            }

            /*! jQuery v3.4.1 | (c) JS Foundation and other contributors | jquery.org/license */
            !function (e, t) {
                "use strict";

                "object" == (false ? undefined : _typeof(module)) && "object" == _typeof(module.exports) ? module.exports = e.document ? t(e, !0) : function (e) {
                    if (!e.document) throw new Error("jQuery requires a window with a document");
                    return t(e);
                } : t(e);
            }("undefined" != typeof window ? window : this, function (C, e) {
                "use strict";

                var t = [],
                    E = C.document,
                    r = Object.getPrototypeOf,
                    s = t.slice,
                    g = t.concat,
                    u = t.push,
                    i = t.indexOf,
                    n = {},
                    o = n.toString,
                    v = n.hasOwnProperty,
                    a = v.toString,
                    l = a.call(Object),
                    y = {},
                    m = function m(e) {
                        return "function" == typeof e && "number" != typeof e.nodeType;
                    },
                    x = function x(e) {
                        return null != e && e === e.window;
                    },
                    c = {
                        type: !0,
                        src: !0,
                        nonce: !0,
                        noModule: !0
                    };

                function b(e, t, n) {
                    var r,
                        i,
                        o = (n = n || E).createElement("script");
                    if (o.text = e, t) for (r in c) {
                        (i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
                    }
                    n.head.appendChild(o).parentNode.removeChild(o);
                }

                function w(e) {
                    return null == e ? e + "" : "object" == _typeof(e) || "function" == typeof e ? n[o.call(e)] || "object" : _typeof(e);
                }

                var f = "3.4.1",
                    k = function k(e, t) {
                        return new k.fn.init(e, t);
                    },
                    p = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

                function d(e) {
                    var t = !!e && "length" in e && e.length,
                        n = w(e);
                    return !m(e) && !x(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e);
                }

                k.fn = k.prototype = {
                    jquery: f,
                    constructor: k,
                    length: 0,
                    toArray: function toArray() {
                        return s.call(this);
                    },
                    get: function get(e) {
                        return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e];
                    },
                    pushStack: function pushStack(e) {
                        var t = k.merge(this.constructor(), e);
                        return t.prevObject = this, t;
                    },
                    each: function each(e) {
                        return k.each(this, e);
                    },
                    map: function map(n) {
                        return this.pushStack(k.map(this, function (e, t) {
                            return n.call(e, t, e);
                        }));
                    },
                    slice: function slice() {
                        return this.pushStack(s.apply(this, arguments));
                    },
                    first: function first() {
                        return this.eq(0);
                    },
                    last: function last() {
                        return this.eq(-1);
                    },
                    eq: function eq(e) {
                        var t = this.length,
                            n = +e + (e < 0 ? t : 0);
                        return this.pushStack(0 <= n && n < t ? [this[n]] : []);
                    },
                    end: function end() {
                        return this.prevObject || this.constructor();
                    },
                    push: u,
                    sort: t.sort,
                    splice: t.splice
                }, k.extend = k.fn.extend = function () {
                    var e,
                        t,
                        n,
                        r,
                        i,
                        o,
                        a = arguments[0] || {},
                        s = 1,
                        u = arguments.length,
                        l = !1;

                    for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == _typeof(a) || m(a) || (a = {}), s === u && (a = this, s--); s < u; s++) {
                        if (null != (e = arguments[s])) for (t in e) {
                            r = e[t], "__proto__" !== t && a !== r && (l && r && (k.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || k.isPlainObject(n) ? n : {}, i = !1, a[t] = k.extend(l, o, r)) : void 0 !== r && (a[t] = r));
                        }
                    }

                    return a;
                }, k.extend({
                    expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""),
                    isReady: !0,
                    error: function error(e) {
                        throw new Error(e);
                    },
                    noop: function noop() {
                    },
                    isPlainObject: function isPlainObject(e) {
                        var t, n;
                        return !(!e || "[object Object]" !== o.call(e)) && (!(t = r(e)) || "function" == typeof (n = v.call(t, "constructor") && t.constructor) && a.call(n) === l);
                    },
                    isEmptyObject: function isEmptyObject(e) {
                        var t;

                        for (t in e) {
                            return !1;
                        }

                        return !0;
                    },
                    globalEval: function globalEval(e, t) {
                        b(e, {
                            nonce: t && t.nonce
                        });
                    },
                    each: function each(e, t) {
                        var n,
                            r = 0;

                        if (d(e)) {
                            for (n = e.length; r < n; r++) {
                                if (!1 === t.call(e[r], r, e[r])) break;
                            }
                        } else for (r in e) {
                            if (!1 === t.call(e[r], r, e[r])) break;
                        }

                        return e;
                    },
                    trim: function trim(e) {
                        return null == e ? "" : (e + "").replace(p, "");
                    },
                    makeArray: function makeArray(e, t) {
                        var n = t || [];
                        return null != e && (d(Object(e)) ? k.merge(n, "string" == typeof e ? [e] : e) : u.call(n, e)), n;
                    },
                    inArray: function inArray(e, t, n) {
                        return null == t ? -1 : i.call(t, e, n);
                    },
                    merge: function merge(e, t) {
                        for (var n = +t.length, r = 0, i = e.length; r < n; r++) {
                            e[i++] = t[r];
                        }

                        return e.length = i, e;
                    },
                    grep: function grep(e, t, n) {
                        for (var r = [], i = 0, o = e.length, a = !n; i < o; i++) {
                            !t(e[i], i) !== a && r.push(e[i]);
                        }

                        return r;
                    },
                    map: function map(e, t, n) {
                        var r,
                            i,
                            o = 0,
                            a = [];
                        if (d(e)) for (r = e.length; o < r; o++) {
                            null != (i = t(e[o], o, n)) && a.push(i);
                        } else for (o in e) {
                            null != (i = t(e[o], o, n)) && a.push(i);
                        }
                        return g.apply([], a);
                    },
                    guid: 1,
                    support: y
                }), "function" == typeof Symbol && (k.fn[Symbol.iterator] = t[Symbol.iterator]), k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) {
                    n["[object " + t + "]"] = t.toLowerCase();
                });

                var h = function (n) {
                    var e,
                        d,
                        b,
                        o,
                        i,
                        h,
                        f,
                        g,
                        w,
                        u,
                        l,
                        T,
                        C,
                        a,
                        E,
                        v,
                        s,
                        c,
                        y,
                        k = "sizzle" + 1 * new Date(),
                        m = n.document,
                        S = 0,
                        r = 0,
                        p = ue(),
                        x = ue(),
                        N = ue(),
                        A = ue(),
                        D = function D(e, t) {
                            return e === t && (l = !0), 0;
                        },
                        j = {}.hasOwnProperty,
                        t = [],
                        q = t.pop,
                        L = t.push,
                        H = t.push,
                        O = t.slice,
                        P = function P(e, t) {
                            for (var n = 0, r = e.length; n < r; n++) {
                                if (e[n] === t) return n;
                            }

                            return -1;
                        },
                        R = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                        M = "[\\x20\\t\\r\\n\\f]",
                        I = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
                        W = "\\[" + M + "*(" + I + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + I + "))|)" + M + "*\\]",
                        $ = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + W + ")*)|.*)\\)|)",
                        F = new RegExp(M + "+", "g"),
                        B = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"),
                        _ = new RegExp("^" + M + "*," + M + "*"),
                        z = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
                        U = new RegExp(M + "|>"),
                        X = new RegExp($),
                        V = new RegExp("^" + I + "$"),
                        G = {
                            ID: new RegExp("^#(" + I + ")"),
                            CLASS: new RegExp("^\\.(" + I + ")"),
                            TAG: new RegExp("^(" + I + "|[*])"),
                            ATTR: new RegExp("^" + W),
                            PSEUDO: new RegExp("^" + $),
                            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
                            bool: new RegExp("^(?:" + R + ")$", "i"),
                            needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i")
                        },
                        Y = /HTML$/i,
                        Q = /^(?:input|select|textarea|button)$/i,
                        J = /^h\d$/i,
                        K = /^[^{]+\{\s*\[native \w/,
                        Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                        ee = /[+~]/,
                        te = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"),
                        ne = function ne(e, t, n) {
                            var r = "0x" + t - 65536;
                            return r != r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320);
                        },
                        re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                        ie = function ie(e, t) {
                            return t ? "\0" === e ? "\uFFFD" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e;
                        },
                        oe = function oe() {
                            T();
                        },
                        ae = be(function (e) {
                            return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase();
                        }, {
                            dir: "parentNode",
                            next: "legend"
                        });

                    try {
                        H.apply(t = O.call(m.childNodes), m.childNodes), t[m.childNodes.length].nodeType;
                    } catch (e) {
                        H = {
                            apply: t.length ? function (e, t) {
                                L.apply(e, O.call(t));
                            } : function (e, t) {
                                var n = e.length,
                                    r = 0;

                                while (e[n++] = t[r++]) {
                                    ;
                                }

                                e.length = n - 1;
                            }
                        };
                    }

                    function se(t, e, n, r) {
                        var i,
                            o,
                            a,
                            s,
                            u,
                            l,
                            c,
                            f = e && e.ownerDocument,
                            p = e ? e.nodeType : 9;
                        if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n;

                        if (!r && ((e ? e.ownerDocument || e : m) !== C && T(e), e = e || C, E)) {
                            if (11 !== p && (u = Z.exec(t))) if (i = u[1]) {
                                if (9 === p) {
                                    if (!(a = e.getElementById(i))) return n;
                                    if (a.id === i) return n.push(a), n;
                                } else if (f && (a = f.getElementById(i)) && y(e, a) && a.id === i) return n.push(a), n;
                            } else {
                                if (u[2]) return H.apply(n, e.getElementsByTagName(t)), n;
                                if ((i = u[3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply(n, e.getElementsByClassName(i)), n;
                            }

                            if (d.qsa && !A[t + " "] && (!v || !v.test(t)) && (1 !== p || "object" !== e.nodeName.toLowerCase())) {
                                if (c = t, f = e, 1 === p && U.test(t)) {
                                    (s = e.getAttribute("id")) ? s = s.replace(re, ie) : e.setAttribute("id", s = k), o = (l = h(t)).length;

                                    while (o--) {
                                        l[o] = "#" + s + " " + xe(l[o]);
                                    }

                                    c = l.join(","), f = ee.test(t) && ye(e.parentNode) || e;
                                }

                                try {
                                    return H.apply(n, f.querySelectorAll(c)), n;
                                } catch (e) {
                                    A(t, !0);
                                } finally {
                                    s === k && e.removeAttribute("id");
                                }
                            }
                        }

                        return g(t.replace(B, "$1"), e, n, r);
                    }

                    function ue() {
                        var r = [];
                        return function e(t, n) {
                            return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n;
                        };
                    }

                    function le(e) {
                        return e[k] = !0, e;
                    }

                    function ce(e) {
                        var t = C.createElement("fieldset");

                        try {
                            return !!e(t);
                        } catch (e) {
                            return !1;
                        } finally {
                            t.parentNode && t.parentNode.removeChild(t), t = null;
                        }
                    }

                    function fe(e, t) {
                        var n = e.split("|"),
                            r = n.length;

                        while (r--) {
                            b.attrHandle[n[r]] = t;
                        }
                    }

                    function pe(e, t) {
                        var n = t && e,
                            r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
                        if (r) return r;
                        if (n) while (n = n.nextSibling) {
                            if (n === t) return -1;
                        }
                        return e ? 1 : -1;
                    }

                    function de(t) {
                        return function (e) {
                            return "input" === e.nodeName.toLowerCase() && e.type === t;
                        };
                    }

                    function he(n) {
                        return function (e) {
                            var t = e.nodeName.toLowerCase();
                            return ("input" === t || "button" === t) && e.type === n;
                        };
                    }

                    function ge(t) {
                        return function (e) {
                            return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ae(e) === t : e.disabled === t : "label" in e && e.disabled === t;
                        };
                    }

                    function ve(a) {
                        return le(function (o) {
                            return o = +o, le(function (e, t) {
                                var n,
                                    r = a([], e.length, o),
                                    i = r.length;

                                while (i--) {
                                    e[n = r[i]] && (e[n] = !(t[n] = e[n]));
                                }
                            });
                        });
                    }

                    function ye(e) {
                        return e && "undefined" != typeof e.getElementsByTagName && e;
                    }

                    for (e in d = se.support = {}, i = se.isXML = function (e) {
                        var t = e.namespaceURI,
                            n = (e.ownerDocument || e).documentElement;
                        return !Y.test(t || n && n.nodeName || "HTML");
                    }, T = se.setDocument = function (e) {
                        var t,
                            n,
                            r = e ? e.ownerDocument || e : m;
                        return r !== C && 9 === r.nodeType && r.documentElement && (a = (C = r).documentElement, E = !i(C), m !== C && (n = C.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), d.attributes = ce(function (e) {
                            return e.className = "i", !e.getAttribute("className");
                        }), d.getElementsByTagName = ce(function (e) {
                            return e.appendChild(C.createComment("")), !e.getElementsByTagName("*").length;
                        }), d.getElementsByClassName = K.test(C.getElementsByClassName), d.getById = ce(function (e) {
                            return a.appendChild(e).id = k, !C.getElementsByName || !C.getElementsByName(k).length;
                        }), d.getById ? (b.filter.ID = function (e) {
                            var t = e.replace(te, ne);
                            return function (e) {
                                return e.getAttribute("id") === t;
                            };
                        }, b.find.ID = function (e, t) {
                            if ("undefined" != typeof t.getElementById && E) {
                                var n = t.getElementById(e);
                                return n ? [n] : [];
                            }
                        }) : (b.filter.ID = function (e) {
                            var n = e.replace(te, ne);
                            return function (e) {
                                var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                                return t && t.value === n;
                            };
                        }, b.find.ID = function (e, t) {
                            if ("undefined" != typeof t.getElementById && E) {
                                var n,
                                    r,
                                    i,
                                    o = t.getElementById(e);

                                if (o) {
                                    if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                                    i = t.getElementsByName(e), r = 0;

                                    while (o = i[r++]) {
                                        if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                                    }
                                }

                                return [];
                            }
                        }), b.find.TAG = d.getElementsByTagName ? function (e, t) {
                            return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : d.qsa ? t.querySelectorAll(e) : void 0;
                        } : function (e, t) {
                            var n,
                                r = [],
                                i = 0,
                                o = t.getElementsByTagName(e);

                            if ("*" === e) {
                                while (n = o[i++]) {
                                    1 === n.nodeType && r.push(n);
                                }

                                return r;
                            }

                            return o;
                        }, b.find.CLASS = d.getElementsByClassName && function (e, t) {
                            if ("undefined" != typeof t.getElementsByClassName && E) return t.getElementsByClassName(e);
                        }, s = [], v = [], (d.qsa = K.test(C.querySelectorAll)) && (ce(function (e) {
                            a.appendChild(e).innerHTML = "<a id='" + k + "'></a><select id='" + k + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && v.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || v.push("\\[" + M + "*(?:value|" + R + ")"), e.querySelectorAll("[id~=" + k + "-]").length || v.push("~="), e.querySelectorAll(":checked").length || v.push(":checked"), e.querySelectorAll("a#" + k + "+*").length || v.push(".#.+[+~]");
                        }), ce(function (e) {
                            e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                            var t = C.createElement("input");
                            t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && v.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && v.push(":enabled", ":disabled"), a.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && v.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), v.push(",.*:");
                        })), (d.matchesSelector = K.test(c = a.matches || a.webkitMatchesSelector || a.mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce(function (e) {
                            d.disconnectedMatch = c.call(e, "*"), c.call(e, "[s!='']:x"), s.push("!=", $);
                        }), v = v.length && new RegExp(v.join("|")), s = s.length && new RegExp(s.join("|")), t = K.test(a.compareDocumentPosition), y = t || K.test(a.contains) ? function (e, t) {
                            var n = 9 === e.nodeType ? e.documentElement : e,
                                r = t && t.parentNode;
                            return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)));
                        } : function (e, t) {
                            if (t) while (t = t.parentNode) {
                                if (t === e) return !0;
                            }
                            return !1;
                        }, D = t ? function (e, t) {
                            if (e === t) return l = !0, 0;
                            var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                            return n || (1 & (n = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !d.sortDetached && t.compareDocumentPosition(e) === n ? e === C || e.ownerDocument === m && y(m, e) ? -1 : t === C || t.ownerDocument === m && y(m, t) ? 1 : u ? P(u, e) - P(u, t) : 0 : 4 & n ? -1 : 1);
                        } : function (e, t) {
                            if (e === t) return l = !0, 0;
                            var n,
                                r = 0,
                                i = e.parentNode,
                                o = t.parentNode,
                                a = [e],
                                s = [t];
                            if (!i || !o) return e === C ? -1 : t === C ? 1 : i ? -1 : o ? 1 : u ? P(u, e) - P(u, t) : 0;
                            if (i === o) return pe(e, t);
                            n = e;

                            while (n = n.parentNode) {
                                a.unshift(n);
                            }

                            n = t;

                            while (n = n.parentNode) {
                                s.unshift(n);
                            }

                            while (a[r] === s[r]) {
                                r++;
                            }

                            return r ? pe(a[r], s[r]) : a[r] === m ? -1 : s[r] === m ? 1 : 0;
                        }), C;
                    }, se.matches = function (e, t) {
                        return se(e, null, null, t);
                    }, se.matchesSelector = function (e, t) {
                        if ((e.ownerDocument || e) !== C && T(e), d.matchesSelector && E && !A[t + " "] && (!s || !s.test(t)) && (!v || !v.test(t))) try {
                            var n = c.call(e, t);
                            if (n || d.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n;
                        } catch (e) {
                            A(t, !0);
                        }
                        return 0 < se(t, C, null, [e]).length;
                    }, se.contains = function (e, t) {
                        return (e.ownerDocument || e) !== C && T(e), y(e, t);
                    }, se.attr = function (e, t) {
                        (e.ownerDocument || e) !== C && T(e);
                        var n = b.attrHandle[t.toLowerCase()],
                            r = n && j.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !E) : void 0;
                        return void 0 !== r ? r : d.attributes || !E ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
                    }, se.escape = function (e) {
                        return (e + "").replace(re, ie);
                    }, se.error = function (e) {
                        throw new Error("Syntax error, unrecognized expression: " + e);
                    }, se.uniqueSort = function (e) {
                        var t,
                            n = [],
                            r = 0,
                            i = 0;

                        if (l = !d.detectDuplicates, u = !d.sortStable && e.slice(0), e.sort(D), l) {
                            while (t = e[i++]) {
                                t === e[i] && (r = n.push(i));
                            }

                            while (r--) {
                                e.splice(n[r], 1);
                            }
                        }

                        return u = null, e;
                    }, o = se.getText = function (e) {
                        var t,
                            n = "",
                            r = 0,
                            i = e.nodeType;

                        if (i) {
                            if (1 === i || 9 === i || 11 === i) {
                                if ("string" == typeof e.textContent) return e.textContent;

                                for (e = e.firstChild; e; e = e.nextSibling) {
                                    n += o(e);
                                }
                            } else if (3 === i || 4 === i) return e.nodeValue;
                        } else while (t = e[r++]) {
                            n += o(t);
                        }

                        return n;
                    }, (b = se.selectors = {
                        cacheLength: 50,
                        createPseudo: le,
                        match: G,
                        attrHandle: {},
                        find: {},
                        relative: {
                            ">": {
                                dir: "parentNode",
                                first: !0
                            },
                            " ": {
                                dir: "parentNode"
                            },
                            "+": {
                                dir: "previousSibling",
                                first: !0
                            },
                            "~": {
                                dir: "previousSibling"
                            }
                        },
                        preFilter: {
                            ATTR: function ATTR(e) {
                                return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
                            },
                            CHILD: function CHILD(e) {
                                return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e;
                            },
                            PSEUDO: function PSEUDO(e) {
                                var t,
                                    n = !e[6] && e[2];
                                return G.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = h(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3));
                            }
                        },
                        filter: {
                            TAG: function TAG(e) {
                                var t = e.replace(te, ne).toLowerCase();
                                return "*" === e ? function () {
                                    return !0;
                                } : function (e) {
                                    return e.nodeName && e.nodeName.toLowerCase() === t;
                                };
                            },
                            CLASS: function CLASS(e) {
                                var t = p[e + " "];
                                return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && p(e, function (e) {
                                    return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "");
                                });
                            },
                            ATTR: function ATTR(n, r, i) {
                                return function (e) {
                                    var t = se.attr(e, n);
                                    return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(F, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"));
                                };
                            },
                            CHILD: function CHILD(h, e, t, g, v) {
                                var y = "nth" !== h.slice(0, 3),
                                    m = "last" !== h.slice(-4),
                                    x = "of-type" === e;
                                return 1 === g && 0 === v ? function (e) {
                                    return !!e.parentNode;
                                } : function (e, t, n) {
                                    var r,
                                        i,
                                        o,
                                        a,
                                        s,
                                        u,
                                        l = y !== m ? "nextSibling" : "previousSibling",
                                        c = e.parentNode,
                                        f = x && e.nodeName.toLowerCase(),
                                        p = !n && !x,
                                        d = !1;

                                    if (c) {
                                        if (y) {
                                            while (l) {
                                                a = e;

                                                while (a = a[l]) {
                                                    if (x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) return !1;
                                                }

                                                u = l = "only" === h && !u && "nextSibling";
                                            }

                                            return !0;
                                        }

                                        if (u = [m ? c.firstChild : c.lastChild], m && p) {
                                            d = (s = (r = (i = (o = (a = c)[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === S && r[1]) && r[2], a = s && c.childNodes[s];

                                            while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) {
                                                if (1 === a.nodeType && ++d && a === e) {
                                                    i[h] = [S, s, d];
                                                    break;
                                                }
                                            }
                                        } else if (p && (d = s = (r = (i = (o = (a = e)[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === S && r[1]), !1 === d) while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) {
                                            if ((x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) && ++d && (p && ((i = (o = a[k] || (a[k] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] = [S, d]), a === e)) break;
                                        }

                                        return (d -= v) === g || d % g == 0 && 0 <= d / g;
                                    }
                                };
                            },
                            PSEUDO: function PSEUDO(e, o) {
                                var t,
                                    a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
                                return a[k] ? a(o) : 1 < a.length ? (t = [e, e, "", o], b.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function (e, t) {
                                    var n,
                                        r = a(e, o),
                                        i = r.length;

                                    while (i--) {
                                        e[n = P(e, r[i])] = !(t[n] = r[i]);
                                    }
                                }) : function (e) {
                                    return a(e, 0, t);
                                }) : a;
                            }
                        },
                        pseudos: {
                            not: le(function (e) {
                                var r = [],
                                    i = [],
                                    s = f(e.replace(B, "$1"));
                                return s[k] ? le(function (e, t, n, r) {
                                    var i,
                                        o = s(e, null, r, []),
                                        a = e.length;

                                    while (a--) {
                                        (i = o[a]) && (e[a] = !(t[a] = i));
                                    }
                                }) : function (e, t, n) {
                                    return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop();
                                };
                            }),
                            has: le(function (t) {
                                return function (e) {
                                    return 0 < se(t, e).length;
                                };
                            }),
                            contains: le(function (t) {
                                return t = t.replace(te, ne), function (e) {
                                    return -1 < (e.textContent || o(e)).indexOf(t);
                                };
                            }),
                            lang: le(function (n) {
                                return V.test(n || "") || se.error("unsupported lang: " + n), n = n.replace(te, ne).toLowerCase(), function (e) {
                                    var t;

                                    do {
                                        if (t = E ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-");
                                    } while ((e = e.parentNode) && 1 === e.nodeType);

                                    return !1;
                                };
                            }),
                            target: function target(e) {
                                var t = n.location && n.location.hash;
                                return t && t.slice(1) === e.id;
                            },
                            root: function root(e) {
                                return e === a;
                            },
                            focus: function focus(e) {
                                return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
                            },
                            enabled: ge(!1),
                            disabled: ge(!0),
                            checked: function checked(e) {
                                var t = e.nodeName.toLowerCase();
                                return "input" === t && !!e.checked || "option" === t && !!e.selected;
                            },
                            selected: function selected(e) {
                                return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
                            },
                            empty: function empty(e) {
                                for (e = e.firstChild; e; e = e.nextSibling) {
                                    if (e.nodeType < 6) return !1;
                                }

                                return !0;
                            },
                            parent: function parent(e) {
                                return !b.pseudos.empty(e);
                            },
                            header: function header(e) {
                                return J.test(e.nodeName);
                            },
                            input: function input(e) {
                                return Q.test(e.nodeName);
                            },
                            button: function button(e) {
                                var t = e.nodeName.toLowerCase();
                                return "input" === t && "button" === e.type || "button" === t;
                            },
                            text: function text(e) {
                                var t;
                                return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
                            },
                            first: ve(function () {
                                return [0];
                            }),
                            last: ve(function (e, t) {
                                return [t - 1];
                            }),
                            eq: ve(function (e, t, n) {
                                return [n < 0 ? n + t : n];
                            }),
                            even: ve(function (e, t) {
                                for (var n = 0; n < t; n += 2) {
                                    e.push(n);
                                }

                                return e;
                            }),
                            odd: ve(function (e, t) {
                                for (var n = 1; n < t; n += 2) {
                                    e.push(n);
                                }

                                return e;
                            }),
                            lt: ve(function (e, t, n) {
                                for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;) {
                                    e.push(r);
                                }

                                return e;
                            }),
                            gt: ve(function (e, t, n) {
                                for (var r = n < 0 ? n + t : n; ++r < t;) {
                                    e.push(r);
                                }

                                return e;
                            })
                        }
                    }).pseudos.nth = b.pseudos.eq, {
                        radio: !0,
                        checkbox: !0,
                        file: !0,
                        password: !0,
                        image: !0
                    }) {
                        b.pseudos[e] = de(e);
                    }

                    for (e in {
                        submit: !0,
                        reset: !0
                    }) {
                        b.pseudos[e] = he(e);
                    }

                    function me() {
                    }

                    function xe(e) {
                        for (var t = 0, n = e.length, r = ""; t < n; t++) {
                            r += e[t].value;
                        }

                        return r;
                    }

                    function be(s, e, t) {
                        var u = e.dir,
                            l = e.next,
                            c = l || u,
                            f = t && "parentNode" === c,
                            p = r++;
                        return e.first ? function (e, t, n) {
                            while (e = e[u]) {
                                if (1 === e.nodeType || f) return s(e, t, n);
                            }

                            return !1;
                        } : function (e, t, n) {
                            var r,
                                i,
                                o,
                                a = [S, p];

                            if (n) {
                                while (e = e[u]) {
                                    if ((1 === e.nodeType || f) && s(e, t, n)) return !0;
                                }
                            } else while (e = e[u]) {
                                if (1 === e.nodeType || f) if (i = (o = e[k] || (e[k] = {}))[e.uniqueID] || (o[e.uniqueID] = {}), l && l === e.nodeName.toLowerCase()) e = e[u] || e; else {
                                    if ((r = i[c]) && r[0] === S && r[1] === p) return a[2] = r[2];
                                    if ((i[c] = a)[2] = s(e, t, n)) return !0;
                                }
                            }

                            return !1;
                        };
                    }

                    function we(i) {
                        return 1 < i.length ? function (e, t, n) {
                            var r = i.length;

                            while (r--) {
                                if (!i[r](e, t, n)) return !1;
                            }

                            return !0;
                        } : i[0];
                    }

                    function Te(e, t, n, r, i) {
                        for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++) {
                            (o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s)));
                        }

                        return a;
                    }

                    function Ce(d, h, g, v, y, e) {
                        return v && !v[k] && (v = Ce(v)), y && !y[k] && (y = Ce(y, e)), le(function (e, t, n, r) {
                            var i,
                                o,
                                a,
                                s = [],
                                u = [],
                                l = t.length,
                                c = e || function (e, t, n) {
                                    for (var r = 0, i = t.length; r < i; r++) {
                                        se(e, t[r], n);
                                    }

                                    return n;
                                }(h || "*", n.nodeType ? [n] : n, []),
                                f = !d || !e && h ? c : Te(c, s, d, n, r),
                                p = g ? y || (e ? d : l || v) ? [] : t : f;

                            if (g && g(f, p, n, r), v) {
                                i = Te(p, u), v(i, [], n, r), o = i.length;

                                while (o--) {
                                    (a = i[o]) && (p[u[o]] = !(f[u[o]] = a));
                                }
                            }

                            if (e) {
                                if (y || d) {
                                    if (y) {
                                        i = [], o = p.length;

                                        while (o--) {
                                            (a = p[o]) && i.push(f[o] = a);
                                        }

                                        y(null, p = [], i, r);
                                    }

                                    o = p.length;

                                    while (o--) {
                                        (a = p[o]) && -1 < (i = y ? P(e, a) : s[o]) && (e[i] = !(t[i] = a));
                                    }
                                }
                            } else p = Te(p === t ? p.splice(l, p.length) : p), y ? y(null, t, p, r) : H.apply(t, p);
                        });
                    }

                    function Ee(e) {
                        for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = be(function (e) {
                            return e === i;
                        }, a, !0), l = be(function (e) {
                            return -1 < P(i, e);
                        }, a, !0), c = [function (e, t, n) {
                            var r = !o && (n || t !== w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
                            return i = null, r;
                        }]; s < r; s++) {
                            if (t = b.relative[e[s].type]) c = [be(we(c), t)]; else {
                                if ((t = b.filter[e[s].type].apply(null, e[s].matches))[k]) {
                                    for (n = ++s; n < r; n++) {
                                        if (b.relative[e[n].type]) break;
                                    }

                                    return Ce(1 < s && we(c), 1 < s && xe(e.slice(0, s - 1).concat({
                                        value: " " === e[s - 2].type ? "*" : ""
                                    })).replace(B, "$1"), t, s < n && Ee(e.slice(s, n)), n < r && Ee(e = e.slice(n)), n < r && xe(e));
                                }

                                c.push(t);
                            }
                        }

                        return we(c);
                    }

                    return me.prototype = b.filters = b.pseudos, b.setFilters = new me(), h = se.tokenize = function (e, t) {
                        var n,
                            r,
                            i,
                            o,
                            a,
                            s,
                            u,
                            l = x[e + " "];
                        if (l) return t ? 0 : l.slice(0);
                        a = e, s = [], u = b.preFilter;

                        while (a) {
                            for (o in n && !(r = _.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = z.exec(a)) && (n = r.shift(), i.push({
                                value: n,
                                type: r[0].replace(B, " ")
                            }), a = a.slice(n.length)), b.filter) {
                                !(r = G[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({
                                    value: n,
                                    type: o,
                                    matches: r
                                }), a = a.slice(n.length));
                            }

                            if (!n) break;
                        }

                        return t ? a.length : a ? se.error(e) : x(e, s).slice(0);
                    }, f = se.compile = function (e, t) {
                        var n,
                            v,
                            y,
                            m,
                            x,
                            r,
                            i = [],
                            o = [],
                            a = N[e + " "];

                        if (!a) {
                            t || (t = h(e)), n = t.length;

                            while (n--) {
                                (a = Ee(t[n]))[k] ? i.push(a) : o.push(a);
                            }

                            (a = N(e, (v = o, m = 0 < (y = i).length, x = 0 < v.length, r = function r(e, t, n, _r, i) {
                                var o,
                                    a,
                                    s,
                                    u = 0,
                                    l = "0",
                                    c = e && [],
                                    f = [],
                                    p = w,
                                    d = e || x && b.find.TAG("*", i),
                                    h = S += null == p ? 1 : Math.random() || .1,
                                    g = d.length;

                                for (i && (w = t === C || t || i); l !== g && null != (o = d[l]); l++) {
                                    if (x && o) {
                                        a = 0, t || o.ownerDocument === C || (T(o), n = !E);

                                        while (s = v[a++]) {
                                            if (s(o, t || C, n)) {
                                                _r.push(o);

                                                break;
                                            }
                                        }

                                        i && (S = h);
                                    }

                                    m && ((o = !s && o) && u--, e && c.push(o));
                                }

                                if (u += l, m && l !== u) {
                                    a = 0;

                                    while (s = y[a++]) {
                                        s(c, f, t, n);
                                    }

                                    if (e) {
                                        if (0 < u) while (l--) {
                                            c[l] || f[l] || (f[l] = q.call(_r));
                                        }
                                        f = Te(f);
                                    }

                                    H.apply(_r, f), i && !e && 0 < f.length && 1 < u + y.length && se.uniqueSort(_r);
                                }

                                return i && (S = h, w = p), c;
                            }, m ? le(r) : r))).selector = e;
                        }

                        return a;
                    }, g = se.select = function (e, t, n, r) {
                        var i,
                            o,
                            a,
                            s,
                            u,
                            l = "function" == typeof e && e,
                            c = !r && h(e = l.selector || e);

                        if (n = n || [], 1 === c.length) {
                            if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && E && b.relative[o[1].type]) {
                                if (!(t = (b.find.ID(a.matches[0].replace(te, ne), t) || [])[0])) return n;
                                l && (t = t.parentNode), e = e.slice(o.shift().value.length);
                            }

                            i = G.needsContext.test(e) ? 0 : o.length;

                            while (i--) {
                                if (a = o[i], b.relative[s = a.type]) break;

                                if ((u = b.find[s]) && (r = u(a.matches[0].replace(te, ne), ee.test(o[0].type) && ye(t.parentNode) || t))) {
                                    if (o.splice(i, 1), !(e = r.length && xe(o))) return H.apply(n, r), n;
                                    break;
                                }
                            }
                        }

                        return (l || f(e, c))(r, t, !E, n, !t || ee.test(e) && ye(t.parentNode) || t), n;
                    }, d.sortStable = k.split("").sort(D).join("") === k, d.detectDuplicates = !!l, T(), d.sortDetached = ce(function (e) {
                        return 1 & e.compareDocumentPosition(C.createElement("fieldset"));
                    }), ce(function (e) {
                        return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
                    }) || fe("type|href|height|width", function (e, t, n) {
                        if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
                    }), d.attributes && ce(function (e) {
                        return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
                    }) || fe("value", function (e, t, n) {
                        if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
                    }), ce(function (e) {
                        return null == e.getAttribute("disabled");
                    }) || fe(R, function (e, t, n) {
                        var r;
                        if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
                    }), se;
                }(C);

                k.find = h, k.expr = h.selectors, k.expr[":"] = k.expr.pseudos, k.uniqueSort = k.unique = h.uniqueSort, k.text = h.getText, k.isXMLDoc = h.isXML, k.contains = h.contains, k.escapeSelector = h.escape;

                var T = function T(e, t, n) {
                        var r = [],
                            i = void 0 !== n;

                        while ((e = e[t]) && 9 !== e.nodeType) {
                            if (1 === e.nodeType) {
                                if (i && k(e).is(n)) break;
                                r.push(e);
                            }
                        }

                        return r;
                    },
                    S = function S(e, t) {
                        for (var n = []; e; e = e.nextSibling) {
                            1 === e.nodeType && e !== t && n.push(e);
                        }

                        return n;
                    },
                    N = k.expr.match.needsContext;

                function A(e, t) {
                    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
                }

                var D = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

                function j(e, n, r) {
                    return m(n) ? k.grep(e, function (e, t) {
                        return !!n.call(e, t, e) !== r;
                    }) : n.nodeType ? k.grep(e, function (e) {
                        return e === n !== r;
                    }) : "string" != typeof n ? k.grep(e, function (e) {
                        return -1 < i.call(n, e) !== r;
                    }) : k.filter(n, e, r);
                }

                k.filter = function (e, t, n) {
                    var r = t[0];
                    return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? k.find.matchesSelector(r, e) ? [r] : [] : k.find.matches(e, k.grep(t, function (e) {
                        return 1 === e.nodeType;
                    }));
                }, k.fn.extend({
                    find: function find(e) {
                        var t,
                            n,
                            r = this.length,
                            i = this;
                        if ("string" != typeof e) return this.pushStack(k(e).filter(function () {
                            for (t = 0; t < r; t++) {
                                if (k.contains(i[t], this)) return !0;
                            }
                        }));

                        for (n = this.pushStack([]), t = 0; t < r; t++) {
                            k.find(e, i[t], n);
                        }

                        return 1 < r ? k.uniqueSort(n) : n;
                    },
                    filter: function filter(e) {
                        return this.pushStack(j(this, e || [], !1));
                    },
                    not: function not(e) {
                        return this.pushStack(j(this, e || [], !0));
                    },
                    is: function is(e) {
                        return !!j(this, "string" == typeof e && N.test(e) ? k(e) : e || [], !1).length;
                    }
                });
                var q,
                    L = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
                (k.fn.init = function (e, t, n) {
                    var r, i;
                    if (!e) return this;

                    if (n = n || q, "string" == typeof e) {
                        if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : L.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);

                        if (r[1]) {
                            if (t = t instanceof k ? t[0] : t, k.merge(this, k.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : E, !0)), D.test(r[1]) && k.isPlainObject(t)) for (r in t) {
                                m(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                            }
                            return this;
                        }

                        return (i = E.getElementById(r[2])) && (this[0] = i, this.length = 1), this;
                    }

                    return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== n.ready ? n.ready(e) : e(k) : k.makeArray(e, this);
                }).prototype = k.fn, q = k(E);
                var H = /^(?:parents|prev(?:Until|All))/,
                    O = {
                        children: !0,
                        contents: !0,
                        next: !0,
                        prev: !0
                    };

                function P(e, t) {
                    while ((e = e[t]) && 1 !== e.nodeType) {
                        ;
                    }

                    return e;
                }

                k.fn.extend({
                    has: function has(e) {
                        var t = k(e, this),
                            n = t.length;
                        return this.filter(function () {
                            for (var e = 0; e < n; e++) {
                                if (k.contains(this, t[e])) return !0;
                            }
                        });
                    },
                    closest: function closest(e, t) {
                        var n,
                            r = 0,
                            i = this.length,
                            o = [],
                            a = "string" != typeof e && k(e);
                        if (!N.test(e)) for (; r < i; r++) {
                            for (n = this[r]; n && n !== t; n = n.parentNode) {
                                if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && k.find.matchesSelector(n, e))) {
                                    o.push(n);
                                    break;
                                }
                            }
                        }
                        return this.pushStack(1 < o.length ? k.uniqueSort(o) : o);
                    },
                    index: function index(e) {
                        return e ? "string" == typeof e ? i.call(k(e), this[0]) : i.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
                    },
                    add: function add(e, t) {
                        return this.pushStack(k.uniqueSort(k.merge(this.get(), k(e, t))));
                    },
                    addBack: function addBack(e) {
                        return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
                    }
                }), k.each({
                    parent: function parent(e) {
                        var t = e.parentNode;
                        return t && 11 !== t.nodeType ? t : null;
                    },
                    parents: function parents(e) {
                        return T(e, "parentNode");
                    },
                    parentsUntil: function parentsUntil(e, t, n) {
                        return T(e, "parentNode", n);
                    },
                    next: function next(e) {
                        return P(e, "nextSibling");
                    },
                    prev: function prev(e) {
                        return P(e, "previousSibling");
                    },
                    nextAll: function nextAll(e) {
                        return T(e, "nextSibling");
                    },
                    prevAll: function prevAll(e) {
                        return T(e, "previousSibling");
                    },
                    nextUntil: function nextUntil(e, t, n) {
                        return T(e, "nextSibling", n);
                    },
                    prevUntil: function prevUntil(e, t, n) {
                        return T(e, "previousSibling", n);
                    },
                    siblings: function siblings(e) {
                        return S((e.parentNode || {}).firstChild, e);
                    },
                    children: function children(e) {
                        return S(e.firstChild);
                    },
                    contents: function contents(e) {
                        return "undefined" != typeof e.contentDocument ? e.contentDocument : (A(e, "template") && (e = e.content || e), k.merge([], e.childNodes));
                    }
                }, function (r, i) {
                    k.fn[r] = function (e, t) {
                        var n = k.map(this, i, e);
                        return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = k.filter(t, n)), 1 < this.length && (O[r] || k.uniqueSort(n), H.test(r) && n.reverse()), this.pushStack(n);
                    };
                });
                var R = /[^\x20\t\r\n\f]+/g;

                function M(e) {
                    return e;
                }

                function I(e) {
                    throw e;
                }

                function W(e, t, n, r) {
                    var i;

                    try {
                        e && m(i = e.promise) ? i.call(e).done(t).fail(n) : e && m(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r));
                    } catch (e) {
                        n.apply(void 0, [e]);
                    }
                }

                k.Callbacks = function (r) {
                    var e, n;
                    r = "string" == typeof r ? (e = r, n = {}, k.each(e.match(R) || [], function (e, t) {
                        n[t] = !0;
                    }), n) : k.extend({}, r);

                    var i,
                        t,
                        o,
                        a,
                        s = [],
                        u = [],
                        l = -1,
                        c = function c() {
                            for (a = a || r.once, o = i = !0; u.length; l = -1) {
                                t = u.shift();

                                while (++l < s.length) {
                                    !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1);
                                }
                            }

                            r.memory || (t = !1), i = !1, a && (s = t ? [] : "");
                        },
                        f = {
                            add: function add() {
                                return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) {
                                    k.each(e, function (e, t) {
                                        m(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== w(t) && n(t);
                                    });
                                }(arguments), t && !i && c()), this;
                            },
                            remove: function remove() {
                                return k.each(arguments, function (e, t) {
                                    var n;

                                    while (-1 < (n = k.inArray(t, s, n))) {
                                        s.splice(n, 1), n <= l && l--;
                                    }
                                }), this;
                            },
                            has: function has(e) {
                                return e ? -1 < k.inArray(e, s) : 0 < s.length;
                            },
                            empty: function empty() {
                                return s && (s = []), this;
                            },
                            disable: function disable() {
                                return a = u = [], s = t = "", this;
                            },
                            disabled: function disabled() {
                                return !s;
                            },
                            lock: function lock() {
                                return a = u = [], t || i || (s = t = ""), this;
                            },
                            locked: function locked() {
                                return !!a;
                            },
                            fireWith: function fireWith(e, t) {
                                return a || (t = [e, (t = t || []).slice ? t.slice() : t], u.push(t), i || c()), this;
                            },
                            fire: function fire() {
                                return f.fireWith(this, arguments), this;
                            },
                            fired: function fired() {
                                return !!o;
                            }
                        };

                    return f;
                }, k.extend({
                    Deferred: function Deferred(e) {
                        var o = [["notify", "progress", k.Callbacks("memory"), k.Callbacks("memory"), 2], ["resolve", "done", k.Callbacks("once memory"), k.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", k.Callbacks("once memory"), k.Callbacks("once memory"), 1, "rejected"]],
                            i = "pending",
                            a = {
                                state: function state() {
                                    return i;
                                },
                                always: function always() {
                                    return s.done(arguments).fail(arguments), this;
                                },
                                "catch": function _catch(e) {
                                    return a.then(null, e);
                                },
                                pipe: function pipe() {
                                    var i = arguments;
                                    return k.Deferred(function (r) {
                                        k.each(o, function (e, t) {
                                            var n = m(i[t[4]]) && i[t[4]];
                                            s[t[1]](function () {
                                                var e = n && n.apply(this, arguments);
                                                e && m(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments);
                                            });
                                        }), i = null;
                                    }).promise();
                                },
                                then: function then(t, n, r) {
                                    var u = 0;

                                    function l(i, o, a, s) {
                                        return function () {
                                            var n = this,
                                                r = arguments,
                                                e = function e() {
                                                    var e, t;

                                                    if (!(i < u)) {
                                                        if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution");
                                                        t = e && ("object" == _typeof(e) || "function" == typeof e) && e.then, m(t) ? s ? t.call(e, l(u, o, M, s), l(u, o, I, s)) : (u++, t.call(e, l(u, o, M, s), l(u, o, I, s), l(u, o, M, o.notifyWith))) : (a !== M && (n = void 0, r = [e]), (s || o.resolveWith)(n, r));
                                                    }
                                                },
                                                t = s ? e : function () {
                                                    try {
                                                        e();
                                                    } catch (e) {
                                                        k.Deferred.exceptionHook && k.Deferred.exceptionHook(e, t.stackTrace), u <= i + 1 && (a !== I && (n = void 0, r = [e]), o.rejectWith(n, r));
                                                    }
                                                };

                                            i ? t() : (k.Deferred.getStackHook && (t.stackTrace = k.Deferred.getStackHook()), C.setTimeout(t));
                                        };
                                    }

                                    return k.Deferred(function (e) {
                                        o[0][3].add(l(0, e, m(r) ? r : M, e.notifyWith)), o[1][3].add(l(0, e, m(t) ? t : M)), o[2][3].add(l(0, e, m(n) ? n : I));
                                    }).promise();
                                },
                                promise: function promise(e) {
                                    return null != e ? k.extend(e, a) : a;
                                }
                            },
                            s = {};
                        return k.each(o, function (e, t) {
                            var n = t[2],
                                r = t[5];
                            a[t[1]] = n.add, r && n.add(function () {
                                i = r;
                            }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function () {
                                return s[t[0] + "With"](this === s ? void 0 : this, arguments), this;
                            }, s[t[0] + "With"] = n.fireWith;
                        }), a.promise(s), e && e.call(s, s), s;
                    },
                    when: function when(e) {
                        var n = arguments.length,
                            t = n,
                            r = Array(t),
                            i = s.call(arguments),
                            o = k.Deferred(),
                            a = function a(t) {
                                return function (e) {
                                    r[t] = this, i[t] = 1 < arguments.length ? s.call(arguments) : e, --n || o.resolveWith(r, i);
                                };
                            };

                        if (n <= 1 && (W(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || m(i[t] && i[t].then))) return o.then();

                        while (t--) {
                            W(i[t], a(t), o.reject);
                        }

                        return o.promise();
                    }
                });
                var $ = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
                k.Deferred.exceptionHook = function (e, t) {
                    C.console && C.console.warn && e && $.test(e.name) && C.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
                }, k.readyException = function (e) {
                    C.setTimeout(function () {
                        throw e;
                    });
                };
                var F = k.Deferred();

                function B() {
                    E.removeEventListener("DOMContentLoaded", B), C.removeEventListener("load", B), k.ready();
                }

                k.fn.ready = function (e) {
                    return F.then(e)["catch"](function (e) {
                        k.readyException(e);
                    }), this;
                }, k.extend({
                    isReady: !1,
                    readyWait: 1,
                    ready: function ready(e) {
                        (!0 === e ? --k.readyWait : k.isReady) || (k.isReady = !0) !== e && 0 < --k.readyWait || F.resolveWith(E, [k]);
                    }
                }), k.ready.then = F.then, "complete" === E.readyState || "loading" !== E.readyState && !E.documentElement.doScroll ? C.setTimeout(k.ready) : (E.addEventListener("DOMContentLoaded", B), C.addEventListener("load", B));

                var _ = function _(e, t, n, r, i, o, a) {
                        var s = 0,
                            u = e.length,
                            l = null == n;
                        if ("object" === w(n)) for (s in i = !0, n) {
                            _(e, t, s, n[s], !0, o, a);
                        } else if (void 0 !== r && (i = !0, m(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function t(e, _t2, n) {
                            return l.call(k(e), n);
                        })), t)) for (; s < u; s++) {
                            t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
                        }
                        return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;
                    },
                    z = /^-ms-/,
                    U = /-([a-z])/g;

                function X(e, t) {
                    return t.toUpperCase();
                }

                function V(e) {
                    return e.replace(z, "ms-").replace(U, X);
                }

                var G = function G(e) {
                    return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
                };

                function Y() {
                    this.expando = k.expando + Y.uid++;
                }

                Y.uid = 1, Y.prototype = {
                    cache: function cache(e) {
                        var t = e[this.expando];
                        return t || (t = {}, G(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                            value: t,
                            configurable: !0
                        }))), t;
                    },
                    set: function set(e, t, n) {
                        var r,
                            i = this.cache(e);
                        if ("string" == typeof t) i[V(t)] = n; else for (r in t) {
                            i[V(r)] = t[r];
                        }
                        return i;
                    },
                    get: function get(e, t) {
                        return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][V(t)];
                    },
                    access: function access(e, t, n) {
                        return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t);
                    },
                    remove: function remove(e, t) {
                        var n,
                            r = e[this.expando];

                        if (void 0 !== r) {
                            if (void 0 !== t) {
                                n = (t = Array.isArray(t) ? t.map(V) : (t = V(t)) in r ? [t] : t.match(R) || []).length;

                                while (n--) {
                                    delete r[t[n]];
                                }
                            }

                            (void 0 === t || k.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]);
                        }
                    },
                    hasData: function hasData(e) {
                        var t = e[this.expando];
                        return void 0 !== t && !k.isEmptyObject(t);
                    }
                };
                var Q = new Y(),
                    J = new Y(),
                    K = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                    Z = /[A-Z]/g;

                function ee(e, t, n) {
                    var r, i;
                    if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(Z, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) {
                        try {
                            n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : K.test(i) ? JSON.parse(i) : i);
                        } catch (e) {
                        }

                        J.set(e, t, n);
                    } else n = void 0;
                    return n;
                }

                k.extend({
                    hasData: function hasData(e) {
                        return J.hasData(e) || Q.hasData(e);
                    },
                    data: function data(e, t, n) {
                        return J.access(e, t, n);
                    },
                    removeData: function removeData(e, t) {
                        J.remove(e, t);
                    },
                    _data: function _data(e, t, n) {
                        return Q.access(e, t, n);
                    },
                    _removeData: function _removeData(e, t) {
                        Q.remove(e, t);
                    }
                }), k.fn.extend({
                    data: function data(n, e) {
                        var t,
                            r,
                            i,
                            o = this[0],
                            a = o && o.attributes;

                        if (void 0 === n) {
                            if (this.length && (i = J.get(o), 1 === o.nodeType && !Q.get(o, "hasDataAttrs"))) {
                                t = a.length;

                                while (t--) {
                                    a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = V(r.slice(5)), ee(o, r, i[r]));
                                }

                                Q.set(o, "hasDataAttrs", !0);
                            }

                            return i;
                        }

                        return "object" == _typeof(n) ? this.each(function () {
                            J.set(this, n);
                        }) : _(this, function (e) {
                            var t;
                            if (o && void 0 === e) return void 0 !== (t = J.get(o, n)) ? t : void 0 !== (t = ee(o, n)) ? t : void 0;
                            this.each(function () {
                                J.set(this, n, e);
                            });
                        }, null, e, 1 < arguments.length, null, !0);
                    },
                    removeData: function removeData(e) {
                        return this.each(function () {
                            J.remove(this, e);
                        });
                    }
                }), k.extend({
                    queue: function queue(e, t, n) {
                        var r;
                        if (e) return t = (t || "fx") + "queue", r = Q.get(e, t), n && (!r || Array.isArray(n) ? r = Q.access(e, t, k.makeArray(n)) : r.push(n)), r || [];
                    },
                    dequeue: function dequeue(e, t) {
                        t = t || "fx";

                        var n = k.queue(e, t),
                            r = n.length,
                            i = n.shift(),
                            o = k._queueHooks(e, t);

                        "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function () {
                            k.dequeue(e, t);
                        }, o)), !r && o && o.empty.fire();
                    },
                    _queueHooks: function _queueHooks(e, t) {
                        var n = t + "queueHooks";
                        return Q.get(e, n) || Q.access(e, n, {
                            empty: k.Callbacks("once memory").add(function () {
                                Q.remove(e, [t + "queue", n]);
                            })
                        });
                    }
                }), k.fn.extend({
                    queue: function queue(t, n) {
                        var e = 2;
                        return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? k.queue(this[0], t) : void 0 === n ? this : this.each(function () {
                            var e = k.queue(this, t, n);
                            k._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && k.dequeue(this, t);
                        });
                    },
                    dequeue: function dequeue(e) {
                        return this.each(function () {
                            k.dequeue(this, e);
                        });
                    },
                    clearQueue: function clearQueue(e) {
                        return this.queue(e || "fx", []);
                    },
                    promise: function promise(e, t) {
                        var n,
                            r = 1,
                            i = k.Deferred(),
                            o = this,
                            a = this.length,
                            s = function s() {
                                --r || i.resolveWith(o, [o]);
                            };

                        "string" != typeof e && (t = e, e = void 0), e = e || "fx";

                        while (a--) {
                            (n = Q.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
                        }

                        return s(), i.promise(t);
                    }
                });

                var te = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                    ne = new RegExp("^(?:([+-])=|)(" + te + ")([a-z%]*)$", "i"),
                    re = ["Top", "Right", "Bottom", "Left"],
                    ie = E.documentElement,
                    oe = function oe(e) {
                        return k.contains(e.ownerDocument, e);
                    },
                    ae = {
                        composed: !0
                    };

                ie.getRootNode && (oe = function oe(e) {
                    return k.contains(e.ownerDocument, e) || e.getRootNode(ae) === e.ownerDocument;
                });

                var se = function se(e, t) {
                        return "none" === (e = t || e).style.display || "" === e.style.display && oe(e) && "none" === k.css(e, "display");
                    },
                    ue = function ue(e, t, n, r) {
                        var i,
                            o,
                            a = {};

                        for (o in t) {
                            a[o] = e.style[o], e.style[o] = t[o];
                        }

                        for (o in i = n.apply(e, r || []), t) {
                            e.style[o] = a[o];
                        }

                        return i;
                    };

                function le(e, t, n, r) {
                    var i,
                        o,
                        a = 20,
                        s = r ? function () {
                            return r.cur();
                        } : function () {
                            return k.css(e, t, "");
                        },
                        u = s(),
                        l = n && n[3] || (k.cssNumber[t] ? "" : "px"),
                        c = e.nodeType && (k.cssNumber[t] || "px" !== l && +u) && ne.exec(k.css(e, t));

                    if (c && c[3] !== l) {
                        u /= 2, l = l || c[3], c = +u || 1;

                        while (a--) {
                            k.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o;
                        }

                        c *= 2, k.style(e, t, c + l), n = n || [];
                    }

                    return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i;
                }

                var ce = {};

                function fe(e, t) {
                    for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++) {
                        (r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = Q.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && se(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ce[s]) || (o = a.body.appendChild(a.createElement(s)), u = k.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ce[s] = u)))) : "none" !== n && (l[c] = "none", Q.set(r, "display", n)));
                    }

                    for (c = 0; c < f; c++) {
                        null != l[c] && (e[c].style.display = l[c]);
                    }

                    return e;
                }

                k.fn.extend({
                    show: function show() {
                        return fe(this, !0);
                    },
                    hide: function hide() {
                        return fe(this);
                    },
                    toggle: function toggle(e) {
                        return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
                            se(this) ? k(this).show() : k(this).hide();
                        });
                    }
                });
                var pe = /^(?:checkbox|radio)$/i,
                    de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                    he = /^$|^module$|\/(?:java|ecma)script/i,
                    ge = {
                        option: [1, "<select multiple='multiple'>", "</select>"],
                        thead: [1, "<table>", "</table>"],
                        col: [2, "<table><colgroup>", "</colgroup></table>"],
                        tr: [2, "<table><tbody>", "</tbody></table>"],
                        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                        _default: [0, "", ""]
                    };

                function ve(e, t) {
                    var n;
                    return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && A(e, t) ? k.merge([e], n) : n;
                }

                function ye(e, t) {
                    for (var n = 0, r = e.length; n < r; n++) {
                        Q.set(e[n], "globalEval", !t || Q.get(t[n], "globalEval"));
                    }
                }

                ge.optgroup = ge.option, ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td;
                var me,
                    xe,
                    be = /<|&#?\w+;/;

                function we(e, t, n, r, i) {
                    for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++) {
                        if ((o = e[d]) || 0 === o) if ("object" === w(o)) k.merge(p, o.nodeType ? [o] : o); else if (be.test(o)) {
                            a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || ["", ""])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + k.htmlPrefilter(o) + u[2], c = u[0];

                            while (c--) {
                                a = a.lastChild;
                            }

                            k.merge(p, a.childNodes), (a = f.firstChild).textContent = "";
                        } else p.push(t.createTextNode(o));
                    }

                    f.textContent = "", d = 0;

                    while (o = p[d++]) {
                        if (r && -1 < k.inArray(o, r)) i && i.push(o); else if (l = oe(o), a = ve(f.appendChild(o), "script"), l && ye(a), n) {
                            c = 0;

                            while (o = a[c++]) {
                                he.test(o.type || "") && n.push(o);
                            }
                        }
                    }

                    return f;
                }

                me = E.createDocumentFragment().appendChild(E.createElement("div")), (xe = E.createElement("input")).setAttribute("type", "radio"), xe.setAttribute("checked", "checked"), xe.setAttribute("name", "t"), me.appendChild(xe), y.checkClone = me.cloneNode(!0).cloneNode(!0).lastChild.checked, me.innerHTML = "<textarea>x</textarea>", y.noCloneChecked = !!me.cloneNode(!0).lastChild.defaultValue;
                var Te = /^key/,
                    Ce = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                    Ee = /^([^.]*)(?:\.(.+)|)/;

                function ke() {
                    return !0;
                }

                function Se() {
                    return !1;
                }

                function Ne(e, t) {
                    return e === function () {
                        try {
                            return E.activeElement;
                        } catch (e) {
                        }
                    }() == ("focus" === t);
                }

                function Ae(e, t, n, r, i, o) {
                    var a, s;

                    if ("object" == _typeof(t)) {
                        for (s in "string" != typeof n && (r = r || n, n = void 0), t) {
                            Ae(e, s, n, r, t[s], o);
                        }

                        return e;
                    }

                    if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Se; else if (!i) return e;
                    return 1 === o && (a = i, (i = function i(e) {
                        return k().off(e), a.apply(this, arguments);
                    }).guid = a.guid || (a.guid = k.guid++)), e.each(function () {
                        k.event.add(this, t, i, r, n);
                    });
                }

                function De(e, i, o) {
                    o ? (Q.set(e, i, !1), k.event.add(e, i, {
                        namespace: !1,
                        handler: function handler(e) {
                            var t,
                                n,
                                r = Q.get(this, i);

                            if (1 & e.isTrigger && this[i]) {
                                if (r.length) (k.event.special[i] || {}).delegateType && e.stopPropagation(); else if (r = s.call(arguments), Q.set(this, i, r), t = o(this, i), this[i](), r !== (n = Q.get(this, i)) || t ? Q.set(this, i, !1) : n = {}, r !== n) return e.stopImmediatePropagation(), e.preventDefault(), n.value;
                            } else r.length && (Q.set(this, i, {
                                value: k.event.trigger(k.extend(r[0], k.Event.prototype), r.slice(1), this)
                            }), e.stopImmediatePropagation());
                        }
                    })) : void 0 === Q.get(e, i) && k.event.add(e, i, ke);
                }

                k.event = {
                    global: {},
                    add: function add(t, e, n, r, i) {
                        var o,
                            a,
                            s,
                            u,
                            l,
                            c,
                            f,
                            p,
                            d,
                            h,
                            g,
                            v = Q.get(t);

                        if (v) {
                            n.handler && (n = (o = n).handler, i = o.selector), i && k.find.matchesSelector(ie, i), n.guid || (n.guid = k.guid++), (u = v.events) || (u = v.events = {}), (a = v.handle) || (a = v.handle = function (e) {
                                return "undefined" != typeof k && k.event.triggered !== e.type ? k.event.dispatch.apply(t, arguments) : void 0;
                            }), l = (e = (e || "").match(R) || [""]).length;

                            while (l--) {
                                d = g = (s = Ee.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = k.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = k.event.special[d] || {}, c = k.extend({
                                    type: d,
                                    origType: g,
                                    data: r,
                                    handler: n,
                                    guid: n.guid,
                                    selector: i,
                                    needsContext: i && k.expr.match.needsContext.test(i),
                                    namespace: h.join(".")
                                }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), k.event.global[d] = !0);
                            }
                        }
                    },
                    remove: function remove(e, t, n, r, i) {
                        var o,
                            a,
                            s,
                            u,
                            l,
                            c,
                            f,
                            p,
                            d,
                            h,
                            g,
                            v = Q.hasData(e) && Q.get(e);

                        if (v && (u = v.events)) {
                            l = (t = (t || "").match(R) || [""]).length;

                            while (l--) {
                                if (d = g = (s = Ee.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) {
                                    f = k.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length;

                                    while (o--) {
                                        c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c));
                                    }

                                    a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || k.removeEvent(e, d, v.handle), delete u[d]);
                                } else for (d in u) {
                                    k.event.remove(e, d + t[l], n, r, !0);
                                }
                            }

                            k.isEmptyObject(u) && Q.remove(e, "handle events");
                        }
                    },
                    dispatch: function dispatch(e) {
                        var t,
                            n,
                            r,
                            i,
                            o,
                            a,
                            s = k.event.fix(e),
                            u = new Array(arguments.length),
                            l = (Q.get(this, "events") || {})[s.type] || [],
                            c = k.event.special[s.type] || {};

                        for (u[0] = s, t = 1; t < arguments.length; t++) {
                            u[t] = arguments[t];
                        }

                        if (s.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, s)) {
                            a = k.event.handlers.call(this, s, l), t = 0;

                            while ((i = a[t++]) && !s.isPropagationStopped()) {
                                s.currentTarget = i.elem, n = 0;

                                while ((o = i.handlers[n++]) && !s.isImmediatePropagationStopped()) {
                                    s.rnamespace && !1 !== o.namespace && !s.rnamespace.test(o.namespace) || (s.handleObj = o, s.data = o.data, void 0 !== (r = ((k.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, u)) && !1 === (s.result = r) && (s.preventDefault(), s.stopPropagation()));
                                }
                            }

                            return c.postDispatch && c.postDispatch.call(this, s), s.result;
                        }
                    },
                    handlers: function handlers(e, t) {
                        var n,
                            r,
                            i,
                            o,
                            a,
                            s = [],
                            u = t.delegateCount,
                            l = e.target;
                        if (u && l.nodeType && !("click" === e.type && 1 <= e.button)) for (; l !== this; l = l.parentNode || this) {
                            if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                                for (o = [], a = {}, n = 0; n < u; n++) {
                                    void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < k(i, this).index(l) : k.find(i, this, null, [l]).length), a[i] && o.push(r);
                                }

                                o.length && s.push({
                                    elem: l,
                                    handlers: o
                                });
                            }
                        }
                        return l = this, u < t.length && s.push({
                            elem: l,
                            handlers: t.slice(u)
                        }), s;
                    },
                    addProp: function addProp(t, e) {
                        Object.defineProperty(k.Event.prototype, t, {
                            enumerable: !0,
                            configurable: !0,
                            get: m(e) ? function () {
                                if (this.originalEvent) return e(this.originalEvent);
                            } : function () {
                                if (this.originalEvent) return this.originalEvent[t];
                            },
                            set: function set(e) {
                                Object.defineProperty(this, t, {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: e
                                });
                            }
                        });
                    },
                    fix: function fix(e) {
                        return e[k.expando] ? e : new k.Event(e);
                    },
                    special: {
                        load: {
                            noBubble: !0
                        },
                        click: {
                            setup: function setup(e) {
                                var t = this || e;
                                return pe.test(t.type) && t.click && A(t, "input") && De(t, "click", ke), !1;
                            },
                            trigger: function trigger(e) {
                                var t = this || e;
                                return pe.test(t.type) && t.click && A(t, "input") && De(t, "click"), !0;
                            },
                            _default: function _default(e) {
                                var t = e.target;
                                return pe.test(t.type) && t.click && A(t, "input") && Q.get(t, "click") || A(t, "a");
                            }
                        },
                        beforeunload: {
                            postDispatch: function postDispatch(e) {
                                void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
                            }
                        }
                    }
                }, k.removeEvent = function (e, t, n) {
                    e.removeEventListener && e.removeEventListener(t, n);
                }, k.Event = function (e, t) {
                    if (!(this instanceof k.Event)) return new k.Event(e, t);
                    e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? ke : Se, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && k.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[k.expando] = !0;
                }, k.Event.prototype = {
                    constructor: k.Event,
                    isDefaultPrevented: Se,
                    isPropagationStopped: Se,
                    isImmediatePropagationStopped: Se,
                    isSimulated: !1,
                    preventDefault: function preventDefault() {
                        var e = this.originalEvent;
                        this.isDefaultPrevented = ke, e && !this.isSimulated && e.preventDefault();
                    },
                    stopPropagation: function stopPropagation() {
                        var e = this.originalEvent;
                        this.isPropagationStopped = ke, e && !this.isSimulated && e.stopPropagation();
                    },
                    stopImmediatePropagation: function stopImmediatePropagation() {
                        var e = this.originalEvent;
                        this.isImmediatePropagationStopped = ke, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation();
                    }
                }, k.each({
                    altKey: !0,
                    bubbles: !0,
                    cancelable: !0,
                    changedTouches: !0,
                    ctrlKey: !0,
                    detail: !0,
                    eventPhase: !0,
                    metaKey: !0,
                    pageX: !0,
                    pageY: !0,
                    shiftKey: !0,
                    view: !0,
                    "char": !0,
                    code: !0,
                    charCode: !0,
                    key: !0,
                    keyCode: !0,
                    button: !0,
                    buttons: !0,
                    clientX: !0,
                    clientY: !0,
                    offsetX: !0,
                    offsetY: !0,
                    pointerId: !0,
                    pointerType: !0,
                    screenX: !0,
                    screenY: !0,
                    targetTouches: !0,
                    toElement: !0,
                    touches: !0,
                    which: function which(e) {
                        var t = e.button;
                        return null == e.which && Te.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Ce.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which;
                    }
                }, k.event.addProp), k.each({
                    focus: "focusin",
                    blur: "focusout"
                }, function (e, t) {
                    k.event.special[e] = {
                        setup: function setup() {
                            return De(this, e, Ne), !1;
                        },
                        trigger: function trigger() {
                            return De(this, e), !0;
                        },
                        delegateType: t
                    };
                }), k.each({
                    mouseenter: "mouseover",
                    mouseleave: "mouseout",
                    pointerenter: "pointerover",
                    pointerleave: "pointerout"
                }, function (e, i) {
                    k.event.special[e] = {
                        delegateType: i,
                        bindType: i,
                        handle: function handle(e) {
                            var t,
                                n = e.relatedTarget,
                                r = e.handleObj;
                            return n && (n === this || k.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t;
                        }
                    };
                }), k.fn.extend({
                    on: function on(e, t, n, r) {
                        return Ae(this, e, t, n, r);
                    },
                    one: function one(e, t, n, r) {
                        return Ae(this, e, t, n, r, 1);
                    },
                    off: function off(e, t, n) {
                        var r, i;
                        if (e && e.preventDefault && e.handleObj) return r = e.handleObj, k(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;

                        if ("object" == _typeof(e)) {
                            for (i in e) {
                                this.off(i, t, e[i]);
                            }

                            return this;
                        }

                        return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Se), this.each(function () {
                            k.event.remove(this, e, n, t);
                        });
                    }
                });
                var je = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
                    qe = /<script|<style|<link/i,
                    Le = /checked\s*(?:[^=]|=\s*.checked.)/i,
                    He = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

                function Oe(e, t) {
                    return A(e, "table") && A(11 !== t.nodeType ? t : t.firstChild, "tr") && k(e).children("tbody")[0] || e;
                }

                function Pe(e) {
                    return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e;
                }

                function Re(e) {
                    return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e;
                }

                function Me(e, t) {
                    var n, r, i, o, a, s, u, l;

                    if (1 === t.nodeType) {
                        if (Q.hasData(e) && (o = Q.access(e), a = Q.set(t, o), l = o.events)) for (i in delete a.handle, a.events = {}, l) {
                            for (n = 0, r = l[i].length; n < r; n++) {
                                k.event.add(t, i, l[i][n]);
                            }
                        }
                        J.hasData(e) && (s = J.access(e), u = k.extend({}, s), J.set(t, u));
                    }
                }

                function Ie(n, r, i, o) {
                    r = g.apply([], r);
                    var e,
                        t,
                        a,
                        s,
                        u,
                        l,
                        c = 0,
                        f = n.length,
                        p = f - 1,
                        d = r[0],
                        h = m(d);
                    if (h || 1 < f && "string" == typeof d && !y.checkClone && Le.test(d)) return n.each(function (e) {
                        var t = n.eq(e);
                        h && (r[0] = d.call(this, e, t.html())), Ie(t, r, i, o);
                    });

                    if (f && (t = (e = we(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) {
                        for (s = (a = k.map(ve(e, "script"), Pe)).length; c < f; c++) {
                            u = e, c !== p && (u = k.clone(u, !0, !0), s && k.merge(a, ve(u, "script"))), i.call(n[c], u, c);
                        }

                        if (s) for (l = a[a.length - 1].ownerDocument, k.map(a, Re), c = 0; c < s; c++) {
                            u = a[c], he.test(u.type || "") && !Q.access(u, "globalEval") && k.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? k._evalUrl && !u.noModule && k._evalUrl(u.src, {
                                nonce: u.nonce || u.getAttribute("nonce")
                            }) : b(u.textContent.replace(He, ""), u, l));
                        }
                    }

                    return n;
                }

                function We(e, t, n) {
                    for (var r, i = t ? k.filter(t, e) : e, o = 0; null != (r = i[o]); o++) {
                        n || 1 !== r.nodeType || k.cleanData(ve(r)), r.parentNode && (n && oe(r) && ye(ve(r, "script")), r.parentNode.removeChild(r));
                    }

                    return e;
                }

                k.extend({
                    htmlPrefilter: function htmlPrefilter(e) {
                        return e.replace(je, "<$1></$2>");
                    },
                    clone: function clone(e, t, n) {
                        var r,
                            i,
                            o,
                            a,
                            s,
                            u,
                            l,
                            c = e.cloneNode(!0),
                            f = oe(e);
                        if (!(y.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || k.isXMLDoc(e))) for (a = ve(c), r = 0, i = (o = ve(e)).length; r < i; r++) {
                            s = o[r], u = a[r], void 0, "input" === (l = u.nodeName.toLowerCase()) && pe.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue);
                        }
                        if (t) if (n) for (o = o || ve(e), a = a || ve(c), r = 0, i = o.length; r < i; r++) {
                            Me(o[r], a[r]);
                        } else Me(e, c);
                        return 0 < (a = ve(c, "script")).length && ye(a, !f && ve(e, "script")), c;
                    },
                    cleanData: function cleanData(e) {
                        for (var t, n, r, i = k.event.special, o = 0; void 0 !== (n = e[o]); o++) {
                            if (G(n)) {
                                if (t = n[Q.expando]) {
                                    if (t.events) for (r in t.events) {
                                        i[r] ? k.event.remove(n, r) : k.removeEvent(n, r, t.handle);
                                    }
                                    n[Q.expando] = void 0;
                                }

                                n[J.expando] && (n[J.expando] = void 0);
                            }
                        }
                    }
                }), k.fn.extend({
                    detach: function detach(e) {
                        return We(this, e, !0);
                    },
                    remove: function remove(e) {
                        return We(this, e);
                    },
                    text: function text(e) {
                        return _(this, function (e) {
                            return void 0 === e ? k.text(this) : this.empty().each(function () {
                                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e);
                            });
                        }, null, e, arguments.length);
                    },
                    append: function append() {
                        return Ie(this, arguments, function (e) {
                            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Oe(this, e).appendChild(e);
                        });
                    },
                    prepend: function prepend() {
                        return Ie(this, arguments, function (e) {
                            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                                var t = Oe(this, e);
                                t.insertBefore(e, t.firstChild);
                            }
                        });
                    },
                    before: function before() {
                        return Ie(this, arguments, function (e) {
                            this.parentNode && this.parentNode.insertBefore(e, this);
                        });
                    },
                    after: function after() {
                        return Ie(this, arguments, function (e) {
                            this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
                        });
                    },
                    empty: function empty() {
                        for (var e, t = 0; null != (e = this[t]); t++) {
                            1 === e.nodeType && (k.cleanData(ve(e, !1)), e.textContent = "");
                        }

                        return this;
                    },
                    clone: function clone(e, t) {
                        return e = null != e && e, t = null == t ? e : t, this.map(function () {
                            return k.clone(this, e, t);
                        });
                    },
                    html: function html(e) {
                        return _(this, function (e) {
                            var t = this[0] || {},
                                n = 0,
                                r = this.length;
                            if (void 0 === e && 1 === t.nodeType) return t.innerHTML;

                            if ("string" == typeof e && !qe.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) {
                                e = k.htmlPrefilter(e);

                                try {
                                    for (; n < r; n++) {
                                        1 === (t = this[n] || {}).nodeType && (k.cleanData(ve(t, !1)), t.innerHTML = e);
                                    }

                                    t = 0;
                                } catch (e) {
                                }
                            }

                            t && this.empty().append(e);
                        }, null, e, arguments.length);
                    },
                    replaceWith: function replaceWith() {
                        var n = [];
                        return Ie(this, arguments, function (e) {
                            var t = this.parentNode;
                            k.inArray(this, n) < 0 && (k.cleanData(ve(this)), t && t.replaceChild(e, this));
                        }, n);
                    }
                }), k.each({
                    appendTo: "append",
                    prependTo: "prepend",
                    insertBefore: "before",
                    insertAfter: "after",
                    replaceAll: "replaceWith"
                }, function (e, a) {
                    k.fn[e] = function (e) {
                        for (var t, n = [], r = k(e), i = r.length - 1, o = 0; o <= i; o++) {
                            t = o === i ? this : this.clone(!0), k(r[o])[a](t), u.apply(n, t.get());
                        }

                        return this.pushStack(n);
                    };
                });

                var $e = new RegExp("^(" + te + ")(?!px)[a-z%]+$", "i"),
                    Fe = function Fe(e) {
                        var t = e.ownerDocument.defaultView;
                        return t && t.opener || (t = C), t.getComputedStyle(e);
                    },
                    Be = new RegExp(re.join("|"), "i");

                function _e(e, t, n) {
                    var r,
                        i,
                        o,
                        a,
                        s = e.style;
                    return (n = n || Fe(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || oe(e) || (a = k.style(e, t)), !y.pixelBoxStyles() && $e.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a;
                }

                function ze(e, t) {
                    return {
                        get: function get() {
                            if (!e()) return (this.get = t).apply(this, arguments);
                            delete this.get;
                        }
                    };
                }

                !function () {
                    function e() {
                        if (u) {
                            s.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", u.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", ie.appendChild(s).appendChild(u);
                            var e = C.getComputedStyle(u);
                            n = "1%" !== e.top, a = 12 === t(e.marginLeft), u.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), u.style.position = "absolute", i = 12 === t(u.offsetWidth / 3), ie.removeChild(s), u = null;
                        }
                    }

                    function t(e) {
                        return Math.round(parseFloat(e));
                    }

                    var n,
                        r,
                        i,
                        o,
                        a,
                        s = E.createElement("div"),
                        u = E.createElement("div");
                    u.style && (u.style.backgroundClip = "content-box", u.cloneNode(!0).style.backgroundClip = "", y.clearCloneStyle = "content-box" === u.style.backgroundClip, k.extend(y, {
                        boxSizingReliable: function boxSizingReliable() {
                            return e(), r;
                        },
                        pixelBoxStyles: function pixelBoxStyles() {
                            return e(), o;
                        },
                        pixelPosition: function pixelPosition() {
                            return e(), n;
                        },
                        reliableMarginLeft: function reliableMarginLeft() {
                            return e(), a;
                        },
                        scrollboxSize: function scrollboxSize() {
                            return e(), i;
                        }
                    }));
                }();
                var Ue = ["Webkit", "Moz", "ms"],
                    Xe = E.createElement("div").style,
                    Ve = {};

                function Ge(e) {
                    var t = k.cssProps[e] || Ve[e];
                    return t || (e in Xe ? e : Ve[e] = function (e) {
                        var t = e[0].toUpperCase() + e.slice(1),
                            n = Ue.length;

                        while (n--) {
                            if ((e = Ue[n] + t) in Xe) return e;
                        }
                    }(e) || e);
                }

                var Ye = /^(none|table(?!-c[ea]).+)/,
                    Qe = /^--/,
                    Je = {
                        position: "absolute",
                        visibility: "hidden",
                        display: "block"
                    },
                    Ke = {
                        letterSpacing: "0",
                        fontWeight: "400"
                    };

                function Ze(e, t, n) {
                    var r = ne.exec(t);
                    return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
                }

                function et(e, t, n, r, i, o) {
                    var a = "width" === t ? 1 : 0,
                        s = 0,
                        u = 0;
                    if (n === (r ? "border" : "content")) return 0;

                    for (; a < 4; a += 2) {
                        "margin" === n && (u += k.css(e, n + re[a], !0, i)), r ? ("content" === n && (u -= k.css(e, "padding" + re[a], !0, i)), "margin" !== n && (u -= k.css(e, "border" + re[a] + "Width", !0, i))) : (u += k.css(e, "padding" + re[a], !0, i), "padding" !== n ? u += k.css(e, "border" + re[a] + "Width", !0, i) : s += k.css(e, "border" + re[a] + "Width", !0, i));
                    }

                    return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u;
                }

                function tt(e, t, n) {
                    var r = Fe(e),
                        i = (!y.boxSizingReliable() || n) && "border-box" === k.css(e, "boxSizing", !1, r),
                        o = i,
                        a = _e(e, t, r),
                        s = "offset" + t[0].toUpperCase() + t.slice(1);

                    if ($e.test(a)) {
                        if (!n) return a;
                        a = "auto";
                    }

                    return (!y.boxSizingReliable() && i || "auto" === a || !parseFloat(a) && "inline" === k.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === k.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + et(e, t, n || (i ? "border" : "content"), o, r, a) + "px";
                }

                function nt(e, t, n, r, i) {
                    return new nt.prototype.init(e, t, n, r, i);
                }

                k.extend({
                    cssHooks: {
                        opacity: {
                            get: function get(e, t) {
                                if (t) {
                                    var n = _e(e, "opacity");

                                    return "" === n ? "1" : n;
                                }
                            }
                        }
                    },
                    cssNumber: {
                        animationIterationCount: !0,
                        columnCount: !0,
                        fillOpacity: !0,
                        flexGrow: !0,
                        flexShrink: !0,
                        fontWeight: !0,
                        gridArea: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnStart: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowStart: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0
                    },
                    cssProps: {},
                    style: function style(e, t, n, r) {
                        if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                            var i,
                                o,
                                a,
                                s = V(t),
                                u = Qe.test(t),
                                l = e.style;
                            if (u || (t = Ge(s)), a = k.cssHooks[t] || k.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                            "string" === (o = _typeof(n)) && (i = ne.exec(n)) && i[1] && (n = le(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (k.cssNumber[s] ? "" : "px")), y.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n));
                        }
                    },
                    css: function css(e, t, n, r) {
                        var i,
                            o,
                            a,
                            s = V(t);
                        return Qe.test(t) || (t = Ge(s)), (a = k.cssHooks[t] || k.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = _e(e, t, r)), "normal" === i && t in Ke && (i = Ke[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i;
                    }
                }), k.each(["height", "width"], function (e, u) {
                    k.cssHooks[u] = {
                        get: function get(e, t, n) {
                            if (t) return !Ye.test(k.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? tt(e, u, n) : ue(e, Je, function () {
                                return tt(e, u, n);
                            });
                        },
                        set: function set(e, t, n) {
                            var r,
                                i = Fe(e),
                                o = !y.scrollboxSize() && "absolute" === i.position,
                                a = (o || n) && "border-box" === k.css(e, "boxSizing", !1, i),
                                s = n ? et(e, u, n, a, i) : 0;
                            return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - et(e, u, "border", !1, i) - .5)), s && (r = ne.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = k.css(e, u)), Ze(0, t, s);
                        }
                    };
                }), k.cssHooks.marginLeft = ze(y.reliableMarginLeft, function (e, t) {
                    if (t) return (parseFloat(_e(e, "marginLeft")) || e.getBoundingClientRect().left - ue(e, {
                        marginLeft: 0
                    }, function () {
                        return e.getBoundingClientRect().left;
                    })) + "px";
                }), k.each({
                    margin: "",
                    padding: "",
                    border: "Width"
                }, function (i, o) {
                    k.cssHooks[i + o] = {
                        expand: function expand(e) {
                            for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++) {
                                n[i + re[t] + o] = r[t] || r[t - 2] || r[0];
                            }

                            return n;
                        }
                    }, "margin" !== i && (k.cssHooks[i + o].set = Ze);
                }), k.fn.extend({
                    css: function css(e, t) {
                        return _(this, function (e, t, n) {
                            var r,
                                i,
                                o = {},
                                a = 0;

                            if (Array.isArray(t)) {
                                for (r = Fe(e), i = t.length; a < i; a++) {
                                    o[t[a]] = k.css(e, t[a], !1, r);
                                }

                                return o;
                            }

                            return void 0 !== n ? k.style(e, t, n) : k.css(e, t);
                        }, e, t, 1 < arguments.length);
                    }
                }), ((k.Tween = nt).prototype = {
                    constructor: nt,
                    init: function init(e, t, n, r, i, o) {
                        this.elem = e, this.prop = n, this.easing = i || k.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (k.cssNumber[n] ? "" : "px");
                    },
                    cur: function cur() {
                        var e = nt.propHooks[this.prop];
                        return e && e.get ? e.get(this) : nt.propHooks._default.get(this);
                    },
                    run: function run(e) {
                        var t,
                            n = nt.propHooks[this.prop];
                        return this.options.duration ? this.pos = t = k.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : nt.propHooks._default.set(this), this;
                    }
                }).init.prototype = nt.prototype, (nt.propHooks = {
                    _default: {
                        get: function get(e) {
                            var t;
                            return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = k.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
                        },
                        set: function set(e) {
                            k.fx.step[e.prop] ? k.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !k.cssHooks[e.prop] && null == e.elem.style[Ge(e.prop)] ? e.elem[e.prop] = e.now : k.style(e.elem, e.prop, e.now + e.unit);
                        }
                    }
                }).scrollTop = nt.propHooks.scrollLeft = {
                    set: function set(e) {
                        e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
                    }
                }, k.easing = {
                    linear: function linear(e) {
                        return e;
                    },
                    swing: function swing(e) {
                        return .5 - Math.cos(e * Math.PI) / 2;
                    },
                    _default: "swing"
                }, k.fx = nt.prototype.init, k.fx.step = {};
                var rt,
                    it,
                    ot,
                    at,
                    st = /^(?:toggle|show|hide)$/,
                    ut = /queueHooks$/;

                function lt() {
                    it && (!1 === E.hidden && C.requestAnimationFrame ? C.requestAnimationFrame(lt) : C.setTimeout(lt, k.fx.interval), k.fx.tick());
                }

                function ct() {
                    return C.setTimeout(function () {
                        rt = void 0;
                    }), rt = Date.now();
                }

                function ft(e, t) {
                    var n,
                        r = 0,
                        i = {
                            height: e
                        };

                    for (t = t ? 1 : 0; r < 4; r += 2 - t) {
                        i["margin" + (n = re[r])] = i["padding" + n] = e;
                    }

                    return t && (i.opacity = i.width = e), i;
                }

                function pt(e, t, n) {
                    for (var r, i = (dt.tweeners[t] || []).concat(dt.tweeners["*"]), o = 0, a = i.length; o < a; o++) {
                        if (r = i[o].call(n, t, e)) return r;
                    }
                }

                function dt(o, e, t) {
                    var n,
                        a,
                        r = 0,
                        i = dt.prefilters.length,
                        s = k.Deferred().always(function () {
                            delete u.elem;
                        }),
                        u = function u() {
                            if (a) return !1;

                            for (var e = rt || ct(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++) {
                                l.tweens[r].run(n);
                            }

                            return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1);
                        },
                        l = s.promise({
                            elem: o,
                            props: k.extend({}, e),
                            opts: k.extend(!0, {
                                specialEasing: {},
                                easing: k.easing._default
                            }, t),
                            originalProperties: e,
                            originalOptions: t,
                            startTime: rt || ct(),
                            duration: t.duration,
                            tweens: [],
                            createTween: function createTween(e, t) {
                                var n = k.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
                                return l.tweens.push(n), n;
                            },
                            stop: function stop(e) {
                                var t = 0,
                                    n = e ? l.tweens.length : 0;
                                if (a) return this;

                                for (a = !0; t < n; t++) {
                                    l.tweens[t].run(1);
                                }

                                return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this;
                            }
                        }),
                        c = l.props;

                    for (!function (e, t) {
                        var n, r, i, o, a;

                        for (n in e) {
                            if (i = t[r = V(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = k.cssHooks[r]) && ("expand" in a)) for (n in o = a.expand(o), delete e[r], o) {
                                (n in e) || (e[n] = o[n], t[n] = i);
                            } else t[r] = i;
                        }
                    }(c, l.opts.specialEasing); r < i; r++) {
                        if (n = dt.prefilters[r].call(l, o, c, l.opts)) return m(n.stop) && (k._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n;
                    }

                    return k.map(c, pt, l), m(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), k.fx.timer(k.extend(u, {
                        elem: o,
                        anim: l,
                        queue: l.opts.queue
                    })), l;
                }

                k.Animation = k.extend(dt, {
                    tweeners: {
                        "*": [function (e, t) {
                            var n = this.createTween(e, t);
                            return le(n.elem, e, ne.exec(t), n), n;
                        }]
                    },
                    tweener: function tweener(e, t) {
                        m(e) ? (t = e, e = ["*"]) : e = e.match(R);

                        for (var n, r = 0, i = e.length; r < i; r++) {
                            n = e[r], dt.tweeners[n] = dt.tweeners[n] || [], dt.tweeners[n].unshift(t);
                        }
                    },
                    prefilters: [function (e, t, n) {
                        var r,
                            i,
                            o,
                            a,
                            s,
                            u,
                            l,
                            c,
                            f = "width" in t || "height" in t,
                            p = this,
                            d = {},
                            h = e.style,
                            g = e.nodeType && se(e),
                            v = Q.get(e, "fxshow");

                        for (r in n.queue || (null == (a = k._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () {
                            a.unqueued || s();
                        }), a.unqueued++, p.always(function () {
                            p.always(function () {
                                a.unqueued--, k.queue(e, "fx").length || a.empty.fire();
                            });
                        })), t) {
                            if (i = t[r], st.test(i)) {
                                if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) {
                                    if ("show" !== i || !v || void 0 === v[r]) continue;
                                    g = !0;
                                }

                                d[r] = v && v[r] || k.style(e, r);
                            }
                        }

                        if ((u = !k.isEmptyObject(t)) || !k.isEmptyObject(d)) for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = v && v.display) && (l = Q.get(e, "display")), "none" === (c = k.css(e, "display")) && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = k.css(e, "display"), fe([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === k.css(e, "float") && (u || (p.done(function () {
                            h.display = l;
                        }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () {
                            h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2];
                        })), u = !1, d) {
                            u || (v ? "hidden" in v && (g = v.hidden) : v = Q.access(e, "fxshow", {
                                display: l
                            }), o && (v.hidden = !g), g && fe([e], !0), p.done(function () {
                                for (r in g || fe([e]), Q.remove(e, "fxshow"), d) {
                                    k.style(e, r, d[r]);
                                }
                            })), u = pt(g ? v[r] : 0, r, p), r in v || (v[r] = u.start, g && (u.end = u.start, u.start = 0));
                        }
                    }],
                    prefilter: function prefilter(e, t) {
                        t ? dt.prefilters.unshift(e) : dt.prefilters.push(e);
                    }
                }), k.speed = function (e, t, n) {
                    var r = e && "object" == _typeof(e) ? k.extend({}, e) : {
                        complete: n || !n && t || m(e) && e,
                        duration: e,
                        easing: n && t || t && !m(t) && t
                    };
                    return k.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in k.fx.speeds ? r.duration = k.fx.speeds[r.duration] : r.duration = k.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () {
                        m(r.old) && r.old.call(this), r.queue && k.dequeue(this, r.queue);
                    }, r;
                }, k.fn.extend({
                    fadeTo: function fadeTo(e, t, n, r) {
                        return this.filter(se).css("opacity", 0).show().end().animate({
                            opacity: t
                        }, e, n, r);
                    },
                    animate: function animate(t, e, n, r) {
                        var i = k.isEmptyObject(t),
                            o = k.speed(e, n, r),
                            a = function a() {
                                var e = dt(this, k.extend({}, t), o);
                                (i || Q.get(this, "finish")) && e.stop(!0);
                            };

                        return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a);
                    },
                    stop: function stop(i, e, o) {
                        var a = function a(e) {
                            var t = e.stop;
                            delete e.stop, t(o);
                        };

                        return "string" != typeof i && (o = e, e = i, i = void 0), e && !1 !== i && this.queue(i || "fx", []), this.each(function () {
                            var e = !0,
                                t = null != i && i + "queueHooks",
                                n = k.timers,
                                r = Q.get(this);
                            if (t) r[t] && r[t].stop && a(r[t]); else for (t in r) {
                                r[t] && r[t].stop && ut.test(t) && a(r[t]);
                            }

                            for (t = n.length; t--;) {
                                n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1));
                            }

                            !e && o || k.dequeue(this, i);
                        });
                    },
                    finish: function finish(a) {
                        return !1 !== a && (a = a || "fx"), this.each(function () {
                            var e,
                                t = Q.get(this),
                                n = t[a + "queue"],
                                r = t[a + "queueHooks"],
                                i = k.timers,
                                o = n ? n.length : 0;

                            for (t.finish = !0, k.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;) {
                                i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1));
                            }

                            for (e = 0; e < o; e++) {
                                n[e] && n[e].finish && n[e].finish.call(this);
                            }

                            delete t.finish;
                        });
                    }
                }), k.each(["toggle", "show", "hide"], function (e, r) {
                    var i = k.fn[r];

                    k.fn[r] = function (e, t, n) {
                        return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(ft(r, !0), e, t, n);
                    };
                }), k.each({
                    slideDown: ft("show"),
                    slideUp: ft("hide"),
                    slideToggle: ft("toggle"),
                    fadeIn: {
                        opacity: "show"
                    },
                    fadeOut: {
                        opacity: "hide"
                    },
                    fadeToggle: {
                        opacity: "toggle"
                    }
                }, function (e, r) {
                    k.fn[e] = function (e, t, n) {
                        return this.animate(r, e, t, n);
                    };
                }), k.timers = [], k.fx.tick = function () {
                    var e,
                        t = 0,
                        n = k.timers;

                    for (rt = Date.now(); t < n.length; t++) {
                        (e = n[t])() || n[t] !== e || n.splice(t--, 1);
                    }

                    n.length || k.fx.stop(), rt = void 0;
                }, k.fx.timer = function (e) {
                    k.timers.push(e), k.fx.start();
                }, k.fx.interval = 13, k.fx.start = function () {
                    it || (it = !0, lt());
                }, k.fx.stop = function () {
                    it = null;
                }, k.fx.speeds = {
                    slow: 600,
                    fast: 200,
                    _default: 400
                }, k.fn.delay = function (r, e) {
                    return r = k.fx && k.fx.speeds[r] || r, e = e || "fx", this.queue(e, function (e, t) {
                        var n = C.setTimeout(e, r);

                        t.stop = function () {
                            C.clearTimeout(n);
                        };
                    });
                }, ot = E.createElement("input"), at = E.createElement("select").appendChild(E.createElement("option")), ot.type = "checkbox", y.checkOn = "" !== ot.value, y.optSelected = at.selected, (ot = E.createElement("input")).value = "t", ot.type = "radio", y.radioValue = "t" === ot.value;
                var ht,
                    gt = k.expr.attrHandle;
                k.fn.extend({
                    attr: function attr(e, t) {
                        return _(this, k.attr, e, t, 1 < arguments.length);
                    },
                    removeAttr: function removeAttr(e) {
                        return this.each(function () {
                            k.removeAttr(this, e);
                        });
                    }
                }), k.extend({
                    attr: function attr(e, t, n) {
                        var r,
                            i,
                            o = e.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? k.prop(e, t, n) : (1 === o && k.isXMLDoc(e) || (i = k.attrHooks[t.toLowerCase()] || (k.expr.match.bool.test(t) ? ht : void 0)), void 0 !== n ? null === n ? void k.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = k.find.attr(e, t)) ? void 0 : r);
                    },
                    attrHooks: {
                        type: {
                            set: function set(e, t) {
                                if (!y.radioValue && "radio" === t && A(e, "input")) {
                                    var n = e.value;
                                    return e.setAttribute("type", t), n && (e.value = n), t;
                                }
                            }
                        }
                    },
                    removeAttr: function removeAttr(e, t) {
                        var n,
                            r = 0,
                            i = t && t.match(R);
                        if (i && 1 === e.nodeType) while (n = i[r++]) {
                            e.removeAttribute(n);
                        }
                    }
                }), ht = {
                    set: function set(e, t, n) {
                        return !1 === t ? k.removeAttr(e, n) : e.setAttribute(n, n), n;
                    }
                }, k.each(k.expr.match.bool.source.match(/\w+/g), function (e, t) {
                    var a = gt[t] || k.find.attr;

                    gt[t] = function (e, t, n) {
                        var r,
                            i,
                            o = t.toLowerCase();
                        return n || (i = gt[o], gt[o] = r, r = null != a(e, t, n) ? o : null, gt[o] = i), r;
                    };
                });
                var vt = /^(?:input|select|textarea|button)$/i,
                    yt = /^(?:a|area)$/i;

                function mt(e) {
                    return (e.match(R) || []).join(" ");
                }

                function xt(e) {
                    return e.getAttribute && e.getAttribute("class") || "";
                }

                function bt(e) {
                    return Array.isArray(e) ? e : "string" == typeof e && e.match(R) || [];
                }

                k.fn.extend({
                    prop: function prop(e, t) {
                        return _(this, k.prop, e, t, 1 < arguments.length);
                    },
                    removeProp: function removeProp(e) {
                        return this.each(function () {
                            delete this[k.propFix[e] || e];
                        });
                    }
                }), k.extend({
                    prop: function prop(e, t, n) {
                        var r,
                            i,
                            o = e.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o) return 1 === o && k.isXMLDoc(e) || (t = k.propFix[t] || t, i = k.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t];
                    },
                    propHooks: {
                        tabIndex: {
                            get: function get(e) {
                                var t = k.find.attr(e, "tabindex");
                                return t ? parseInt(t, 10) : vt.test(e.nodeName) || yt.test(e.nodeName) && e.href ? 0 : -1;
                            }
                        }
                    },
                    propFix: {
                        "for": "htmlFor",
                        "class": "className"
                    }
                }), y.optSelected || (k.propHooks.selected = {
                    get: function get(e) {
                        var t = e.parentNode;
                        return t && t.parentNode && t.parentNode.selectedIndex, null;
                    },
                    set: function set(e) {
                        var t = e.parentNode;
                        t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
                    }
                }), k.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
                    k.propFix[this.toLowerCase()] = this;
                }), k.fn.extend({
                    addClass: function addClass(t) {
                        var e,
                            n,
                            r,
                            i,
                            o,
                            a,
                            s,
                            u = 0;
                        if (m(t)) return this.each(function (e) {
                            k(this).addClass(t.call(this, e, xt(this)));
                        });
                        if ((e = bt(t)).length) while (n = this[u++]) {
                            if (i = xt(n), r = 1 === n.nodeType && " " + mt(i) + " ") {
                                a = 0;

                                while (o = e[a++]) {
                                    r.indexOf(" " + o + " ") < 0 && (r += o + " ");
                                }

                                i !== (s = mt(r)) && n.setAttribute("class", s);
                            }
                        }
                        return this;
                    },
                    removeClass: function removeClass(t) {
                        var e,
                            n,
                            r,
                            i,
                            o,
                            a,
                            s,
                            u = 0;
                        if (m(t)) return this.each(function (e) {
                            k(this).removeClass(t.call(this, e, xt(this)));
                        });
                        if (!arguments.length) return this.attr("class", "");
                        if ((e = bt(t)).length) while (n = this[u++]) {
                            if (i = xt(n), r = 1 === n.nodeType && " " + mt(i) + " ") {
                                a = 0;

                                while (o = e[a++]) {
                                    while (-1 < r.indexOf(" " + o + " ")) {
                                        r = r.replace(" " + o + " ", " ");
                                    }
                                }

                                i !== (s = mt(r)) && n.setAttribute("class", s);
                            }
                        }
                        return this;
                    },
                    toggleClass: function toggleClass(i, t) {
                        var o = _typeof(i),
                            a = "string" === o || Array.isArray(i);

                        return "boolean" == typeof t && a ? t ? this.addClass(i) : this.removeClass(i) : m(i) ? this.each(function (e) {
                            k(this).toggleClass(i.call(this, e, xt(this), t), t);
                        }) : this.each(function () {
                            var e, t, n, r;

                            if (a) {
                                t = 0, n = k(this), r = bt(i);

                                while (e = r[t++]) {
                                    n.hasClass(e) ? n.removeClass(e) : n.addClass(e);
                                }
                            } else void 0 !== i && "boolean" !== o || ((e = xt(this)) && Q.set(this, "__className__", e), this.setAttribute && this.setAttribute("class", e || !1 === i ? "" : Q.get(this, "__className__") || ""));
                        });
                    },
                    hasClass: function hasClass(e) {
                        var t,
                            n,
                            r = 0;
                        t = " " + e + " ";

                        while (n = this[r++]) {
                            if (1 === n.nodeType && -1 < (" " + mt(xt(n)) + " ").indexOf(t)) return !0;
                        }

                        return !1;
                    }
                });
                var wt = /\r/g;
                k.fn.extend({
                    val: function val(n) {
                        var r,
                            e,
                            i,
                            t = this[0];
                        return arguments.length ? (i = m(n), this.each(function (e) {
                            var t;
                            1 === this.nodeType && (null == (t = i ? n.call(this, e, k(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = k.map(t, function (e) {
                                return null == e ? "" : e + "";
                            })), (r = k.valHooks[this.type] || k.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t));
                        })) : t ? (r = k.valHooks[t.type] || k.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(wt, "") : null == e ? "" : e : void 0;
                    }
                }), k.extend({
                    valHooks: {
                        option: {
                            get: function get(e) {
                                var t = k.find.attr(e, "value");
                                return null != t ? t : mt(k.text(e));
                            }
                        },
                        select: {
                            get: function get(e) {
                                var t,
                                    n,
                                    r,
                                    i = e.options,
                                    o = e.selectedIndex,
                                    a = "select-one" === e.type,
                                    s = a ? null : [],
                                    u = a ? o + 1 : i.length;

                                for (r = o < 0 ? u : a ? o : 0; r < u; r++) {
                                    if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) {
                                        if (t = k(n).val(), a) return t;
                                        s.push(t);
                                    }
                                }

                                return s;
                            },
                            set: function set(e, t) {
                                var n,
                                    r,
                                    i = e.options,
                                    o = k.makeArray(t),
                                    a = i.length;

                                while (a--) {
                                    ((r = i[a]).selected = -1 < k.inArray(k.valHooks.option.get(r), o)) && (n = !0);
                                }

                                return n || (e.selectedIndex = -1), o;
                            }
                        }
                    }
                }), k.each(["radio", "checkbox"], function () {
                    k.valHooks[this] = {
                        set: function set(e, t) {
                            if (Array.isArray(t)) return e.checked = -1 < k.inArray(k(e).val(), t);
                        }
                    }, y.checkOn || (k.valHooks[this].get = function (e) {
                        return null === e.getAttribute("value") ? "on" : e.value;
                    });
                }), y.focusin = "onfocusin" in C;

                var Tt = /^(?:focusinfocus|focusoutblur)$/,
                    Ct = function Ct(e) {
                        e.stopPropagation();
                    };

                k.extend(k.event, {
                    trigger: function trigger(e, t, n, r) {
                        var i,
                            o,
                            a,
                            s,
                            u,
                            l,
                            c,
                            f,
                            p = [n || E],
                            d = v.call(e, "type") ? e.type : e,
                            h = v.call(e, "namespace") ? e.namespace.split(".") : [];

                        if (o = f = a = n = n || E, 3 !== n.nodeType && 8 !== n.nodeType && !Tt.test(d + k.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[k.expando] ? e : new k.Event(d, "object" == _typeof(e) && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [e] : k.makeArray(t, [e]), c = k.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) {
                            if (!r && !c.noBubble && !x(n)) {
                                for (s = c.delegateType || d, Tt.test(s + d) || (o = o.parentNode); o; o = o.parentNode) {
                                    p.push(o), a = o;
                                }

                                a === (n.ownerDocument || E) && p.push(a.defaultView || a.parentWindow || C);
                            }

                            i = 0;

                            while ((o = p[i++]) && !e.isPropagationStopped()) {
                                f = o, e.type = 1 < i ? s : c.bindType || d, (l = (Q.get(o, "events") || {})[e.type] && Q.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && G(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault());
                            }

                            return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !G(n) || u && m(n[d]) && !x(n) && ((a = n[u]) && (n[u] = null), k.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, Ct), n[d](), e.isPropagationStopped() && f.removeEventListener(d, Ct), k.event.triggered = void 0, a && (n[u] = a)), e.result;
                        }
                    },
                    simulate: function simulate(e, t, n) {
                        var r = k.extend(new k.Event(), n, {
                            type: e,
                            isSimulated: !0
                        });
                        k.event.trigger(r, null, t);
                    }
                }), k.fn.extend({
                    trigger: function trigger(e, t) {
                        return this.each(function () {
                            k.event.trigger(e, t, this);
                        });
                    },
                    triggerHandler: function triggerHandler(e, t) {
                        var n = this[0];
                        if (n) return k.event.trigger(e, t, n, !0);
                    }
                }), y.focusin || k.each({
                    focus: "focusin",
                    blur: "focusout"
                }, function (n, r) {
                    var i = function i(e) {
                        k.event.simulate(r, e.target, k.event.fix(e));
                    };

                    k.event.special[r] = {
                        setup: function setup() {
                            var e = this.ownerDocument || this,
                                t = Q.access(e, r);
                            t || e.addEventListener(n, i, !0), Q.access(e, r, (t || 0) + 1);
                        },
                        teardown: function teardown() {
                            var e = this.ownerDocument || this,
                                t = Q.access(e, r) - 1;
                            t ? Q.access(e, r, t) : (e.removeEventListener(n, i, !0), Q.remove(e, r));
                        }
                    };
                });
                var Et = C.location,
                    kt = Date.now(),
                    St = /\?/;

                k.parseXML = function (e) {
                    var t;
                    if (!e || "string" != typeof e) return null;

                    try {
                        t = new C.DOMParser().parseFromString(e, "text/xml");
                    } catch (e) {
                        t = void 0;
                    }

                    return t && !t.getElementsByTagName("parsererror").length || k.error("Invalid XML: " + e), t;
                };

                var Nt = /\[\]$/,
                    At = /\r?\n/g,
                    Dt = /^(?:submit|button|image|reset|file)$/i,
                    jt = /^(?:input|select|textarea|keygen)/i;

                function qt(n, e, r, i) {
                    var t;
                    if (Array.isArray(e)) k.each(e, function (e, t) {
                        r || Nt.test(n) ? i(n, t) : qt(n + "[" + ("object" == _typeof(t) && null != t ? e : "") + "]", t, r, i);
                    }); else if (r || "object" !== w(e)) i(n, e); else for (t in e) {
                        qt(n + "[" + t + "]", e[t], r, i);
                    }
                }

                k.param = function (e, t) {
                    var n,
                        r = [],
                        i = function i(e, t) {
                            var n = m(t) ? t() : t;
                            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
                        };

                    if (null == e) return "";
                    if (Array.isArray(e) || e.jquery && !k.isPlainObject(e)) k.each(e, function () {
                        i(this.name, this.value);
                    }); else for (n in e) {
                        qt(n, e[n], t, i);
                    }
                    return r.join("&");
                }, k.fn.extend({
                    serialize: function serialize() {
                        return k.param(this.serializeArray());
                    },
                    serializeArray: function serializeArray() {
                        return this.map(function () {
                            var e = k.prop(this, "elements");
                            return e ? k.makeArray(e) : this;
                        }).filter(function () {
                            var e = this.type;
                            return this.name && !k(this).is(":disabled") && jt.test(this.nodeName) && !Dt.test(e) && (this.checked || !pe.test(e));
                        }).map(function (e, t) {
                            var n = k(this).val();
                            return null == n ? null : Array.isArray(n) ? k.map(n, function (e) {
                                return {
                                    name: t.name,
                                    value: e.replace(At, "\r\n")
                                };
                            }) : {
                                name: t.name,
                                value: n.replace(At, "\r\n")
                            };
                        }).get();
                    }
                });
                var Lt = /%20/g,
                    Ht = /#.*$/,
                    Ot = /([?&])_=[^&]*/,
                    Pt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                    Rt = /^(?:GET|HEAD)$/,
                    Mt = /^\/\//,
                    It = {},
                    Wt = {},
                    $t = "*/".concat("*"),
                    Ft = E.createElement("a");

                function Bt(o) {
                    return function (e, t) {
                        "string" != typeof e && (t = e, e = "*");
                        var n,
                            r = 0,
                            i = e.toLowerCase().match(R) || [];
                        if (m(t)) while (n = i[r++]) {
                            "+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t);
                        }
                    };
                }

                function _t(t, i, o, a) {
                    var s = {},
                        u = t === Wt;

                    function l(e) {
                        var r;
                        return s[e] = !0, k.each(t[e] || [], function (e, t) {
                            var n = t(i, o, a);
                            return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1);
                        }), r;
                    }

                    return l(i.dataTypes[0]) || !s["*"] && l("*");
                }

                function zt(e, t) {
                    var n,
                        r,
                        i = k.ajaxSettings.flatOptions || {};

                    for (n in t) {
                        void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
                    }

                    return r && k.extend(!0, e, r), e;
                }

                Ft.href = Et.href, k.extend({
                    active: 0,
                    lastModified: {},
                    etag: {},
                    ajaxSettings: {
                        url: Et.href,
                        type: "GET",
                        isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),
                        global: !0,
                        processData: !0,
                        async: !0,
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        accepts: {
                            "*": $t,
                            text: "text/plain",
                            html: "text/html",
                            xml: "application/xml, text/xml",
                            json: "application/json, text/javascript"
                        },
                        contents: {
                            xml: /\bxml\b/,
                            html: /\bhtml/,
                            json: /\bjson\b/
                        },
                        responseFields: {
                            xml: "responseXML",
                            text: "responseText",
                            json: "responseJSON"
                        },
                        converters: {
                            "* text": String,
                            "text html": !0,
                            "text json": JSON.parse,
                            "text xml": k.parseXML
                        },
                        flatOptions: {
                            url: !0,
                            context: !0
                        }
                    },
                    ajaxSetup: function ajaxSetup(e, t) {
                        return t ? zt(zt(e, k.ajaxSettings), t) : zt(k.ajaxSettings, e);
                    },
                    ajaxPrefilter: Bt(It),
                    ajaxTransport: Bt(Wt),
                    ajax: function ajax(e, t) {
                        "object" == _typeof(e) && (t = e, e = void 0), t = t || {};
                        var c,
                            f,
                            p,
                            n,
                            d,
                            r,
                            h,
                            g,
                            i,
                            o,
                            v = k.ajaxSetup({}, t),
                            y = v.context || v,
                            m = v.context && (y.nodeType || y.jquery) ? k(y) : k.event,
                            x = k.Deferred(),
                            b = k.Callbacks("once memory"),
                            w = v.statusCode || {},
                            a = {},
                            s = {},
                            u = "canceled",
                            T = {
                                readyState: 0,
                                getResponseHeader: function getResponseHeader(e) {
                                    var t;

                                    if (h) {
                                        if (!n) {
                                            n = {};

                                            while (t = Pt.exec(p)) {
                                                n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]);
                                            }
                                        }

                                        t = n[e.toLowerCase() + " "];
                                    }

                                    return null == t ? null : t.join(", ");
                                },
                                getAllResponseHeaders: function getAllResponseHeaders() {
                                    return h ? p : null;
                                },
                                setRequestHeader: function setRequestHeader(e, t) {
                                    return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this;
                                },
                                overrideMimeType: function overrideMimeType(e) {
                                    return null == h && (v.mimeType = e), this;
                                },
                                statusCode: function statusCode(e) {
                                    var t;
                                    if (e) if (h) T.always(e[T.status]); else for (t in e) {
                                        w[t] = [w[t], e[t]];
                                    }
                                    return this;
                                },
                                abort: function abort(e) {
                                    var t = e || u;
                                    return c && c.abort(t), l(0, t), this;
                                }
                            };

                        if (x.promise(T), v.url = ((e || v.url || Et.href) + "").replace(Mt, Et.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*").toLowerCase().match(R) || [""], null == v.crossDomain) {
                            r = E.createElement("a");

                            try {
                                r.href = v.url, r.href = r.href, v.crossDomain = Ft.protocol + "//" + Ft.host != r.protocol + "//" + r.host;
                            } catch (e) {
                                v.crossDomain = !0;
                            }
                        }

                        if (v.data && v.processData && "string" != typeof v.data && (v.data = k.param(v.data, v.traditional)), _t(It, v, t, T), h) return T;

                        for (i in (g = k.event && v.global) && 0 == k.active++ && k.event.trigger("ajaxStart"), v.type = v.type.toUpperCase(), v.hasContent = !Rt.test(v.type), f = v.url.replace(Ht, ""), v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(Lt, "+")) : (o = v.url.slice(f.length), v.data && (v.processData || "string" == typeof v.data) && (f += (St.test(f) ? "&" : "?") + v.data, delete v.data), !1 === v.cache && (f = f.replace(Ot, "$1"), o = (St.test(f) ? "&" : "?") + "_=" + kt++ + o), v.url = f + o), v.ifModified && (k.lastModified[f] && T.setRequestHeader("If-Modified-Since", k.lastModified[f]), k.etag[f] && T.setRequestHeader("If-None-Match", k.etag[f])), (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType), T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + $t + "; q=0.01" : "") : v.accepts["*"]), v.headers) {
                            T.setRequestHeader(i, v.headers[i]);
                        }

                        if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort();

                        if (u = "abort", b.add(v.complete), T.done(v.success), T.fail(v.error), c = _t(Wt, v, t, T)) {
                            if (T.readyState = 1, g && m.trigger("ajaxSend", [T, v]), h) return T;
                            v.async && 0 < v.timeout && (d = C.setTimeout(function () {
                                T.abort("timeout");
                            }, v.timeout));

                            try {
                                h = !1, c.send(a, l);
                            } catch (e) {
                                if (h) throw e;
                                l(-1, e);
                            }
                        } else l(-1, "No Transport");

                        function l(e, t, n, r) {
                            var i,
                                o,
                                a,
                                s,
                                u,
                                l = t;
                            h || (h = !0, d && C.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function (e, t, n) {
                                var r,
                                    i,
                                    o,
                                    a,
                                    s = e.contents,
                                    u = e.dataTypes;

                                while ("*" === u[0]) {
                                    u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                                }

                                if (r) for (i in s) {
                                    if (s[i] && s[i].test(r)) {
                                        u.unshift(i);
                                        break;
                                    }
                                }
                                if (u[0] in n) o = u[0]; else {
                                    for (i in n) {
                                        if (!u[0] || e.converters[i + " " + u[0]]) {
                                            o = i;
                                            break;
                                        }

                                        a || (a = i);
                                    }

                                    o = o || a;
                                }
                                if (o) return o !== u[0] && u.unshift(o), n[o];
                            }(v, T, n)), s = function (e, t, n, r) {
                                var i,
                                    o,
                                    a,
                                    s,
                                    u,
                                    l = {},
                                    c = e.dataTypes.slice();
                                if (c[1]) for (a in e.converters) {
                                    l[a.toLowerCase()] = e.converters[a];
                                }
                                o = c.shift();

                                while (o) {
                                    if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) {
                                        if (!(a = l[u + " " + o] || l["* " + o])) for (i in l) {
                                            if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                                !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1]));
                                                break;
                                            }
                                        }
                                        if (!0 !== a) if (a && e["throws"]) t = a(t); else try {
                                            t = a(t);
                                        } catch (e) {
                                            return {
                                                state: "parsererror",
                                                error: a ? e : "No conversion from " + u + " to " + o
                                            };
                                        }
                                    }
                                }

                                return {
                                    state: "success",
                                    data: t
                                };
                            }(v, s, T, i), i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (k.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (k.etag[f] = u)), 204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]), b.fireWith(y, [T, l]), g && (m.trigger("ajaxComplete", [T, v]), --k.active || k.event.trigger("ajaxStop")));
                        }

                        return T;
                    },
                    getJSON: function getJSON(e, t, n) {
                        return k.get(e, t, n, "json");
                    },
                    getScript: function getScript(e, t) {
                        return k.get(e, void 0, t, "script");
                    }
                }), k.each(["get", "post"], function (e, i) {
                    k[i] = function (e, t, n, r) {
                        return m(t) && (r = r || n, n = t, t = void 0), k.ajax(k.extend({
                            url: e,
                            type: i,
                            dataType: r,
                            data: t,
                            success: n
                        }, k.isPlainObject(e) && e));
                    };
                }), k._evalUrl = function (e, t) {
                    return k.ajax({
                        url: e,
                        type: "GET",
                        dataType: "script",
                        cache: !0,
                        async: !1,
                        global: !1,
                        converters: {
                            "text script": function textScript() {
                            }
                        },
                        dataFilter: function dataFilter(e) {
                            k.globalEval(e, t);
                        }
                    });
                }, k.fn.extend({
                    wrapAll: function wrapAll(e) {
                        var t;
                        return this[0] && (m(e) && (e = e.call(this[0])), t = k(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
                            var e = this;

                            while (e.firstElementChild) {
                                e = e.firstElementChild;
                            }

                            return e;
                        }).append(this)), this;
                    },
                    wrapInner: function wrapInner(n) {
                        return m(n) ? this.each(function (e) {
                            k(this).wrapInner(n.call(this, e));
                        }) : this.each(function () {
                            var e = k(this),
                                t = e.contents();
                            t.length ? t.wrapAll(n) : e.append(n);
                        });
                    },
                    wrap: function wrap(t) {
                        var n = m(t);
                        return this.each(function (e) {
                            k(this).wrapAll(n ? t.call(this, e) : t);
                        });
                    },
                    unwrap: function unwrap(e) {
                        return this.parent(e).not("body").each(function () {
                            k(this).replaceWith(this.childNodes);
                        }), this;
                    }
                }), k.expr.pseudos.hidden = function (e) {
                    return !k.expr.pseudos.visible(e);
                }, k.expr.pseudos.visible = function (e) {
                    return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
                }, k.ajaxSettings.xhr = function () {
                    try {
                        return new C.XMLHttpRequest();
                    } catch (e) {
                    }
                };
                var Ut = {
                        0: 200,
                        1223: 204
                    },
                    Xt = k.ajaxSettings.xhr();
                y.cors = !!Xt && "withCredentials" in Xt, y.ajax = Xt = !!Xt, k.ajaxTransport(function (i) {
                    var _o, a;

                    if (y.cors || Xt && !i.crossDomain) return {
                        send: function send(e, t) {
                            var n,
                                r = i.xhr();
                            if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields) for (n in i.xhrFields) {
                                r[n] = i.xhrFields[n];
                            }

                            for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e) {
                                r.setRequestHeader(n, e[n]);
                            }

                            _o = function o(e) {
                                return function () {
                                    _o && (_o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(Ut[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? {
                                        binary: r.response
                                    } : {
                                        text: r.responseText
                                    }, r.getAllResponseHeaders()));
                                };
                            }, r.onload = _o(), a = r.onerror = r.ontimeout = _o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function () {
                                4 === r.readyState && C.setTimeout(function () {
                                    _o && a();
                                });
                            }, _o = _o("abort");

                            try {
                                r.send(i.hasContent && i.data || null);
                            } catch (e) {
                                if (_o) throw e;
                            }
                        },
                        abort: function abort() {
                            _o && _o();
                        }
                    };
                }), k.ajaxPrefilter(function (e) {
                    e.crossDomain && (e.contents.script = !1);
                }), k.ajaxSetup({
                    accepts: {
                        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                    },
                    contents: {
                        script: /\b(?:java|ecma)script\b/
                    },
                    converters: {
                        "text script": function textScript(e) {
                            return k.globalEval(e), e;
                        }
                    }
                }), k.ajaxPrefilter("script", function (e) {
                    void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
                }), k.ajaxTransport("script", function (n) {
                    var r, _i;

                    if (n.crossDomain || n.scriptAttrs) return {
                        send: function send(e, t) {
                            r = k("<script>").attr(n.scriptAttrs || {}).prop({
                                charset: n.scriptCharset,
                                src: n.url
                            }).on("load error", _i = function i(e) {
                                r.remove(), _i = null, e && t("error" === e.type ? 404 : 200, e.type);
                            }), E.head.appendChild(r[0]);
                        },
                        abort: function abort() {
                            _i && _i();
                        }
                    };
                });
                var Vt,
                    Gt = [],
                    Yt = /(=)\?(?=&|$)|\?\?/;
                k.ajaxSetup({
                    jsonp: "callback",
                    jsonpCallback: function jsonpCallback() {
                        var e = Gt.pop() || k.expando + "_" + kt++;
                        return this[e] = !0, e;
                    }
                }), k.ajaxPrefilter("json jsonp", function (e, t, n) {
                    var r,
                        i,
                        o,
                        a = !1 !== e.jsonp && (Yt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Yt.test(e.data) && "data");
                    if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Yt, "$1" + r) : !1 !== e.jsonp && (e.url += (St.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () {
                        return o || k.error(r + " was not called"), o[0];
                    }, e.dataTypes[0] = "json", i = C[r], C[r] = function () {
                        o = arguments;
                    }, n.always(function () {
                        void 0 === i ? k(C).removeProp(r) : C[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Gt.push(r)), o && m(i) && i(o[0]), o = i = void 0;
                    }), "script";
                }), y.createHTMLDocument = ((Vt = E.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Vt.childNodes.length), k.parseHTML = function (e, t, n) {
                    return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (y.createHTMLDocument ? ((r = (t = E.implementation.createHTMLDocument("")).createElement("base")).href = E.location.href, t.head.appendChild(r)) : t = E), o = !n && [], (i = D.exec(e)) ? [t.createElement(i[1])] : (i = we([e], t, o), o && o.length && k(o).remove(), k.merge([], i.childNodes)));
                    var r, i, o;
                }, k.fn.load = function (e, t, n) {
                    var r,
                        i,
                        o,
                        a = this,
                        s = e.indexOf(" ");
                    return -1 < s && (r = mt(e.slice(s)), e = e.slice(0, s)), m(t) ? (n = t, t = void 0) : t && "object" == _typeof(t) && (i = "POST"), 0 < a.length && k.ajax({
                        url: e,
                        type: i || "GET",
                        dataType: "html",
                        data: t
                    }).done(function (e) {
                        o = arguments, a.html(r ? k("<div>").append(k.parseHTML(e)).find(r) : e);
                    }).always(n && function (e, t) {
                        a.each(function () {
                            n.apply(this, o || [e.responseText, t, e]);
                        });
                    }), this;
                }, k.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
                    k.fn[t] = function (e) {
                        return this.on(t, e);
                    };
                }), k.expr.pseudos.animated = function (t) {
                    return k.grep(k.timers, function (e) {
                        return t === e.elem;
                    }).length;
                }, k.offset = {
                    setOffset: function setOffset(e, t, n) {
                        var r,
                            i,
                            o,
                            a,
                            s,
                            u,
                            l = k.css(e, "position"),
                            c = k(e),
                            f = {};
                        "static" === l && (e.style.position = "relative"), s = c.offset(), o = k.css(e, "top"), u = k.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), m(t) && (t = t.call(e, n, k.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : c.css(f);
                    }
                }, k.fn.extend({
                    offset: function offset(t) {
                        if (arguments.length) return void 0 === t ? this : this.each(function (e) {
                            k.offset.setOffset(this, t, e);
                        });
                        var e,
                            n,
                            r = this[0];
                        return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, {
                            top: e.top + n.pageYOffset,
                            left: e.left + n.pageXOffset
                        }) : {
                            top: 0,
                            left: 0
                        } : void 0;
                    },
                    position: function position() {
                        if (this[0]) {
                            var e,
                                t,
                                n,
                                r = this[0],
                                i = {
                                    top: 0,
                                    left: 0
                                };
                            if ("fixed" === k.css(r, "position")) t = r.getBoundingClientRect(); else {
                                t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement;

                                while (e && (e === n.body || e === n.documentElement) && "static" === k.css(e, "position")) {
                                    e = e.parentNode;
                                }

                                e && e !== r && 1 === e.nodeType && ((i = k(e).offset()).top += k.css(e, "borderTopWidth", !0), i.left += k.css(e, "borderLeftWidth", !0));
                            }
                            return {
                                top: t.top - i.top - k.css(r, "marginTop", !0),
                                left: t.left - i.left - k.css(r, "marginLeft", !0)
                            };
                        }
                    },
                    offsetParent: function offsetParent() {
                        return this.map(function () {
                            var e = this.offsetParent;

                            while (e && "static" === k.css(e, "position")) {
                                e = e.offsetParent;
                            }

                            return e || ie;
                        });
                    }
                }), k.each({
                    scrollLeft: "pageXOffset",
                    scrollTop: "pageYOffset"
                }, function (t, i) {
                    var o = "pageYOffset" === i;

                    k.fn[t] = function (e) {
                        return _(this, function (e, t, n) {
                            var r;
                            if (x(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t];
                            r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n;
                        }, t, e, arguments.length);
                    };
                }), k.each(["top", "left"], function (e, n) {
                    k.cssHooks[n] = ze(y.pixelPosition, function (e, t) {
                        if (t) return t = _e(e, n), $e.test(t) ? k(e).position()[n] + "px" : t;
                    });
                }), k.each({
                    Height: "height",
                    Width: "width"
                }, function (a, s) {
                    k.each({
                        padding: "inner" + a,
                        content: s,
                        "": "outer" + a
                    }, function (r, o) {
                        k.fn[o] = function (e, t) {
                            var n = arguments.length && (r || "boolean" != typeof e),
                                i = r || (!0 === e || !0 === t ? "margin" : "border");
                            return _(this, function (e, t, n) {
                                var r;
                                return x(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? k.css(e, t, i) : k.style(e, t, n, i);
                            }, s, n ? e : void 0, n);
                        };
                    });
                }), k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, n) {
                    k.fn[n] = function (e, t) {
                        return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n);
                    };
                }), k.fn.extend({
                    hover: function hover(e, t) {
                        return this.mouseenter(e).mouseleave(t || e);
                    }
                }), k.fn.extend({
                    bind: function bind(e, t, n) {
                        return this.on(e, null, t, n);
                    },
                    unbind: function unbind(e, t) {
                        return this.off(e, null, t);
                    },
                    delegate: function delegate(e, t, n, r) {
                        return this.on(t, e, n, r);
                    },
                    undelegate: function undelegate(e, t, n) {
                        return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
                    }
                }), k.proxy = function (e, t) {
                    var n, r, i;
                    if ("string" == typeof t && (n = e[t], t = e, e = n), m(e)) return r = s.call(arguments, 2), (i = function i() {
                        return e.apply(t || this, r.concat(s.call(arguments)));
                    }).guid = e.guid = e.guid || k.guid++, i;
                }, k.holdReady = function (e) {
                    e ? k.readyWait++ : k.ready(!0);
                }, k.isArray = Array.isArray, k.parseJSON = JSON.parse, k.nodeName = A, k.isFunction = m, k.isWindow = x, k.camelCase = V, k.type = w, k.now = Date.now, k.isNumeric = function (e) {
                    var t = k.type(e);
                    return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
                }, true && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
                    return k;
                }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                var Qt = C.jQuery,
                    Jt = C.$;
                return k.noConflict = function (e) {
                    return C.$ === k && (C.$ = Jt), e && C.jQuery === k && (C.jQuery = Qt), k;
                }, e || (C.jQuery = C.$ = k), k;
            });
            /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

        /***/
    }),

    /***/ "./resources/js/myFiles/select2.min.js":
    /*!*********************************************!*\
  !*** ./resources/js/myFiles/select2.min.js ***!
  \*********************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

        function _typeof(obj) {
            if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                _typeof = function _typeof(obj) {
                    return typeof obj;
                };
            } else {
                _typeof = function _typeof(obj) {
                    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                };
            }
            return _typeof(obj);
        }

        /*! Select2 4.0.7 | https://github.com/select2/select2/blob/master/LICENSE.md */
        !function (a) {
            true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
                __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                    (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
        }(function (a) {
            var b = function () {
                    if (a && a.fn && a.fn.select2 && a.fn.select2.amd) var b = a.fn.select2.amd;
                    var b;
                    return function () {
                        if (!b || !b.requirejs) {
                            b ? c = b : b = {};
                            var a, c, d;
                            !function (b) {
                                function e(a, b) {
                                    return v.call(a, b);
                                }

                                function f(a, b) {
                                    var c,
                                        d,
                                        e,
                                        f,
                                        g,
                                        h,
                                        i,
                                        j,
                                        k,
                                        l,
                                        m,
                                        n,
                                        o = b && b.split("/"),
                                        p = t.map,
                                        q = p && p["*"] || {};

                                    if (a) {
                                        for (a = a.split("/"), g = a.length - 1, t.nodeIdCompat && x.test(a[g]) && (a[g] = a[g].replace(x, "")), "." === a[0].charAt(0) && o && (n = o.slice(0, o.length - 1), a = n.concat(a)), k = 0; k < a.length; k++) {
                                            if ("." === (m = a[k])) a.splice(k, 1), k -= 1; else if (".." === m) {
                                                if (0 === k || 1 === k && ".." === a[2] || ".." === a[k - 1]) continue;
                                                k > 0 && (a.splice(k - 1, 2), k -= 2);
                                            }
                                        }

                                        a = a.join("/");
                                    }

                                    if ((o || q) && p) {
                                        for (c = a.split("/"), k = c.length; k > 0; k -= 1) {
                                            if (d = c.slice(0, k).join("/"), o) for (l = o.length; l > 0; l -= 1) {
                                                if ((e = p[o.slice(0, l).join("/")]) && (e = e[d])) {
                                                    f = e, h = k;
                                                    break;
                                                }
                                            }
                                            if (f) break;
                                            !i && q && q[d] && (i = q[d], j = k);
                                        }

                                        !f && i && (f = i, h = j), f && (c.splice(0, h, f), a = c.join("/"));
                                    }

                                    return a;
                                }

                                function g(a, c) {
                                    return function () {
                                        var d = w.call(arguments, 0);
                                        return "string" != typeof d[0] && 1 === d.length && d.push(null), _o.apply(b, d.concat([a, c]));
                                    };
                                }

                                function h(a) {
                                    return function (b) {
                                        return f(b, a);
                                    };
                                }

                                function i(a) {
                                    return function (b) {
                                        r[a] = b;
                                    };
                                }

                                function j(a) {
                                    if (e(s, a)) {
                                        var c = s[a];
                                        delete s[a], u[a] = !0, n.apply(b, c);
                                    }

                                    if (!e(r, a) && !e(u, a)) throw new Error("No " + a);
                                    return r[a];
                                }

                                function k(a) {
                                    var b,
                                        c = a ? a.indexOf("!") : -1;
                                    return c > -1 && (b = a.substring(0, c), a = a.substring(c + 1, a.length)), [b, a];
                                }

                                function l(a) {
                                    return a ? k(a) : [];
                                }

                                function m(a) {
                                    return function () {
                                        return t && t.config && t.config[a] || {};
                                    };
                                }

                                var n,
                                    _o,
                                    p,
                                    q,
                                    r = {},
                                    s = {},
                                    t = {},
                                    u = {},
                                    v = Object.prototype.hasOwnProperty,
                                    w = [].slice,
                                    x = /\.js$/;

                                p = function p(a, b) {
                                    var c,
                                        d = k(a),
                                        e = d[0],
                                        g = b[1];
                                    return a = d[1], e && (e = f(e, g), c = j(e)), e ? a = c && c.normalize ? c.normalize(a, h(g)) : f(a, g) : (a = f(a, g), d = k(a), e = d[0], a = d[1], e && (c = j(e))), {
                                        f: e ? e + "!" + a : a,
                                        n: a,
                                        pr: e,
                                        p: c
                                    };
                                }, q = {
                                    require: function require(a) {
                                        return g(a);
                                    },
                                    exports: function exports(a) {
                                        var b = r[a];
                                        return void 0 !== b ? b : r[a] = {};
                                    },
                                    module: function module(a) {
                                        return {
                                            id: a,
                                            uri: "",
                                            exports: r[a],
                                            config: m(a)
                                        };
                                    }
                                }, n = function n(a, c, d, f) {
                                    var h,
                                        k,
                                        m,
                                        n,
                                        o,
                                        t,
                                        v,
                                        w = [],
                                        x = _typeof(d);

                                    if (f = f || a, t = l(f), "undefined" === x || "function" === x) {
                                        for (c = !c.length && d.length ? ["require", "exports", "module"] : c, o = 0; o < c.length; o += 1) {
                                            if (n = p(c[o], t), "require" === (k = n.f)) w[o] = q.require(a); else if ("exports" === k) w[o] = q.exports(a), v = !0; else if ("module" === k) h = w[o] = q.module(a); else if (e(r, k) || e(s, k) || e(u, k)) w[o] = j(k); else {
                                                if (!n.p) throw new Error(a + " missing " + k);
                                                n.p.load(n.n, g(f, !0), i(k), {}), w[o] = r[k];
                                            }
                                        }

                                        m = d ? d.apply(r[a], w) : void 0, a && (h && h.exports !== b && h.exports !== r[a] ? r[a] = h.exports : m === b && v || (r[a] = m));
                                    } else a && (r[a] = d);
                                }, a = c = _o = function o(a, c, d, e, f) {
                                    if ("string" == typeof a) return q[a] ? q[a](c) : j(p(a, l(c)).f);

                                    if (!a.splice) {
                                        if (t = a, t.deps && _o(t.deps, t.callback), !c) return;
                                        c.splice ? (a = c, c = d, d = null) : a = b;
                                    }

                                    return c = c || function () {
                                    }, "function" == typeof d && (d = e, e = f), e ? n(b, a, c, d) : setTimeout(function () {
                                        n(b, a, c, d);
                                    }, 4), _o;
                                }, _o.config = function (a) {
                                    return _o(a);
                                }, a._defined = r, d = function d(a, b, c) {
                                    if ("string" != typeof a) throw new Error("See almond README: incorrect module build, no module name");
                                    b.splice || (c = b, b = []), e(r, a) || e(s, a) || (s[a] = [a, b, c]);
                                }, d.amd = {
                                    jQuery: !0
                                };
                            }(), b.requirejs = a, b.require = c, b.define = d;
                        }
                    }(), b.define("almond", function () {
                    }), b.define("jquery", [], function () {
                        var b = a || $;
                        return null == b && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."), b;
                    }), b.define("select2/utils", ["jquery"], function (a) {
                        function b(a) {
                            var b = a.prototype,
                                c = [];

                            for (var d in b) {
                                "function" == typeof b[d] && "constructor" !== d && c.push(d);
                            }

                            return c;
                        }

                        var c = {};
                        c.Extend = function (a, b) {
                            function c() {
                                this.constructor = a;
                            }

                            var d = {}.hasOwnProperty;

                            for (var e in b) {
                                d.call(b, e) && (a[e] = b[e]);
                            }

                            return c.prototype = b.prototype, a.prototype = new c(), a.__super__ = b.prototype, a;
                        }, c.Decorate = function (a, c) {
                            function d() {
                                var b = Array.prototype.unshift,
                                    d = c.prototype.constructor.length,
                                    e = a.prototype.constructor;
                                d > 0 && (b.call(arguments, a.prototype.constructor), e = c.prototype.constructor), e.apply(this, arguments);
                            }

                            function e() {
                                this.constructor = d;
                            }

                            var f = b(c),
                                g = b(a);
                            c.displayName = a.displayName, d.prototype = new e();

                            for (var h = 0; h < g.length; h++) {
                                var i = g[h];
                                d.prototype[i] = a.prototype[i];
                            }

                            for (var j = function j(a) {
                                var b = function b() {
                                };

                                (a in d.prototype) && (b = d.prototype[a]);
                                var e = c.prototype[a];
                                return function () {
                                    return Array.prototype.unshift.call(arguments, b), e.apply(this, arguments);
                                };
                            }, k = 0; k < f.length; k++) {
                                var l = f[k];
                                d.prototype[l] = j(l);
                            }

                            return d;
                        };

                        var d = function d() {
                            this.listeners = {};
                        };

                        d.prototype.on = function (a, b) {
                            this.listeners = this.listeners || {}, a in this.listeners ? this.listeners[a].push(b) : this.listeners[a] = [b];
                        }, d.prototype.trigger = function (a) {
                            var b = Array.prototype.slice,
                                c = b.call(arguments, 1);
                            this.listeners = this.listeners || {}, null == c && (c = []), 0 === c.length && c.push({}), c[0]._type = a, a in this.listeners && this.invoke(this.listeners[a], b.call(arguments, 1)), "*" in this.listeners && this.invoke(this.listeners["*"], arguments);
                        }, d.prototype.invoke = function (a, b) {
                            for (var c = 0, d = a.length; c < d; c++) {
                                a[c].apply(this, b);
                            }
                        }, c.Observable = d, c.generateChars = function (a) {
                            for (var b = "", c = 0; c < a; c++) {
                                b += Math.floor(36 * Math.random()).toString(36);
                            }

                            return b;
                        }, c.bind = function (a, b) {
                            return function () {
                                a.apply(b, arguments);
                            };
                        }, c._convertData = function (a) {
                            for (var b in a) {
                                var c = b.split("-"),
                                    d = a;

                                if (1 !== c.length) {
                                    for (var e = 0; e < c.length; e++) {
                                        var f = c[e];
                                        f = f.substring(0, 1).toLowerCase() + f.substring(1), f in d || (d[f] = {}), e == c.length - 1 && (d[f] = a[b]), d = d[f];
                                    }

                                    delete a[b];
                                }
                            }

                            return a;
                        }, c.hasScroll = function (b, c) {
                            var d = a(c),
                                e = c.style.overflowX,
                                f = c.style.overflowY;
                            return (e !== f || "hidden" !== f && "visible" !== f) && ("scroll" === e || "scroll" === f || d.innerHeight() < c.scrollHeight || d.innerWidth() < c.scrollWidth);
                        }, c.escapeMarkup = function (a) {
                            var b = {
                                "\\": "&#92;",
                                "&": "&amp;",
                                "<": "&lt;",
                                ">": "&gt;",
                                '"': "&quot;",
                                "'": "&#39;",
                                "/": "&#47;"
                            };
                            return "string" != typeof a ? a : String(a).replace(/[&<>"'\/\\]/g, function (a) {
                                return b[a];
                            });
                        }, c.appendMany = function (b, c) {
                            if ("1.7" === a.fn.jquery.substr(0, 3)) {
                                var d = a();
                                a.map(c, function (a) {
                                    d = d.add(a);
                                }), c = d;
                            }

                            b.append(c);
                        }, c.__cache = {};
                        var e = 0;
                        return c.GetUniqueElementId = function (a) {
                            var b = a.getAttribute("data-select2-id");
                            return null == b && (a.id ? (b = a.id, a.setAttribute("data-select2-id", b)) : (a.setAttribute("data-select2-id", ++e), b = e.toString())), b;
                        }, c.StoreData = function (a, b, d) {
                            var e = c.GetUniqueElementId(a);
                            c.__cache[e] || (c.__cache[e] = {}), c.__cache[e][b] = d;
                        }, c.GetData = function (b, d) {
                            var e = c.GetUniqueElementId(b);
                            return d ? c.__cache[e] && null != c.__cache[e][d] ? c.__cache[e][d] : a(b).data(d) : c.__cache[e];
                        }, c.RemoveData = function (a) {
                            var b = c.GetUniqueElementId(a);
                            null != c.__cache[b] && delete c.__cache[b];
                        }, c;
                    }), b.define("select2/results", ["jquery", "./utils"], function (a, b) {
                        function c(a, b, d) {
                            this.$element = a, this.data = d, this.options = b, c.__super__.constructor.call(this);
                        }

                        return b.Extend(c, b.Observable), c.prototype.render = function () {
                            var b = a('<ul class="select2-results__options" role="tree"></ul>');
                            return this.options.get("multiple") && b.attr("aria-multiselectable", "true"), this.$results = b, b;
                        }, c.prototype.clear = function () {
                            this.$results.empty();
                        }, c.prototype.displayMessage = function (b) {
                            var c = this.options.get("escapeMarkup");
                            this.clear(), this.hideLoading();
                            var d = a('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>'),
                                e = this.options.get("translations").get(b.message);
                            d.append(c(e(b.args))), d[0].className += " select2-results__message", this.$results.append(d);
                        }, c.prototype.hideMessages = function () {
                            this.$results.find(".select2-results__message").remove();
                        }, c.prototype.append = function (a) {
                            this.hideLoading();
                            var b = [];
                            if (null == a.results || 0 === a.results.length) return void (0 === this.$results.children().length && this.trigger("results:message", {
                                message: "noResults"
                            }));
                            a.results = this.sort(a.results);

                            for (var c = 0; c < a.results.length; c++) {
                                var d = a.results[c],
                                    e = this.option(d);
                                b.push(e);
                            }

                            this.$results.append(b);
                        }, c.prototype.position = function (a, b) {
                            b.find(".select2-results").append(a);
                        }, c.prototype.sort = function (a) {
                            return this.options.get("sorter")(a);
                        }, c.prototype.highlightFirstItem = function () {
                            var a = this.$results.find(".select2-results__option[aria-selected]"),
                                b = a.filter("[aria-selected=true]");
                            b.length > 0 ? b.first().trigger("mouseenter") : a.first().trigger("mouseenter"), this.ensureHighlightVisible();
                        }, c.prototype.setClasses = function () {
                            var c = this;
                            this.data.current(function (d) {
                                var e = a.map(d, function (a) {
                                    return a.id.toString();
                                });
                                c.$results.find(".select2-results__option[aria-selected]").each(function () {
                                    var c = a(this),
                                        d = b.GetData(this, "data"),
                                        f = "" + d.id;
                                    null != d.element && d.element.selected || null == d.element && a.inArray(f, e) > -1 ? c.attr("aria-selected", "true") : c.attr("aria-selected", "false");
                                });
                            });
                        }, c.prototype.showLoading = function (a) {
                            this.hideLoading();
                            var b = this.options.get("translations").get("searching"),
                                c = {
                                    disabled: !0,
                                    loading: !0,
                                    text: b(a)
                                },
                                d = this.option(c);
                            d.className += " loading-results", this.$results.prepend(d);
                        }, c.prototype.hideLoading = function () {
                            this.$results.find(".loading-results").remove();
                        }, c.prototype.option = function (c) {
                            var d = document.createElement("li");
                            d.className = "select2-results__option";
                            var e = {
                                role: "treeitem",
                                "aria-selected": "false"
                            };
                            c.disabled && (delete e["aria-selected"], e["aria-disabled"] = "true"), null == c.id && delete e["aria-selected"], null != c._resultId && (d.id = c._resultId), c.title && (d.title = c.title), c.children && (e.role = "group", e["aria-label"] = c.text, delete e["aria-selected"]);

                            for (var f in e) {
                                var g = e[f];
                                d.setAttribute(f, g);
                            }

                            if (c.children) {
                                var h = a(d),
                                    i = document.createElement("strong");
                                i.className = "select2-results__group";
                                a(i);
                                this.template(c, i);

                                for (var j = [], k = 0; k < c.children.length; k++) {
                                    var l = c.children[k],
                                        m = this.option(l);
                                    j.push(m);
                                }

                                var n = a("<ul></ul>", {
                                    "class": "select2-results__options select2-results__options--nested"
                                });
                                n.append(j), h.append(i), h.append(n);
                            } else this.template(c, d);

                            return b.StoreData(d, "data", c), d;
                        }, c.prototype.bind = function (c, d) {
                            var e = this,
                                f = c.id + "-results";
                            this.$results.attr("id", f), c.on("results:all", function (a) {
                                e.clear(), e.append(a.data), c.isOpen() && (e.setClasses(), e.highlightFirstItem());
                            }), c.on("results:append", function (a) {
                                e.append(a.data), c.isOpen() && e.setClasses();
                            }), c.on("query", function (a) {
                                e.hideMessages(), e.showLoading(a);
                            }), c.on("select", function () {
                                c.isOpen() && (e.setClasses(), e.options.get("scrollAfterSelect") && e.highlightFirstItem());
                            }), c.on("unselect", function () {
                                c.isOpen() && (e.setClasses(), e.options.get("scrollAfterSelect") && e.highlightFirstItem());
                            }), c.on("open", function () {
                                e.$results.attr("aria-expanded", "true"), e.$results.attr("aria-hidden", "false"), e.setClasses(), e.ensureHighlightVisible();
                            }), c.on("close", function () {
                                e.$results.attr("aria-expanded", "false"), e.$results.attr("aria-hidden", "true"), e.$results.removeAttr("aria-activedescendant");
                            }), c.on("results:toggle", function () {
                                var a = e.getHighlightedResults();
                                0 !== a.length && a.trigger("mouseup");
                            }), c.on("results:select", function () {
                                var a = e.getHighlightedResults();

                                if (0 !== a.length) {
                                    var c = b.GetData(a[0], "data");
                                    "true" == a.attr("aria-selected") ? e.trigger("close", {}) : e.trigger("select", {
                                        data: c
                                    });
                                }
                            }), c.on("results:previous", function () {
                                var a = e.getHighlightedResults(),
                                    b = e.$results.find("[aria-selected]"),
                                    c = b.index(a);

                                if (!(c <= 0)) {
                                    var d = c - 1;
                                    0 === a.length && (d = 0);
                                    var f = b.eq(d);
                                    f.trigger("mouseenter");
                                    var g = e.$results.offset().top,
                                        h = f.offset().top,
                                        i = e.$results.scrollTop() + (h - g);
                                    0 === d ? e.$results.scrollTop(0) : h - g < 0 && e.$results.scrollTop(i);
                                }
                            }), c.on("results:next", function () {
                                var a = e.getHighlightedResults(),
                                    b = e.$results.find("[aria-selected]"),
                                    c = b.index(a),
                                    d = c + 1;

                                if (!(d >= b.length)) {
                                    var f = b.eq(d);
                                    f.trigger("mouseenter");
                                    var g = e.$results.offset().top + e.$results.outerHeight(!1),
                                        h = f.offset().top + f.outerHeight(!1),
                                        i = e.$results.scrollTop() + h - g;
                                    0 === d ? e.$results.scrollTop(0) : h > g && e.$results.scrollTop(i);
                                }
                            }), c.on("results:focus", function (a) {
                                a.element.addClass("select2-results__option--highlighted");
                            }), c.on("results:message", function (a) {
                                e.displayMessage(a);
                            }), a.fn.mousewheel && this.$results.on("mousewheel", function (a) {
                                var b = e.$results.scrollTop(),
                                    c = e.$results.get(0).scrollHeight - b + a.deltaY,
                                    d = a.deltaY > 0 && b - a.deltaY <= 0,
                                    f = a.deltaY < 0 && c <= e.$results.height();
                                d ? (e.$results.scrollTop(0), a.preventDefault(), a.stopPropagation()) : f && (e.$results.scrollTop(e.$results.get(0).scrollHeight - e.$results.height()), a.preventDefault(), a.stopPropagation());
                            }), this.$results.on("mouseup", ".select2-results__option[aria-selected]", function (c) {
                                var d = a(this),
                                    f = b.GetData(this, "data");
                                if ("true" === d.attr("aria-selected")) return void (e.options.get("multiple") ? e.trigger("unselect", {
                                    originalEvent: c,
                                    data: f
                                }) : e.trigger("close", {}));
                                e.trigger("select", {
                                    originalEvent: c,
                                    data: f
                                });
                            }), this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function (c) {
                                var d = b.GetData(this, "data");
                                e.getHighlightedResults().removeClass("select2-results__option--highlighted"), e.trigger("results:focus", {
                                    data: d,
                                    element: a(this)
                                });
                            });
                        }, c.prototype.getHighlightedResults = function () {
                            return this.$results.find(".select2-results__option--highlighted");
                        }, c.prototype.destroy = function () {
                            this.$results.remove();
                        }, c.prototype.ensureHighlightVisible = function () {
                            var a = this.getHighlightedResults();

                            if (0 !== a.length) {
                                var b = this.$results.find("[aria-selected]"),
                                    c = b.index(a),
                                    d = this.$results.offset().top,
                                    e = a.offset().top,
                                    f = this.$results.scrollTop() + (e - d),
                                    g = e - d;
                                f -= 2 * a.outerHeight(!1), c <= 2 ? this.$results.scrollTop(0) : (g > this.$results.outerHeight() || g < 0) && this.$results.scrollTop(f);
                            }
                        }, c.prototype.template = function (b, c) {
                            var d = this.options.get("templateResult"),
                                e = this.options.get("escapeMarkup"),
                                f = d(b, c);
                            null == f ? c.style.display = "none" : "string" == typeof f ? c.innerHTML = e(f) : a(c).append(f);
                        }, c;
                    }), b.define("select2/keys", [], function () {
                        return {
                            BACKSPACE: 8,
                            TAB: 9,
                            ENTER: 13,
                            SHIFT: 16,
                            CTRL: 17,
                            ALT: 18,
                            ESC: 27,
                            SPACE: 32,
                            PAGE_UP: 33,
                            PAGE_DOWN: 34,
                            END: 35,
                            HOME: 36,
                            LEFT: 37,
                            UP: 38,
                            RIGHT: 39,
                            DOWN: 40,
                            DELETE: 46
                        };
                    }), b.define("select2/selection/base", ["jquery", "../utils", "../keys"], function (a, b, c) {
                        function d(a, b) {
                            this.$element = a, this.options = b, d.__super__.constructor.call(this);
                        }

                        return b.Extend(d, b.Observable), d.prototype.render = function () {
                            var c = a('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
                            return this._tabindex = 0, null != b.GetData(this.$element[0], "old-tabindex") ? this._tabindex = b.GetData(this.$element[0], "old-tabindex") : null != this.$element.attr("tabindex") && (this._tabindex = this.$element.attr("tabindex")), c.attr("title", this.$element.attr("title")), c.attr("tabindex", this._tabindex), this.$selection = c, c;
                        }, d.prototype.bind = function (a, b) {
                            var d = this,
                                e = (a.id, a.id + "-results");
                            this.container = a, this.$selection.on("focus", function (a) {
                                d.trigger("focus", a);
                            }), this.$selection.on("blur", function (a) {
                                d._handleBlur(a);
                            }), this.$selection.on("keydown", function (a) {
                                d.trigger("keypress", a), a.which === c.SPACE && a.preventDefault();
                            }), a.on("results:focus", function (a) {
                                d.$selection.attr("aria-activedescendant", a.data._resultId);
                            }), a.on("selection:update", function (a) {
                                d.update(a.data);
                            }), a.on("open", function () {
                                d.$selection.attr("aria-expanded", "true"), d.$selection.attr("aria-owns", e), d._attachCloseHandler(a);
                            }), a.on("close", function () {
                                d.$selection.attr("aria-expanded", "false"), d.$selection.removeAttr("aria-activedescendant"), d.$selection.removeAttr("aria-owns"), window.setTimeout(function () {
                                    d.$selection.focus();
                                }, 0), d._detachCloseHandler(a);
                            }), a.on("enable", function () {
                                d.$selection.attr("tabindex", d._tabindex);
                            }), a.on("disable", function () {
                                d.$selection.attr("tabindex", "-1");
                            });
                        }, d.prototype._handleBlur = function (b) {
                            var c = this;
                            window.setTimeout(function () {
                                document.activeElement == c.$selection[0] || a.contains(c.$selection[0], document.activeElement) || c.trigger("blur", b);
                            }, 1);
                        }, d.prototype._attachCloseHandler = function (c) {
                            a(document.body).on("mousedown.select2." + c.id, function (c) {
                                var d = a(c.target),
                                    e = d.closest(".select2");
                                a(".select2.select2-container--open").each(function () {
                                    a(this), this != e[0] && b.GetData(this, "element").select2("close");
                                });
                            });
                        }, d.prototype._detachCloseHandler = function (b) {
                            a(document.body).off("mousedown.select2." + b.id);
                        }, d.prototype.position = function (a, b) {
                            b.find(".selection").append(a);
                        }, d.prototype.destroy = function () {
                            this._detachCloseHandler(this.container);
                        }, d.prototype.update = function (a) {
                            throw new Error("The `update` method must be defined in child classes.");
                        }, d;
                    }), b.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function (a, b, c, d) {
                        function e() {
                            e.__super__.constructor.apply(this, arguments);
                        }

                        return c.Extend(e, b), e.prototype.render = function () {
                            var a = e.__super__.render.call(this);

                            return a.addClass("select2-selection--single"), a.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'), a;
                        }, e.prototype.bind = function (a, b) {
                            var c = this;

                            e.__super__.bind.apply(this, arguments);

                            var d = a.id + "-container";
                            this.$selection.find(".select2-selection__rendered").attr("id", d).attr("role", "textbox").attr("aria-readonly", "true"), this.$selection.attr("aria-labelledby", d), this.$selection.on("mousedown", function (a) {
                                1 === a.which && c.trigger("toggle", {
                                    originalEvent: a
                                });
                            }), this.$selection.on("focus", function (a) {
                            }), this.$selection.on("blur", function (a) {
                            }), a.on("focus", function (b) {
                                a.isOpen() || c.$selection.focus();
                            });
                        }, e.prototype.clear = function () {
                            var a = this.$selection.find(".select2-selection__rendered");
                            a.empty(), a.removeAttr("title");
                        }, e.prototype.display = function (a, b) {
                            var c = this.options.get("templateSelection");
                            return this.options.get("escapeMarkup")(c(a, b));
                        }, e.prototype.selectionContainer = function () {
                            return a("<span></span>");
                        }, e.prototype.update = function (a) {
                            if (0 === a.length) return void this.clear();
                            var b = a[0],
                                c = this.$selection.find(".select2-selection__rendered"),
                                d = this.display(b, c);
                            c.empty().append(d), c.attr("title", b.title || b.text);
                        }, e;
                    }), b.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function (a, b, c) {
                        function d(a, b) {
                            d.__super__.constructor.apply(this, arguments);
                        }

                        return c.Extend(d, b), d.prototype.render = function () {
                            var a = d.__super__.render.call(this);

                            return a.addClass("select2-selection--multiple"), a.html('<ul class="select2-selection__rendered"></ul>'), a;
                        }, d.prototype.bind = function (b, e) {
                            var f = this;
                            d.__super__.bind.apply(this, arguments), this.$selection.on("click", function (a) {
                                f.trigger("toggle", {
                                    originalEvent: a
                                });
                            }), this.$selection.on("click", ".select2-selection__choice__remove", function (b) {
                                if (!f.options.get("disabled")) {
                                    var d = a(this),
                                        e = d.parent(),
                                        g = c.GetData(e[0], "data");
                                    f.trigger("unselect", {
                                        originalEvent: b,
                                        data: g
                                    });
                                }
                            });
                        }, d.prototype.clear = function () {
                            var a = this.$selection.find(".select2-selection__rendered");
                            a.empty(), a.removeAttr("title");
                        }, d.prototype.display = function (a, b) {
                            var c = this.options.get("templateSelection");
                            return this.options.get("escapeMarkup")(c(a, b));
                        }, d.prototype.selectionContainer = function () {
                            return a('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');
                        }, d.prototype.update = function (a) {
                            if (this.clear(), 0 !== a.length) {
                                for (var b = [], d = 0; d < a.length; d++) {
                                    var e = a[d],
                                        f = this.selectionContainer(),
                                        g = this.display(e, f);
                                    f.append(g), f.attr("title", e.title || e.text), c.StoreData(f[0], "data", e), b.push(f);
                                }

                                var h = this.$selection.find(".select2-selection__rendered");
                                c.appendMany(h, b);
                            }
                        }, d;
                    }), b.define("select2/selection/placeholder", ["../utils"], function (a) {
                        function b(a, b, c) {
                            this.placeholder = this.normalizePlaceholder(c.get("placeholder")), a.call(this, b, c);
                        }

                        return b.prototype.normalizePlaceholder = function (a, b) {
                            return "string" == typeof b && (b = {
                                id: "",
                                text: b
                            }), b;
                        }, b.prototype.createPlaceholder = function (a, b) {
                            var c = this.selectionContainer();
                            return c.html(this.display(b)), c.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"), c;
                        }, b.prototype.update = function (a, b) {
                            var c = 1 == b.length && b[0].id != this.placeholder.id;
                            if (b.length > 1 || c) return a.call(this, b);
                            this.clear();
                            var d = this.createPlaceholder(this.placeholder);
                            this.$selection.find(".select2-selection__rendered").append(d);
                        }, b;
                    }), b.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function (a, b, c) {
                        function d() {
                        }

                        return d.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c), null == this.placeholder && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."), this.$selection.on("mousedown", ".select2-selection__clear", function (a) {
                                d._handleClear(a);
                            }), b.on("keypress", function (a) {
                                d._handleKeyboardClear(a, b);
                            });
                        }, d.prototype._handleClear = function (a, b) {
                            if (!this.options.get("disabled")) {
                                var d = this.$selection.find(".select2-selection__clear");

                                if (0 !== d.length) {
                                    b.stopPropagation();
                                    var e = c.GetData(d[0], "data"),
                                        f = this.$element.val();
                                    this.$element.val(this.placeholder.id);
                                    var g = {
                                        data: e
                                    };
                                    if (this.trigger("clear", g), g.prevented) return void this.$element.val(f);

                                    for (var h = 0; h < e.length; h++) {
                                        if (g = {
                                            data: e[h]
                                        }, this.trigger("unselect", g), g.prevented) return void this.$element.val(f);
                                    }

                                    this.$element.trigger("change"), this.trigger("toggle", {});
                                }
                            }
                        }, d.prototype._handleKeyboardClear = function (a, c, d) {
                            d.isOpen() || c.which != b.DELETE && c.which != b.BACKSPACE || this._handleClear(c);
                        }, d.prototype.update = function (b, d) {
                            if (b.call(this, d), !(this.$selection.find(".select2-selection__placeholder").length > 0 || 0 === d.length)) {
                                var e = this.options.get("translations").get("removeAllItems"),
                                    f = a('<span class="select2-selection__clear" title="' + e() + '">&times;</span>');
                                c.StoreData(f[0], "data", d), this.$selection.find(".select2-selection__rendered").prepend(f);
                            }
                        }, d;
                    }), b.define("select2/selection/search", ["jquery", "../utils", "../keys"], function (a, b, c) {
                        function d(a, b, c) {
                            a.call(this, b, c);
                        }

                        return d.prototype.render = function (b) {
                            var c = a('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>');
                            this.$searchContainer = c, this.$search = c.find("input");
                            var d = b.call(this);
                            return this._transferTabIndex(), d;
                        }, d.prototype.bind = function (a, d, e) {
                            var f = this;
                            a.call(this, d, e), d.on("open", function () {
                                f.$search.trigger("focus");
                            }), d.on("close", function () {
                                f.$search.val(""), f.$search.removeAttr("aria-activedescendant"), f.$search.trigger("focus");
                            }), d.on("enable", function () {
                                f.$search.prop("disabled", !1), f._transferTabIndex();
                            }), d.on("disable", function () {
                                f.$search.prop("disabled", !0);
                            }), d.on("focus", function (a) {
                                f.$search.trigger("focus");
                            }), d.on("results:focus", function (a) {
                                f.$search.attr("aria-activedescendant", a.id);
                            }), this.$selection.on("focusin", ".select2-search--inline", function (a) {
                                f.trigger("focus", a);
                            }), this.$selection.on("focusout", ".select2-search--inline", function (a) {
                                f._handleBlur(a);
                            }), this.$selection.on("keydown", ".select2-search--inline", function (a) {
                                if (a.stopPropagation(), f.trigger("keypress", a), f._keyUpPrevented = a.isDefaultPrevented(), a.which === c.BACKSPACE && "" === f.$search.val()) {
                                    var d = f.$searchContainer.prev(".select2-selection__choice");

                                    if (d.length > 0) {
                                        var e = b.GetData(d[0], "data");
                                        f.searchRemoveChoice(e), a.preventDefault();
                                    }
                                }
                            });
                            var g = document.documentMode,
                                h = g && g <= 11;
                            this.$selection.on("input.searchcheck", ".select2-search--inline", function (a) {
                                if (h) return void f.$selection.off("input.search input.searchcheck");
                                f.$selection.off("keyup.search");
                            }), this.$selection.on("keyup.search input.search", ".select2-search--inline", function (a) {
                                if (h && "input" === a.type) return void f.$selection.off("input.search input.searchcheck");
                                var b = a.which;
                                b != c.SHIFT && b != c.CTRL && b != c.ALT && b != c.TAB && f.handleSearch(a);
                            });
                        }, d.prototype._transferTabIndex = function (a) {
                            this.$search.attr("tabindex", this.$selection.attr("tabindex")), this.$selection.attr("tabindex", "-1");
                        }, d.prototype.createPlaceholder = function (a, b) {
                            this.$search.attr("placeholder", b.text);
                        }, d.prototype.update = function (a, b) {
                            var c = this.$search[0] == document.activeElement;

                            if (this.$search.attr("placeholder", ""), a.call(this, b), this.$selection.find(".select2-selection__rendered").append(this.$searchContainer), this.resizeSearch(), c) {
                                this.$element.find("[data-select2-tag]").length ? this.$element.focus() : this.$search.focus();
                            }
                        }, d.prototype.handleSearch = function () {
                            if (this.resizeSearch(), !this._keyUpPrevented) {
                                var a = this.$search.val();
                                this.trigger("query", {
                                    term: a
                                });
                            }

                            this._keyUpPrevented = !1;
                        }, d.prototype.searchRemoveChoice = function (a, b) {
                            this.trigger("unselect", {
                                data: b
                            }), this.$search.val(b.text), this.handleSearch();
                        }, d.prototype.resizeSearch = function () {
                            this.$search.css("width", "25px");
                            var a = "";
                            if ("" !== this.$search.attr("placeholder")) a = this.$selection.find(".select2-selection__rendered").innerWidth(); else {
                                a = .75 * (this.$search.val().length + 1) + "em";
                            }
                            this.$search.css("width", a);
                        }, d;
                    }), b.define("select2/selection/eventRelay", ["jquery"], function (a) {
                        function b() {
                        }

                        return b.prototype.bind = function (b, c, d) {
                            var e = this,
                                f = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"],
                                g = ["opening", "closing", "selecting", "unselecting", "clearing"];
                            b.call(this, c, d), c.on("*", function (b, c) {
                                if (-1 !== a.inArray(b, f)) {
                                    c = c || {};
                                    var d = a.Event("select2:" + b, {
                                        params: c
                                    });
                                    e.$element.trigger(d), -1 !== a.inArray(b, g) && (c.prevented = d.isDefaultPrevented());
                                }
                            });
                        }, b;
                    }), b.define("select2/translation", ["jquery", "require"], function (a, b) {
                        function c(a) {
                            this.dict = a || {};
                        }

                        return c.prototype.all = function () {
                            return this.dict;
                        }, c.prototype.get = function (a) {
                            return this.dict[a];
                        }, c.prototype.extend = function (b) {
                            this.dict = a.extend({}, b.all(), this.dict);
                        }, c._cache = {}, c.loadPath = function (a) {
                            if (!(a in c._cache)) {
                                var d = b(a);
                                c._cache[a] = d;
                            }

                            return new c(c._cache[a]);
                        }, c;
                    }), b.define("select2/diacritics", [], function () {
                        return {
                            "Ⓐ": "A",
                            "Ａ": "A",
                            "À": "A",
                            "Á": "A",
                            "Â": "A",
                            "Ầ": "A",
                            "Ấ": "A",
                            "Ẫ": "A",
                            "Ẩ": "A",
                            "Ã": "A",
                            "Ā": "A",
                            "Ă": "A",
                            "Ằ": "A",
                            "Ắ": "A",
                            "Ẵ": "A",
                            "Ẳ": "A",
                            "Ȧ": "A",
                            "Ǡ": "A",
                            "Ä": "A",
                            "Ǟ": "A",
                            "Ả": "A",
                            "Å": "A",
                            "Ǻ": "A",
                            "Ǎ": "A",
                            "Ȁ": "A",
                            "Ȃ": "A",
                            "Ạ": "A",
                            "Ậ": "A",
                            "Ặ": "A",
                            "Ḁ": "A",
                            "Ą": "A",
                            "Ⱥ": "A",
                            "Ɐ": "A",
                            "Ꜳ": "AA",
                            "Æ": "AE",
                            "Ǽ": "AE",
                            "Ǣ": "AE",
                            "Ꜵ": "AO",
                            "Ꜷ": "AU",
                            "Ꜹ": "AV",
                            "Ꜻ": "AV",
                            "Ꜽ": "AY",
                            "Ⓑ": "B",
                            "Ｂ": "B",
                            "Ḃ": "B",
                            "Ḅ": "B",
                            "Ḇ": "B",
                            "Ƀ": "B",
                            "Ƃ": "B",
                            "Ɓ": "B",
                            "Ⓒ": "C",
                            "Ｃ": "C",
                            "Ć": "C",
                            "Ĉ": "C",
                            "Ċ": "C",
                            "Č": "C",
                            "Ç": "C",
                            "Ḉ": "C",
                            "Ƈ": "C",
                            "Ȼ": "C",
                            "Ꜿ": "C",
                            "Ⓓ": "D",
                            "Ｄ": "D",
                            "Ḋ": "D",
                            "Ď": "D",
                            "Ḍ": "D",
                            "Ḑ": "D",
                            "Ḓ": "D",
                            "Ḏ": "D",
                            "Đ": "D",
                            "Ƌ": "D",
                            "Ɗ": "D",
                            "Ɖ": "D",
                            "Ꝺ": "D",
                            "Ǳ": "DZ",
                            "Ǆ": "DZ",
                            "ǲ": "Dz",
                            "ǅ": "Dz",
                            "Ⓔ": "E",
                            "Ｅ": "E",
                            "È": "E",
                            "É": "E",
                            "Ê": "E",
                            "Ề": "E",
                            "Ế": "E",
                            "Ễ": "E",
                            "Ể": "E",
                            "Ẽ": "E",
                            "Ē": "E",
                            "Ḕ": "E",
                            "Ḗ": "E",
                            "Ĕ": "E",
                            "Ė": "E",
                            "Ë": "E",
                            "Ẻ": "E",
                            "Ě": "E",
                            "Ȅ": "E",
                            "Ȇ": "E",
                            "Ẹ": "E",
                            "Ệ": "E",
                            "Ȩ": "E",
                            "Ḝ": "E",
                            "Ę": "E",
                            "Ḙ": "E",
                            "Ḛ": "E",
                            "Ɛ": "E",
                            "Ǝ": "E",
                            "Ⓕ": "F",
                            "Ｆ": "F",
                            "Ḟ": "F",
                            "Ƒ": "F",
                            "Ꝼ": "F",
                            "Ⓖ": "G",
                            "Ｇ": "G",
                            "Ǵ": "G",
                            "Ĝ": "G",
                            "Ḡ": "G",
                            "Ğ": "G",
                            "Ġ": "G",
                            "Ǧ": "G",
                            "Ģ": "G",
                            "Ǥ": "G",
                            "Ɠ": "G",
                            "Ꞡ": "G",
                            "Ᵹ": "G",
                            "Ꝿ": "G",
                            "Ⓗ": "H",
                            "Ｈ": "H",
                            "Ĥ": "H",
                            "Ḣ": "H",
                            "Ḧ": "H",
                            "Ȟ": "H",
                            "Ḥ": "H",
                            "Ḩ": "H",
                            "Ḫ": "H",
                            "Ħ": "H",
                            "Ⱨ": "H",
                            "Ⱶ": "H",
                            "Ɥ": "H",
                            "Ⓘ": "I",
                            "Ｉ": "I",
                            "Ì": "I",
                            "Í": "I",
                            "Î": "I",
                            "Ĩ": "I",
                            "Ī": "I",
                            "Ĭ": "I",
                            "İ": "I",
                            "Ï": "I",
                            "Ḯ": "I",
                            "Ỉ": "I",
                            "Ǐ": "I",
                            "Ȉ": "I",
                            "Ȋ": "I",
                            "Ị": "I",
                            "Į": "I",
                            "Ḭ": "I",
                            "Ɨ": "I",
                            "Ⓙ": "J",
                            "Ｊ": "J",
                            "Ĵ": "J",
                            "Ɉ": "J",
                            "Ⓚ": "K",
                            "Ｋ": "K",
                            "Ḱ": "K",
                            "Ǩ": "K",
                            "Ḳ": "K",
                            "Ķ": "K",
                            "Ḵ": "K",
                            "Ƙ": "K",
                            "Ⱪ": "K",
                            "Ꝁ": "K",
                            "Ꝃ": "K",
                            "Ꝅ": "K",
                            "Ꞣ": "K",
                            "Ⓛ": "L",
                            "Ｌ": "L",
                            "Ŀ": "L",
                            "Ĺ": "L",
                            "Ľ": "L",
                            "Ḷ": "L",
                            "Ḹ": "L",
                            "Ļ": "L",
                            "Ḽ": "L",
                            "Ḻ": "L",
                            "Ł": "L",
                            "Ƚ": "L",
                            "Ɫ": "L",
                            "Ⱡ": "L",
                            "Ꝉ": "L",
                            "Ꝇ": "L",
                            "Ꞁ": "L",
                            "Ǉ": "LJ",
                            "ǈ": "Lj",
                            "Ⓜ": "M",
                            "Ｍ": "M",
                            "Ḿ": "M",
                            "Ṁ": "M",
                            "Ṃ": "M",
                            "Ɱ": "M",
                            "Ɯ": "M",
                            "Ⓝ": "N",
                            "Ｎ": "N",
                            "Ǹ": "N",
                            "Ń": "N",
                            "Ñ": "N",
                            "Ṅ": "N",
                            "Ň": "N",
                            "Ṇ": "N",
                            "Ņ": "N",
                            "Ṋ": "N",
                            "Ṉ": "N",
                            "Ƞ": "N",
                            "Ɲ": "N",
                            "Ꞑ": "N",
                            "Ꞥ": "N",
                            "Ǌ": "NJ",
                            "ǋ": "Nj",
                            "Ⓞ": "O",
                            "Ｏ": "O",
                            "Ò": "O",
                            "Ó": "O",
                            "Ô": "O",
                            "Ồ": "O",
                            "Ố": "O",
                            "Ỗ": "O",
                            "Ổ": "O",
                            "Õ": "O",
                            "Ṍ": "O",
                            "Ȭ": "O",
                            "Ṏ": "O",
                            "Ō": "O",
                            "Ṑ": "O",
                            "Ṓ": "O",
                            "Ŏ": "O",
                            "Ȯ": "O",
                            "Ȱ": "O",
                            "Ö": "O",
                            "Ȫ": "O",
                            "Ỏ": "O",
                            "Ő": "O",
                            "Ǒ": "O",
                            "Ȍ": "O",
                            "Ȏ": "O",
                            "Ơ": "O",
                            "Ờ": "O",
                            "Ớ": "O",
                            "Ỡ": "O",
                            "Ở": "O",
                            "Ợ": "O",
                            "Ọ": "O",
                            "Ộ": "O",
                            "Ǫ": "O",
                            "Ǭ": "O",
                            "Ø": "O",
                            "Ǿ": "O",
                            "Ɔ": "O",
                            "Ɵ": "O",
                            "Ꝋ": "O",
                            "Ꝍ": "O",
                            "Œ": "OE",
                            "Ƣ": "OI",
                            "Ꝏ": "OO",
                            "Ȣ": "OU",
                            "Ⓟ": "P",
                            "Ｐ": "P",
                            "Ṕ": "P",
                            "Ṗ": "P",
                            "Ƥ": "P",
                            "Ᵽ": "P",
                            "Ꝑ": "P",
                            "Ꝓ": "P",
                            "Ꝕ": "P",
                            "Ⓠ": "Q",
                            "Ｑ": "Q",
                            "Ꝗ": "Q",
                            "Ꝙ": "Q",
                            "Ɋ": "Q",
                            "Ⓡ": "R",
                            "Ｒ": "R",
                            "Ŕ": "R",
                            "Ṙ": "R",
                            "Ř": "R",
                            "Ȑ": "R",
                            "Ȓ": "R",
                            "Ṛ": "R",
                            "Ṝ": "R",
                            "Ŗ": "R",
                            "Ṟ": "R",
                            "Ɍ": "R",
                            "Ɽ": "R",
                            "Ꝛ": "R",
                            "Ꞧ": "R",
                            "Ꞃ": "R",
                            "Ⓢ": "S",
                            "Ｓ": "S",
                            "ẞ": "S",
                            "Ś": "S",
                            "Ṥ": "S",
                            "Ŝ": "S",
                            "Ṡ": "S",
                            "Š": "S",
                            "Ṧ": "S",
                            "Ṣ": "S",
                            "Ṩ": "S",
                            "Ș": "S",
                            "Ş": "S",
                            "Ȿ": "S",
                            "Ꞩ": "S",
                            "Ꞅ": "S",
                            "Ⓣ": "T",
                            "Ｔ": "T",
                            "Ṫ": "T",
                            "Ť": "T",
                            "Ṭ": "T",
                            "Ț": "T",
                            "Ţ": "T",
                            "Ṱ": "T",
                            "Ṯ": "T",
                            "Ŧ": "T",
                            "Ƭ": "T",
                            "Ʈ": "T",
                            "Ⱦ": "T",
                            "Ꞇ": "T",
                            "Ꜩ": "TZ",
                            "Ⓤ": "U",
                            "Ｕ": "U",
                            "Ù": "U",
                            "Ú": "U",
                            "Û": "U",
                            "Ũ": "U",
                            "Ṹ": "U",
                            "Ū": "U",
                            "Ṻ": "U",
                            "Ŭ": "U",
                            "Ü": "U",
                            "Ǜ": "U",
                            "Ǘ": "U",
                            "Ǖ": "U",
                            "Ǚ": "U",
                            "Ủ": "U",
                            "Ů": "U",
                            "Ű": "U",
                            "Ǔ": "U",
                            "Ȕ": "U",
                            "Ȗ": "U",
                            "Ư": "U",
                            "Ừ": "U",
                            "Ứ": "U",
                            "Ữ": "U",
                            "Ử": "U",
                            "Ự": "U",
                            "Ụ": "U",
                            "Ṳ": "U",
                            "Ų": "U",
                            "Ṷ": "U",
                            "Ṵ": "U",
                            "Ʉ": "U",
                            "Ⓥ": "V",
                            "Ｖ": "V",
                            "Ṽ": "V",
                            "Ṿ": "V",
                            "Ʋ": "V",
                            "Ꝟ": "V",
                            "Ʌ": "V",
                            "Ꝡ": "VY",
                            "Ⓦ": "W",
                            "Ｗ": "W",
                            "Ẁ": "W",
                            "Ẃ": "W",
                            "Ŵ": "W",
                            "Ẇ": "W",
                            "Ẅ": "W",
                            "Ẉ": "W",
                            "Ⱳ": "W",
                            "Ⓧ": "X",
                            "Ｘ": "X",
                            "Ẋ": "X",
                            "Ẍ": "X",
                            "Ⓨ": "Y",
                            "Ｙ": "Y",
                            "Ỳ": "Y",
                            "Ý": "Y",
                            "Ŷ": "Y",
                            "Ỹ": "Y",
                            "Ȳ": "Y",
                            "Ẏ": "Y",
                            "Ÿ": "Y",
                            "Ỷ": "Y",
                            "Ỵ": "Y",
                            "Ƴ": "Y",
                            "Ɏ": "Y",
                            "Ỿ": "Y",
                            "Ⓩ": "Z",
                            "Ｚ": "Z",
                            "Ź": "Z",
                            "Ẑ": "Z",
                            "Ż": "Z",
                            "Ž": "Z",
                            "Ẓ": "Z",
                            "Ẕ": "Z",
                            "Ƶ": "Z",
                            "Ȥ": "Z",
                            "Ɀ": "Z",
                            "Ⱬ": "Z",
                            "Ꝣ": "Z",
                            "ⓐ": "a",
                            "ａ": "a",
                            "ẚ": "a",
                            "à": "a",
                            "á": "a",
                            "â": "a",
                            "ầ": "a",
                            "ấ": "a",
                            "ẫ": "a",
                            "ẩ": "a",
                            "ã": "a",
                            "ā": "a",
                            "ă": "a",
                            "ằ": "a",
                            "ắ": "a",
                            "ẵ": "a",
                            "ẳ": "a",
                            "ȧ": "a",
                            "ǡ": "a",
                            "ä": "a",
                            "ǟ": "a",
                            "ả": "a",
                            "å": "a",
                            "ǻ": "a",
                            "ǎ": "a",
                            "ȁ": "a",
                            "ȃ": "a",
                            "ạ": "a",
                            "ậ": "a",
                            "ặ": "a",
                            "ḁ": "a",
                            "ą": "a",
                            "ⱥ": "a",
                            "ɐ": "a",
                            "ꜳ": "aa",
                            "æ": "ae",
                            "ǽ": "ae",
                            "ǣ": "ae",
                            "ꜵ": "ao",
                            "ꜷ": "au",
                            "ꜹ": "av",
                            "ꜻ": "av",
                            "ꜽ": "ay",
                            "ⓑ": "b",
                            "ｂ": "b",
                            "ḃ": "b",
                            "ḅ": "b",
                            "ḇ": "b",
                            "ƀ": "b",
                            "ƃ": "b",
                            "ɓ": "b",
                            "ⓒ": "c",
                            "ｃ": "c",
                            "ć": "c",
                            "ĉ": "c",
                            "ċ": "c",
                            "č": "c",
                            "ç": "c",
                            "ḉ": "c",
                            "ƈ": "c",
                            "ȼ": "c",
                            "ꜿ": "c",
                            "ↄ": "c",
                            "ⓓ": "d",
                            "ｄ": "d",
                            "ḋ": "d",
                            "ď": "d",
                            "ḍ": "d",
                            "ḑ": "d",
                            "ḓ": "d",
                            "ḏ": "d",
                            "đ": "d",
                            "ƌ": "d",
                            "ɖ": "d",
                            "ɗ": "d",
                            "ꝺ": "d",
                            "ǳ": "dz",
                            "ǆ": "dz",
                            "ⓔ": "e",
                            "ｅ": "e",
                            "è": "e",
                            "é": "e",
                            "ê": "e",
                            "ề": "e",
                            "ế": "e",
                            "ễ": "e",
                            "ể": "e",
                            "ẽ": "e",
                            "ē": "e",
                            "ḕ": "e",
                            "ḗ": "e",
                            "ĕ": "e",
                            "ė": "e",
                            "ë": "e",
                            "ẻ": "e",
                            "ě": "e",
                            "ȅ": "e",
                            "ȇ": "e",
                            "ẹ": "e",
                            "ệ": "e",
                            "ȩ": "e",
                            "ḝ": "e",
                            "ę": "e",
                            "ḙ": "e",
                            "ḛ": "e",
                            "ɇ": "e",
                            "ɛ": "e",
                            "ǝ": "e",
                            "ⓕ": "f",
                            "ｆ": "f",
                            "ḟ": "f",
                            "ƒ": "f",
                            "ꝼ": "f",
                            "ⓖ": "g",
                            "ｇ": "g",
                            "ǵ": "g",
                            "ĝ": "g",
                            "ḡ": "g",
                            "ğ": "g",
                            "ġ": "g",
                            "ǧ": "g",
                            "ģ": "g",
                            "ǥ": "g",
                            "ɠ": "g",
                            "ꞡ": "g",
                            "ᵹ": "g",
                            "ꝿ": "g",
                            "ⓗ": "h",
                            "ｈ": "h",
                            "ĥ": "h",
                            "ḣ": "h",
                            "ḧ": "h",
                            "ȟ": "h",
                            "ḥ": "h",
                            "ḩ": "h",
                            "ḫ": "h",
                            "ẖ": "h",
                            "ħ": "h",
                            "ⱨ": "h",
                            "ⱶ": "h",
                            "ɥ": "h",
                            "ƕ": "hv",
                            "ⓘ": "i",
                            "ｉ": "i",
                            "ì": "i",
                            "í": "i",
                            "î": "i",
                            "ĩ": "i",
                            "ī": "i",
                            "ĭ": "i",
                            "ï": "i",
                            "ḯ": "i",
                            "ỉ": "i",
                            "ǐ": "i",
                            "ȉ": "i",
                            "ȋ": "i",
                            "ị": "i",
                            "į": "i",
                            "ḭ": "i",
                            "ɨ": "i",
                            "ı": "i",
                            "ⓙ": "j",
                            "ｊ": "j",
                            "ĵ": "j",
                            "ǰ": "j",
                            "ɉ": "j",
                            "ⓚ": "k",
                            "ｋ": "k",
                            "ḱ": "k",
                            "ǩ": "k",
                            "ḳ": "k",
                            "ķ": "k",
                            "ḵ": "k",
                            "ƙ": "k",
                            "ⱪ": "k",
                            "ꝁ": "k",
                            "ꝃ": "k",
                            "ꝅ": "k",
                            "ꞣ": "k",
                            "ⓛ": "l",
                            "ｌ": "l",
                            "ŀ": "l",
                            "ĺ": "l",
                            "ľ": "l",
                            "ḷ": "l",
                            "ḹ": "l",
                            "ļ": "l",
                            "ḽ": "l",
                            "ḻ": "l",
                            "ſ": "l",
                            "ł": "l",
                            "ƚ": "l",
                            "ɫ": "l",
                            "ⱡ": "l",
                            "ꝉ": "l",
                            "ꞁ": "l",
                            "ꝇ": "l",
                            "ǉ": "lj",
                            "ⓜ": "m",
                            "ｍ": "m",
                            "ḿ": "m",
                            "ṁ": "m",
                            "ṃ": "m",
                            "ɱ": "m",
                            "ɯ": "m",
                            "ⓝ": "n",
                            "ｎ": "n",
                            "ǹ": "n",
                            "ń": "n",
                            "ñ": "n",
                            "ṅ": "n",
                            "ň": "n",
                            "ṇ": "n",
                            "ņ": "n",
                            "ṋ": "n",
                            "ṉ": "n",
                            "ƞ": "n",
                            "ɲ": "n",
                            "ŉ": "n",
                            "ꞑ": "n",
                            "ꞥ": "n",
                            "ǌ": "nj",
                            "ⓞ": "o",
                            "ｏ": "o",
                            "ò": "o",
                            "ó": "o",
                            "ô": "o",
                            "ồ": "o",
                            "ố": "o",
                            "ỗ": "o",
                            "ổ": "o",
                            "õ": "o",
                            "ṍ": "o",
                            "ȭ": "o",
                            "ṏ": "o",
                            "ō": "o",
                            "ṑ": "o",
                            "ṓ": "o",
                            "ŏ": "o",
                            "ȯ": "o",
                            "ȱ": "o",
                            "ö": "o",
                            "ȫ": "o",
                            "ỏ": "o",
                            "ő": "o",
                            "ǒ": "o",
                            "ȍ": "o",
                            "ȏ": "o",
                            "ơ": "o",
                            "ờ": "o",
                            "ớ": "o",
                            "ỡ": "o",
                            "ở": "o",
                            "ợ": "o",
                            "ọ": "o",
                            "ộ": "o",
                            "ǫ": "o",
                            "ǭ": "o",
                            "ø": "o",
                            "ǿ": "o",
                            "ɔ": "o",
                            "ꝋ": "o",
                            "ꝍ": "o",
                            "ɵ": "o",
                            "œ": "oe",
                            "ƣ": "oi",
                            "ȣ": "ou",
                            "ꝏ": "oo",
                            "ⓟ": "p",
                            "ｐ": "p",
                            "ṕ": "p",
                            "ṗ": "p",
                            "ƥ": "p",
                            "ᵽ": "p",
                            "ꝑ": "p",
                            "ꝓ": "p",
                            "ꝕ": "p",
                            "ⓠ": "q",
                            "ｑ": "q",
                            "ɋ": "q",
                            "ꝗ": "q",
                            "ꝙ": "q",
                            "ⓡ": "r",
                            "ｒ": "r",
                            "ŕ": "r",
                            "ṙ": "r",
                            "ř": "r",
                            "ȑ": "r",
                            "ȓ": "r",
                            "ṛ": "r",
                            "ṝ": "r",
                            "ŗ": "r",
                            "ṟ": "r",
                            "ɍ": "r",
                            "ɽ": "r",
                            "ꝛ": "r",
                            "ꞧ": "r",
                            "ꞃ": "r",
                            "ⓢ": "s",
                            "ｓ": "s",
                            "ß": "s",
                            "ś": "s",
                            "ṥ": "s",
                            "ŝ": "s",
                            "ṡ": "s",
                            "š": "s",
                            "ṧ": "s",
                            "ṣ": "s",
                            "ṩ": "s",
                            "ș": "s",
                            "ş": "s",
                            "ȿ": "s",
                            "ꞩ": "s",
                            "ꞅ": "s",
                            "ẛ": "s",
                            "ⓣ": "t",
                            "ｔ": "t",
                            "ṫ": "t",
                            "ẗ": "t",
                            "ť": "t",
                            "ṭ": "t",
                            "ț": "t",
                            "ţ": "t",
                            "ṱ": "t",
                            "ṯ": "t",
                            "ŧ": "t",
                            "ƭ": "t",
                            "ʈ": "t",
                            "ⱦ": "t",
                            "ꞇ": "t",
                            "ꜩ": "tz",
                            "ⓤ": "u",
                            "ｕ": "u",
                            "ù": "u",
                            "ú": "u",
                            "û": "u",
                            "ũ": "u",
                            "ṹ": "u",
                            "ū": "u",
                            "ṻ": "u",
                            "ŭ": "u",
                            "ü": "u",
                            "ǜ": "u",
                            "ǘ": "u",
                            "ǖ": "u",
                            "ǚ": "u",
                            "ủ": "u",
                            "ů": "u",
                            "ű": "u",
                            "ǔ": "u",
                            "ȕ": "u",
                            "ȗ": "u",
                            "ư": "u",
                            "ừ": "u",
                            "ứ": "u",
                            "ữ": "u",
                            "ử": "u",
                            "ự": "u",
                            "ụ": "u",
                            "ṳ": "u",
                            "ų": "u",
                            "ṷ": "u",
                            "ṵ": "u",
                            "ʉ": "u",
                            "ⓥ": "v",
                            "ｖ": "v",
                            "ṽ": "v",
                            "ṿ": "v",
                            "ʋ": "v",
                            "ꝟ": "v",
                            "ʌ": "v",
                            "ꝡ": "vy",
                            "ⓦ": "w",
                            "ｗ": "w",
                            "ẁ": "w",
                            "ẃ": "w",
                            "ŵ": "w",
                            "ẇ": "w",
                            "ẅ": "w",
                            "ẘ": "w",
                            "ẉ": "w",
                            "ⱳ": "w",
                            "ⓧ": "x",
                            "ｘ": "x",
                            "ẋ": "x",
                            "ẍ": "x",
                            "ⓨ": "y",
                            "ｙ": "y",
                            "ỳ": "y",
                            "ý": "y",
                            "ŷ": "y",
                            "ỹ": "y",
                            "ȳ": "y",
                            "ẏ": "y",
                            "ÿ": "y",
                            "ỷ": "y",
                            "ẙ": "y",
                            "ỵ": "y",
                            "ƴ": "y",
                            "ɏ": "y",
                            "ỿ": "y",
                            "ⓩ": "z",
                            "ｚ": "z",
                            "ź": "z",
                            "ẑ": "z",
                            "ż": "z",
                            "ž": "z",
                            "ẓ": "z",
                            "ẕ": "z",
                            "ƶ": "z",
                            "ȥ": "z",
                            "ɀ": "z",
                            "ⱬ": "z",
                            "ꝣ": "z",
                            "Ά": "Α",
                            "Έ": "Ε",
                            "Ή": "Η",
                            "Ί": "Ι",
                            "Ϊ": "Ι",
                            "Ό": "Ο",
                            "Ύ": "Υ",
                            "Ϋ": "Υ",
                            "Ώ": "Ω",
                            "ά": "α",
                            "έ": "ε",
                            "ή": "η",
                            "ί": "ι",
                            "ϊ": "ι",
                            "ΐ": "ι",
                            "ό": "ο",
                            "ύ": "υ",
                            "ϋ": "υ",
                            "ΰ": "υ",
                            "ώ": "ω",
                            "ς": "σ",
                            "’": "'"
                        };
                    }), b.define("select2/data/base", ["../utils"], function (a) {
                        function b(a, c) {
                            b.__super__.constructor.call(this);
                        }

                        return a.Extend(b, a.Observable), b.prototype.current = function (a) {
                            throw new Error("The `current` method must be defined in child classes.");
                        }, b.prototype.query = function (a, b) {
                            throw new Error("The `query` method must be defined in child classes.");
                        }, b.prototype.bind = function (a, b) {
                        }, b.prototype.destroy = function () {
                        }, b.prototype.generateResultId = function (b, c) {
                            var d = b.id + "-result-";
                            return d += a.generateChars(4), null != c.id ? d += "-" + c.id.toString() : d += "-" + a.generateChars(4), d;
                        }, b;
                    }), b.define("select2/data/select", ["./base", "../utils", "jquery"], function (a, b, c) {
                        function d(a, b) {
                            this.$element = a, this.options = b, d.__super__.constructor.call(this);
                        }

                        return b.Extend(d, a), d.prototype.current = function (a) {
                            var b = [],
                                d = this;
                            this.$element.find(":selected").each(function () {
                                var a = c(this),
                                    e = d.item(a);
                                b.push(e);
                            }), a(b);
                        }, d.prototype.select = function (a) {
                            var b = this;
                            if (a.selected = !0, c(a.element).is("option")) return a.element.selected = !0, void this.$element.trigger("change");
                            if (this.$element.prop("multiple")) this.current(function (d) {
                                var e = [];
                                a = [a], a.push.apply(a, d);

                                for (var f = 0; f < a.length; f++) {
                                    var g = a[f].id;
                                    -1 === c.inArray(g, e) && e.push(g);
                                }

                                b.$element.val(e), b.$element.trigger("change");
                            }); else {
                                var d = a.id;
                                this.$element.val(d), this.$element.trigger("change");
                            }
                        }, d.prototype.unselect = function (a) {
                            var b = this;

                            if (this.$element.prop("multiple")) {
                                if (a.selected = !1, c(a.element).is("option")) return a.element.selected = !1, void this.$element.trigger("change");
                                this.current(function (d) {
                                    for (var e = [], f = 0; f < d.length; f++) {
                                        var g = d[f].id;
                                        g !== a.id && -1 === c.inArray(g, e) && e.push(g);
                                    }

                                    b.$element.val(e), b.$element.trigger("change");
                                });
                            }
                        }, d.prototype.bind = function (a, b) {
                            var c = this;
                            this.container = a, a.on("select", function (a) {
                                c.select(a.data);
                            }), a.on("unselect", function (a) {
                                c.unselect(a.data);
                            });
                        }, d.prototype.destroy = function () {
                            this.$element.find("*").each(function () {
                                b.RemoveData(this);
                            });
                        }, d.prototype.query = function (a, b) {
                            var d = [],
                                e = this;
                            this.$element.children().each(function () {
                                var b = c(this);

                                if (b.is("option") || b.is("optgroup")) {
                                    var f = e.item(b),
                                        g = e.matches(a, f);
                                    null !== g && d.push(g);
                                }
                            }), b({
                                results: d
                            });
                        }, d.prototype.addOptions = function (a) {
                            b.appendMany(this.$element, a);
                        }, d.prototype.option = function (a) {
                            var d;
                            a.children ? (d = document.createElement("optgroup"), d.label = a.text) : (d = document.createElement("option"), void 0 !== d.textContent ? d.textContent = a.text : d.innerText = a.text), void 0 !== a.id && (d.value = a.id), a.disabled && (d.disabled = !0), a.selected && (d.selected = !0), a.title && (d.title = a.title);

                            var e = c(d),
                                f = this._normalizeItem(a);

                            return f.element = d, b.StoreData(d, "data", f), e;
                        }, d.prototype.item = function (a) {
                            var d = {};
                            if (null != (d = b.GetData(a[0], "data"))) return d;
                            if (a.is("option")) d = {
                                id: a.val(),
                                text: a.text(),
                                disabled: a.prop("disabled"),
                                selected: a.prop("selected"),
                                title: a.prop("title")
                            }; else if (a.is("optgroup")) {
                                d = {
                                    text: a.prop("label"),
                                    children: [],
                                    title: a.prop("title")
                                };

                                for (var e = a.children("option"), f = [], g = 0; g < e.length; g++) {
                                    var h = c(e[g]),
                                        i = this.item(h);
                                    f.push(i);
                                }

                                d.children = f;
                            }
                            return d = this._normalizeItem(d), d.element = a[0], b.StoreData(a[0], "data", d), d;
                        }, d.prototype._normalizeItem = function (a) {
                            a !== Object(a) && (a = {
                                id: a,
                                text: a
                            }), a = c.extend({}, {
                                text: ""
                            }, a);
                            var b = {
                                selected: !1,
                                disabled: !1
                            };
                            return null != a.id && (a.id = a.id.toString()), null != a.text && (a.text = a.text.toString()), null == a._resultId && a.id && null != this.container && (a._resultId = this.generateResultId(this.container, a)), c.extend({}, b, a);
                        }, d.prototype.matches = function (a, b) {
                            return this.options.get("matcher")(a, b);
                        }, d;
                    }), b.define("select2/data/array", ["./select", "../utils", "jquery"], function (a, b, c) {
                        function d(a, b) {
                            var c = b.get("data") || [];
                            d.__super__.constructor.call(this, a, b), this.addOptions(this.convertToOptions(c));
                        }

                        return b.Extend(d, a), d.prototype.select = function (a) {
                            var b = this.$element.find("option").filter(function (b, c) {
                                return c.value == a.id.toString();
                            });
                            0 === b.length && (b = this.option(a), this.addOptions(b)), d.__super__.select.call(this, a);
                        }, d.prototype.convertToOptions = function (a) {
                            function d(a) {
                                return function () {
                                    return c(this).val() == a.id;
                                };
                            }

                            for (var e = this, f = this.$element.find("option"), g = f.map(function () {
                                return e.item(c(this)).id;
                            }).get(), h = [], i = 0; i < a.length; i++) {
                                var j = this._normalizeItem(a[i]);

                                if (c.inArray(j.id, g) >= 0) {
                                    var k = f.filter(d(j)),
                                        l = this.item(k),
                                        m = c.extend(!0, {}, j, l),
                                        n = this.option(m);
                                    k.replaceWith(n);
                                } else {
                                    var o = this.option(j);

                                    if (j.children) {
                                        var p = this.convertToOptions(j.children);
                                        b.appendMany(o, p);
                                    }

                                    h.push(o);
                                }
                            }

                            return h;
                        }, d;
                    }), b.define("select2/data/ajax", ["./array", "../utils", "jquery"], function (a, b, c) {
                        function d(a, b) {
                            this.ajaxOptions = this._applyDefaults(b.get("ajax")), null != this.ajaxOptions.processResults && (this.processResults = this.ajaxOptions.processResults), d.__super__.constructor.call(this, a, b);
                        }

                        return b.Extend(d, a), d.prototype._applyDefaults = function (a) {
                            var b = {
                                data: function data(a) {
                                    return c.extend({}, a, {
                                        q: a.term
                                    });
                                },
                                transport: function transport(a, b, d) {
                                    var e = c.ajax(a);
                                    return e.then(b), e.fail(d), e;
                                }
                            };
                            return c.extend({}, b, a, !0);
                        }, d.prototype.processResults = function (a) {
                            return a;
                        }, d.prototype.query = function (a, b) {
                            function d() {
                                var d = f.transport(f, function (d) {
                                    var f = e.processResults(d, a);
                                    e.options.get("debug") && window.console && console.error && (f && f.results && c.isArray(f.results) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")), b(f);
                                }, function () {
                                    "status" in d && (0 === d.status || "0" === d.status) || e.trigger("results:message", {
                                        message: "errorLoading"
                                    });
                                });
                                e._request = d;
                            }

                            var e = this;
                            null != this._request && (c.isFunction(this._request.abort) && this._request.abort(), this._request = null);
                            var f = c.extend({
                                type: "GET"
                            }, this.ajaxOptions);
                            "function" == typeof f.url && (f.url = f.url.call(this.$element, a)), "function" == typeof f.data && (f.data = f.data.call(this.$element, a)), this.ajaxOptions.delay && null != a.term ? (this._queryTimeout && window.clearTimeout(this._queryTimeout), this._queryTimeout = window.setTimeout(d, this.ajaxOptions.delay)) : d();
                        }, d;
                    }), b.define("select2/data/tags", ["jquery"], function (a) {
                        function b(b, c, d) {
                            var e = d.get("tags"),
                                f = d.get("createTag");
                            void 0 !== f && (this.createTag = f);
                            var g = d.get("insertTag");
                            if (void 0 !== g && (this.insertTag = g), b.call(this, c, d), a.isArray(e)) for (var h = 0; h < e.length; h++) {
                                var i = e[h],
                                    j = this._normalizeItem(i),
                                    k = this.option(j);

                                this.$element.append(k);
                            }
                        }

                        return b.prototype.query = function (a, b, c) {
                            function d(a, f) {
                                for (var g = a.results, h = 0; h < g.length; h++) {
                                    var i = g[h],
                                        j = null != i.children && !d({
                                            results: i.children
                                        }, !0);
                                    if ((i.text || "").toUpperCase() === (b.term || "").toUpperCase() || j) return !f && (a.data = g, void c(a));
                                }

                                if (f) return !0;
                                var k = e.createTag(b);

                                if (null != k) {
                                    var l = e.option(k);
                                    l.attr("data-select2-tag", !0), e.addOptions([l]), e.insertTag(g, k);
                                }

                                a.results = g, c(a);
                            }

                            var e = this;
                            if (this._removeOldTags(), null == b.term || null != b.page) return void a.call(this, b, c);
                            a.call(this, b, d);
                        }, b.prototype.createTag = function (b, c) {
                            var d = a.trim(c.term);
                            return "" === d ? null : {
                                id: d,
                                text: d
                            };
                        }, b.prototype.insertTag = function (a, b, c) {
                            b.unshift(c);
                        }, b.prototype._removeOldTags = function (b) {
                            this._lastTag;
                            this.$element.find("option[data-select2-tag]").each(function () {
                                this.selected || a(this).remove();
                            });
                        }, b;
                    }), b.define("select2/data/tokenizer", ["jquery"], function (a) {
                        function b(a, b, c) {
                            var d = c.get("tokenizer");
                            void 0 !== d && (this.tokenizer = d), a.call(this, b, c);
                        }

                        return b.prototype.bind = function (a, b, c) {
                            a.call(this, b, c), this.$search = b.dropdown.$search || b.selection.$search || c.find(".select2-search__field");
                        }, b.prototype.query = function (b, c, d) {
                            function e(b) {
                                var c = g._normalizeItem(b);

                                if (!g.$element.find("option").filter(function () {
                                    return a(this).val() === c.id;
                                }).length) {
                                    var d = g.option(c);
                                    d.attr("data-select2-tag", !0), g._removeOldTags(), g.addOptions([d]);
                                }

                                f(c);
                            }

                            function f(a) {
                                g.trigger("select", {
                                    data: a
                                });
                            }

                            var g = this;
                            c.term = c.term || "";
                            var h = this.tokenizer(c, this.options, e);
                            h.term !== c.term && (this.$search.length && (this.$search.val(h.term), this.$search.focus()), c.term = h.term), b.call(this, c, d);
                        }, b.prototype.tokenizer = function (b, c, d, e) {
                            for (var f = d.get("tokenSeparators") || [], g = c.term, h = 0, i = this.createTag || function (a) {
                                return {
                                    id: a.term,
                                    text: a.term
                                };
                            }; h < g.length;) {
                                var j = g[h];

                                if (-1 !== a.inArray(j, f)) {
                                    var k = g.substr(0, h),
                                        l = a.extend({}, c, {
                                            term: k
                                        }),
                                        m = i(l);
                                    null != m ? (e(m), g = g.substr(h + 1) || "", h = 0) : h++;
                                } else h++;
                            }

                            return {
                                term: g
                            };
                        }, b;
                    }), b.define("select2/data/minimumInputLength", [], function () {
                        function a(a, b, c) {
                            this.minimumInputLength = c.get("minimumInputLength"), a.call(this, b, c);
                        }

                        return a.prototype.query = function (a, b, c) {
                            if (b.term = b.term || "", b.term.length < this.minimumInputLength) return void this.trigger("results:message", {
                                message: "inputTooShort",
                                args: {
                                    minimum: this.minimumInputLength,
                                    input: b.term,
                                    params: b
                                }
                            });
                            a.call(this, b, c);
                        }, a;
                    }), b.define("select2/data/maximumInputLength", [], function () {
                        function a(a, b, c) {
                            this.maximumInputLength = c.get("maximumInputLength"), a.call(this, b, c);
                        }

                        return a.prototype.query = function (a, b, c) {
                            if (b.term = b.term || "", this.maximumInputLength > 0 && b.term.length > this.maximumInputLength) return void this.trigger("results:message", {
                                message: "inputTooLong",
                                args: {
                                    maximum: this.maximumInputLength,
                                    input: b.term,
                                    params: b
                                }
                            });
                            a.call(this, b, c);
                        }, a;
                    }), b.define("select2/data/maximumSelectionLength", [], function () {
                        function a(a, b, c) {
                            this.maximumSelectionLength = c.get("maximumSelectionLength"), a.call(this, b, c);
                        }

                        return a.prototype.query = function (a, b, c) {
                            var d = this;
                            this.current(function (e) {
                                var f = null != e ? e.length : 0;
                                if (d.maximumSelectionLength > 0 && f >= d.maximumSelectionLength) return void d.trigger("results:message", {
                                    message: "maximumSelected",
                                    args: {
                                        maximum: d.maximumSelectionLength
                                    }
                                });
                                a.call(d, b, c);
                            });
                        }, a;
                    }), b.define("select2/dropdown", ["jquery", "./utils"], function (a, b) {
                        function c(a, b) {
                            this.$element = a, this.options = b, c.__super__.constructor.call(this);
                        }

                        return b.Extend(c, b.Observable), c.prototype.render = function () {
                            var b = a('<span class="select2-dropdown"><span class="select2-results"></span></span>');
                            return b.attr("dir", this.options.get("dir")), this.$dropdown = b, b;
                        }, c.prototype.bind = function () {
                        }, c.prototype.position = function (a, b) {
                        }, c.prototype.destroy = function () {
                            this.$dropdown.remove();
                        }, c;
                    }), b.define("select2/dropdown/search", ["jquery", "../utils"], function (a, b) {
                        function c() {
                        }

                        return c.prototype.render = function (b) {
                            var c = b.call(this),
                                d = a('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>');
                            return this.$searchContainer = d, this.$search = d.find("input"), c.prepend(d), c;
                        }, c.prototype.bind = function (b, c, d) {
                            var e = this;
                            b.call(this, c, d), this.$search.on("keydown", function (a) {
                                e.trigger("keypress", a), e._keyUpPrevented = a.isDefaultPrevented();
                            }), this.$search.on("input", function (b) {
                                a(this).off("keyup");
                            }), this.$search.on("keyup input", function (a) {
                                e.handleSearch(a);
                            }), c.on("open", function () {
                                e.$search.attr("tabindex", 0), e.$search.focus(), window.setTimeout(function () {
                                    e.$search.focus();
                                }, 0);
                            }), c.on("close", function () {
                                e.$search.attr("tabindex", -1), e.$search.val(""), e.$search.blur();
                            }), c.on("focus", function () {
                                c.isOpen() || e.$search.focus();
                            }), c.on("results:all", function (a) {
                                if (null == a.query.term || "" === a.query.term) {
                                    e.showSearch(a) ? e.$searchContainer.removeClass("select2-search--hide") : e.$searchContainer.addClass("select2-search--hide");
                                }
                            });
                        }, c.prototype.handleSearch = function (a) {
                            if (!this._keyUpPrevented) {
                                var b = this.$search.val();
                                this.trigger("query", {
                                    term: b
                                });
                            }

                            this._keyUpPrevented = !1;
                        }, c.prototype.showSearch = function (a, b) {
                            return !0;
                        }, c;
                    }), b.define("select2/dropdown/hidePlaceholder", [], function () {
                        function a(a, b, c, d) {
                            this.placeholder = this.normalizePlaceholder(c.get("placeholder")), a.call(this, b, c, d);
                        }

                        return a.prototype.append = function (a, b) {
                            b.results = this.removePlaceholder(b.results), a.call(this, b);
                        }, a.prototype.normalizePlaceholder = function (a, b) {
                            return "string" == typeof b && (b = {
                                id: "",
                                text: b
                            }), b;
                        }, a.prototype.removePlaceholder = function (a, b) {
                            for (var c = b.slice(0), d = b.length - 1; d >= 0; d--) {
                                var e = b[d];
                                this.placeholder.id === e.id && c.splice(d, 1);
                            }

                            return c;
                        }, a;
                    }), b.define("select2/dropdown/infiniteScroll", ["jquery"], function (a) {
                        function b(a, b, c, d) {
                            this.lastParams = {}, a.call(this, b, c, d), this.$loadingMore = this.createLoadingMore(), this.loading = !1;
                        }

                        return b.prototype.append = function (a, b) {
                            this.$loadingMore.remove(), this.loading = !1, a.call(this, b), this.showLoadingMore(b) && this.$results.append(this.$loadingMore);
                        }, b.prototype.bind = function (b, c, d) {
                            var e = this;
                            b.call(this, c, d), c.on("query", function (a) {
                                e.lastParams = a, e.loading = !0;
                            }), c.on("query:append", function (a) {
                                e.lastParams = a, e.loading = !0;
                            }), this.$results.on("scroll", function () {
                                var b = a.contains(document.documentElement, e.$loadingMore[0]);

                                if (!e.loading && b) {
                                    e.$results.offset().top + e.$results.outerHeight(!1) + 50 >= e.$loadingMore.offset().top + e.$loadingMore.outerHeight(!1) && e.loadMore();
                                }
                            });
                        }, b.prototype.loadMore = function () {
                            this.loading = !0;
                            var b = a.extend({}, {
                                page: 1
                            }, this.lastParams);
                            b.page++, this.trigger("query:append", b);
                        }, b.prototype.showLoadingMore = function (a, b) {
                            return b.pagination && b.pagination.more;
                        }, b.prototype.createLoadingMore = function () {
                            var b = a('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>'),
                                c = this.options.get("translations").get("loadingMore");
                            return b.html(c(this.lastParams)), b;
                        }, b;
                    }), b.define("select2/dropdown/attachBody", ["jquery", "../utils"], function (a, b) {
                        function c(b, c, d) {
                            this.$dropdownParent = d.get("dropdownParent") || a(document.body), b.call(this, c, d);
                        }

                        return c.prototype.bind = function (a, b, c) {
                            var d = this,
                                e = !1;
                            a.call(this, b, c), b.on("open", function () {
                                d._showDropdown(), d._attachPositioningHandler(b), e || (e = !0, b.on("results:all", function () {
                                    d._positionDropdown(), d._resizeDropdown();
                                }), b.on("results:append", function () {
                                    d._positionDropdown(), d._resizeDropdown();
                                }));
                            }), b.on("close", function () {
                                d._hideDropdown(), d._detachPositioningHandler(b);
                            }), this.$dropdownContainer.on("mousedown", function (a) {
                                a.stopPropagation();
                            });
                        }, c.prototype.destroy = function (a) {
                            a.call(this), this.$dropdownContainer.remove();
                        }, c.prototype.position = function (a, b, c) {
                            b.attr("class", c.attr("class")), b.removeClass("select2"), b.addClass("select2-container--open"), b.css({
                                position: "absolute",
                                top: -999999
                            }), this.$container = c;
                        }, c.prototype.render = function (b) {
                            var c = a("<span></span>"),
                                d = b.call(this);
                            return c.append(d), this.$dropdownContainer = c, c;
                        }, c.prototype._hideDropdown = function (a) {
                            this.$dropdownContainer.detach();
                        }, c.prototype._attachPositioningHandler = function (c, d) {
                            var e = this,
                                f = "scroll.select2." + d.id,
                                g = "resize.select2." + d.id,
                                h = "orientationchange.select2." + d.id,
                                i = this.$container.parents().filter(b.hasScroll);
                            i.each(function () {
                                b.StoreData(this, "select2-scroll-position", {
                                    x: a(this).scrollLeft(),
                                    y: a(this).scrollTop()
                                });
                            }), i.on(f, function (c) {
                                var d = b.GetData(this, "select2-scroll-position");
                                a(this).scrollTop(d.y);
                            }), a(window).on(f + " " + g + " " + h, function (a) {
                                e._positionDropdown(), e._resizeDropdown();
                            });
                        }, c.prototype._detachPositioningHandler = function (c, d) {
                            var e = "scroll.select2." + d.id,
                                f = "resize.select2." + d.id,
                                g = "orientationchange.select2." + d.id;
                            this.$container.parents().filter(b.hasScroll).off(e), a(window).off(e + " " + f + " " + g);
                        }, c.prototype._positionDropdown = function () {
                            var b = a(window),
                                c = this.$dropdown.hasClass("select2-dropdown--above"),
                                d = this.$dropdown.hasClass("select2-dropdown--below"),
                                e = null,
                                f = this.$container.offset();
                            f.bottom = f.top + this.$container.outerHeight(!1);
                            var g = {
                                height: this.$container.outerHeight(!1)
                            };
                            g.top = f.top, g.bottom = f.top + g.height;
                            var h = {
                                    height: this.$dropdown.outerHeight(!1)
                                },
                                i = {
                                    top: b.scrollTop(),
                                    bottom: b.scrollTop() + b.height()
                                },
                                j = i.top < f.top - h.height,
                                k = i.bottom > f.bottom + h.height,
                                l = {
                                    left: f.left,
                                    top: g.bottom
                                },
                                m = this.$dropdownParent;
                            "static" === m.css("position") && (m = m.offsetParent());
                            var n = m.offset();
                            l.top -= n.top, l.left -= n.left, c || d || (e = "below"), k || !j || c ? !j && k && c && (e = "below") : e = "above", ("above" == e || c && "below" !== e) && (l.top = g.top - n.top - h.height), null != e && (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + e), this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + e)), this.$dropdownContainer.css(l);
                        }, c.prototype._resizeDropdown = function () {
                            var a = {
                                width: this.$container.outerWidth(!1) + "px"
                            };
                            this.options.get("dropdownAutoWidth") && (a.minWidth = a.width, a.position = "relative", a.width = "auto"), this.$dropdown.css(a);
                        }, c.prototype._showDropdown = function (a) {
                            this.$dropdownContainer.appendTo(this.$dropdownParent), this._positionDropdown(), this._resizeDropdown();
                        }, c;
                    }), b.define("select2/dropdown/minimumResultsForSearch", [], function () {
                        function a(b) {
                            for (var c = 0, d = 0; d < b.length; d++) {
                                var e = b[d];
                                e.children ? c += a(e.children) : c++;
                            }

                            return c;
                        }

                        function b(a, b, c, d) {
                            this.minimumResultsForSearch = c.get("minimumResultsForSearch"), this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0), a.call(this, b, c, d);
                        }

                        return b.prototype.showSearch = function (b, c) {
                            return !(a(c.data.results) < this.minimumResultsForSearch) && b.call(this, c);
                        }, b;
                    }), b.define("select2/dropdown/selectOnClose", ["../utils"], function (a) {
                        function b() {
                        }

                        return b.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c), b.on("close", function (a) {
                                d._handleSelectOnClose(a);
                            });
                        }, b.prototype._handleSelectOnClose = function (b, c) {
                            if (c && null != c.originalSelect2Event) {
                                var d = c.originalSelect2Event;
                                if ("select" === d._type || "unselect" === d._type) return;
                            }

                            var e = this.getHighlightedResults();

                            if (!(e.length < 1)) {
                                var f = a.GetData(e[0], "data");
                                null != f.element && f.element.selected || null == f.element && f.selected || this.trigger("select", {
                                    data: f
                                });
                            }
                        }, b;
                    }), b.define("select2/dropdown/closeOnSelect", [], function () {
                        function a() {
                        }

                        return a.prototype.bind = function (a, b, c) {
                            var d = this;
                            a.call(this, b, c), b.on("select", function (a) {
                                d._selectTriggered(a);
                            }), b.on("unselect", function (a) {
                                d._selectTriggered(a);
                            });
                        }, a.prototype._selectTriggered = function (a, b) {
                            var c = b.originalEvent;
                            c && (c.ctrlKey || c.metaKey) || this.trigger("close", {
                                originalEvent: c,
                                originalSelect2Event: b
                            });
                        }, a;
                    }), b.define("select2/i18n/en", [], function () {
                        return {
                            errorLoading: function errorLoading() {
                                return "The results could not be loaded.";
                            },
                            inputTooLong: function inputTooLong(a) {
                                var b = a.input.length - a.maximum,
                                    c = "Please delete " + b + " character";
                                return 1 != b && (c += "s"), c;
                            },
                            inputTooShort: function inputTooShort(a) {
                                return "Please enter " + (a.minimum - a.input.length) + " or more characters";
                            },
                            loadingMore: function loadingMore() {
                                return "Loading more results…";
                            },
                            maximumSelected: function maximumSelected(a) {
                                var b = "You can only select " + a.maximum + " item";
                                return 1 != a.maximum && (b += "s"), b;
                            },
                            noResults: function noResults() {
                                return "No results found";
                            },
                            searching: function searching() {
                                return "Searching…";
                            },
                            removeAllItems: function removeAllItems() {
                                return "Remove all items";
                            }
                        };
                    }), b.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C) {
                        function D() {
                            this.reset();
                        }

                        return D.prototype.apply = function (l) {
                            if (l = a.extend(!0, {}, this.defaults, l), null == l.dataAdapter) {
                                if (null != l.ajax ? l.dataAdapter = o : null != l.data ? l.dataAdapter = n : l.dataAdapter = m, l.minimumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, r)), l.maximumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, s)), l.maximumSelectionLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, t)), l.tags && (l.dataAdapter = j.Decorate(l.dataAdapter, p)), null == l.tokenSeparators && null == l.tokenizer || (l.dataAdapter = j.Decorate(l.dataAdapter, q)), null != l.query) {
                                    var C = b(l.amdBase + "compat/query");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, C);
                                }

                                if (null != l.initSelection) {
                                    var D = b(l.amdBase + "compat/initSelection");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, D);
                                }
                            }

                            if (null == l.resultsAdapter && (l.resultsAdapter = c, null != l.ajax && (l.resultsAdapter = j.Decorate(l.resultsAdapter, x)), null != l.placeholder && (l.resultsAdapter = j.Decorate(l.resultsAdapter, w)), l.selectOnClose && (l.resultsAdapter = j.Decorate(l.resultsAdapter, A))), null == l.dropdownAdapter) {
                                if (l.multiple) l.dropdownAdapter = u; else {
                                    var E = j.Decorate(u, v);
                                    l.dropdownAdapter = E;
                                }

                                if (0 !== l.minimumResultsForSearch && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, z)), l.closeOnSelect && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, B)), null != l.dropdownCssClass || null != l.dropdownCss || null != l.adaptDropdownCssClass) {
                                    var F = b(l.amdBase + "compat/dropdownCss");
                                    l.dropdownAdapter = j.Decorate(l.dropdownAdapter, F);
                                }

                                l.dropdownAdapter = j.Decorate(l.dropdownAdapter, y);
                            }

                            if (null == l.selectionAdapter) {
                                if (l.multiple ? l.selectionAdapter = e : l.selectionAdapter = d, null != l.placeholder && (l.selectionAdapter = j.Decorate(l.selectionAdapter, f)), l.allowClear && (l.selectionAdapter = j.Decorate(l.selectionAdapter, g)), l.multiple && (l.selectionAdapter = j.Decorate(l.selectionAdapter, h)), null != l.containerCssClass || null != l.containerCss || null != l.adaptContainerCssClass) {
                                    var G = b(l.amdBase + "compat/containerCss");
                                    l.selectionAdapter = j.Decorate(l.selectionAdapter, G);
                                }

                                l.selectionAdapter = j.Decorate(l.selectionAdapter, i);
                            }

                            if ("string" == typeof l.language) if (l.language.indexOf("-") > 0) {
                                var H = l.language.split("-"),
                                    I = H[0];
                                l.language = [l.language, I];
                            } else l.language = [l.language];

                            if (a.isArray(l.language)) {
                                var J = new k();
                                l.language.push("en");

                                for (var K = l.language, L = 0; L < K.length; L++) {
                                    var M = K[L],
                                        N = {};

                                    try {
                                        N = k.loadPath(M);
                                    } catch (a) {
                                        try {
                                            M = this.defaults.amdLanguageBase + M, N = k.loadPath(M);
                                        } catch (a) {
                                            l.debug && window.console && console.warn && console.warn('Select2: The language file for "' + M + '" could not be automatically loaded. A fallback will be used instead.');
                                            continue;
                                        }
                                    }

                                    J.extend(N);
                                }

                                l.translations = J;
                            } else {
                                var O = k.loadPath(this.defaults.amdLanguageBase + "en"),
                                    P = new k(l.language);
                                P.extend(O), l.translations = P;
                            }

                            return l;
                        }, D.prototype.reset = function () {
                            function b(a) {
                                function b(a) {
                                    return l[a] || a;
                                }

                                return a.replace(/[^\u0000-\u007E]/g, b);
                            }

                            function c(d, e) {
                                if ("" === a.trim(d.term)) return e;

                                if (e.children && e.children.length > 0) {
                                    for (var f = a.extend(!0, {}, e), g = e.children.length - 1; g >= 0; g--) {
                                        null == c(d, e.children[g]) && f.children.splice(g, 1);
                                    }

                                    return f.children.length > 0 ? f : c(d, f);
                                }

                                var h = b(e.text).toUpperCase(),
                                    i = b(d.term).toUpperCase();
                                return h.indexOf(i) > -1 ? e : null;
                            }

                            this.defaults = {
                                amdBase: "./",
                                amdLanguageBase: "./i18n/",
                                closeOnSelect: !0,
                                debug: !1,
                                dropdownAutoWidth: !1,
                                escapeMarkup: j.escapeMarkup,
                                language: C,
                                matcher: c,
                                minimumInputLength: 0,
                                maximumInputLength: 0,
                                maximumSelectionLength: 0,
                                minimumResultsForSearch: 0,
                                selectOnClose: !1,
                                scrollAfterSelect: !1,
                                sorter: function sorter(a) {
                                    return a;
                                },
                                templateResult: function templateResult(a) {
                                    return a.text;
                                },
                                templateSelection: function templateSelection(a) {
                                    return a.text;
                                },
                                theme: "default",
                                width: "resolve"
                            };
                        }, D.prototype.set = function (b, c) {
                            var d = a.camelCase(b),
                                e = {};
                            e[d] = c;

                            var f = j._convertData(e);

                            a.extend(!0, this.defaults, f);
                        }, new D();
                    }), b.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function (a, b, c, d) {
                        function e(b, e) {
                            if (this.options = b, null != e && this.fromElement(e), this.options = c.apply(this.options), e && e.is("input")) {
                                var f = a(this.get("amdBase") + "compat/inputData");
                                this.options.dataAdapter = d.Decorate(this.options.dataAdapter, f);
                            }
                        }

                        return e.prototype.fromElement = function (a) {
                            function c(a, b) {
                                return b.toUpperCase();
                            }

                            var e = ["select2"];
                            null == this.options.multiple && (this.options.multiple = a.prop("multiple")), null == this.options.disabled && (this.options.disabled = a.prop("disabled")), null == this.options.language && (a.prop("lang") ? this.options.language = a.prop("lang").toLowerCase() : a.closest("[lang]").prop("lang") && (this.options.language = a.closest("[lang]").prop("lang"))), null == this.options.dir && (a.prop("dir") ? this.options.dir = a.prop("dir") : a.closest("[dir]").prop("dir") ? this.options.dir = a.closest("[dir]").prop("dir") : this.options.dir = "ltr"), a.prop("disabled", this.options.disabled), a.prop("multiple", this.options.multiple), d.GetData(a[0], "select2Tags") && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'), d.StoreData(a[0], "data", d.GetData(a[0], "select2Tags")), d.StoreData(a[0], "tags", !0)), d.GetData(a[0], "ajaxUrl") && (this.options.debug && window.console && console.warn && console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."), a.attr("ajax--url", d.GetData(a[0], "ajaxUrl")), d.StoreData(a[0], "ajax-Url", d.GetData(a[0], "ajaxUrl")));

                            for (var f = {}, g = 0; g < a[0].attributes.length; g++) {
                                var h = a[0].attributes[g].name,
                                    i = "data-";

                                if (h.substr(0, i.length) == i) {
                                    var j = h.substring(i.length),
                                        k = d.GetData(a[0], j);
                                    f[j.replace(/-([a-z])/g, c)] = k;
                                }
                            }

                            b.fn.jquery && "1." == b.fn.jquery.substr(0, 2) && a[0].dataset && (f = b.extend(!0, {}, a[0].dataset, f));
                            var l = b.extend(!0, {}, d.GetData(a[0]), f);
                            l = d._convertData(l);

                            for (var m in l) {
                                b.inArray(m, e) > -1 || (b.isPlainObject(this.options[m]) ? b.extend(this.options[m], l[m]) : this.options[m] = l[m]);
                            }

                            return this;
                        }, e.prototype.get = function (a) {
                            return this.options[a];
                        }, e.prototype.set = function (a, b) {
                            this.options[a] = b;
                        }, e;
                    }), b.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function (a, b, c, d) {
                        var e = function e(a, d) {
                            null != c.GetData(a[0], "select2") && c.GetData(a[0], "select2").destroy(), this.$element = a, this.id = this._generateId(a), d = d || {}, this.options = new b(d, a), e.__super__.constructor.call(this);
                            var f = a.attr("tabindex") || 0;
                            c.StoreData(a[0], "old-tabindex", f), a.attr("tabindex", "-1");
                            var g = this.options.get("dataAdapter");
                            this.dataAdapter = new g(a, this.options);
                            var h = this.render();

                            this._placeContainer(h);

                            var i = this.options.get("selectionAdapter");
                            this.selection = new i(a, this.options), this.$selection = this.selection.render(), this.selection.position(this.$selection, h);
                            var j = this.options.get("dropdownAdapter");
                            this.dropdown = new j(a, this.options), this.$dropdown = this.dropdown.render(), this.dropdown.position(this.$dropdown, h);
                            var k = this.options.get("resultsAdapter");
                            this.results = new k(a, this.options, this.dataAdapter), this.$results = this.results.render(), this.results.position(this.$results, this.$dropdown);
                            var l = this;
                            this._bindAdapters(), this._registerDomEvents(), this._registerDataEvents(), this._registerSelectionEvents(), this._registerDropdownEvents(), this._registerResultsEvents(), this._registerEvents(), this.dataAdapter.current(function (a) {
                                l.trigger("selection:update", {
                                    data: a
                                });
                            }), a.addClass("select2-hidden-accessible"), a.attr("aria-hidden", "true"), this._syncAttributes(), c.StoreData(a[0], "select2", this), a.data("select2", this);
                        };

                        return c.Extend(e, c.Observable), e.prototype._generateId = function (a) {
                            var b = "";
                            return b = null != a.attr("id") ? a.attr("id") : null != a.attr("name") ? a.attr("name") + "-" + c.generateChars(2) : c.generateChars(4), b = b.replace(/(:|\.|\[|\]|,)/g, ""), b = "select2-" + b;
                        }, e.prototype._placeContainer = function (a) {
                            a.insertAfter(this.$element);

                            var b = this._resolveWidth(this.$element, this.options.get("width"));

                            null != b && a.css("width", b);
                        }, e.prototype._resolveWidth = function (a, b) {
                            var c = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;

                            if ("resolve" == b) {
                                var d = this._resolveWidth(a, "style");

                                return null != d ? d : this._resolveWidth(a, "element");
                            }

                            if ("element" == b) {
                                var e = a.outerWidth(!1);
                                return e <= 0 ? "auto" : e + "px";
                            }

                            if ("style" == b) {
                                var f = a.attr("style");
                                if ("string" != typeof f) return null;

                                for (var g = f.split(";"), h = 0, i = g.length; h < i; h += 1) {
                                    var j = g[h].replace(/\s/g, ""),
                                        k = j.match(c);
                                    if (null !== k && k.length >= 1) return k[1];
                                }

                                return null;
                            }

                            return b;
                        }, e.prototype._bindAdapters = function () {
                            this.dataAdapter.bind(this, this.$container), this.selection.bind(this, this.$container), this.dropdown.bind(this, this.$container), this.results.bind(this, this.$container);
                        }, e.prototype._registerDomEvents = function () {
                            var b = this;
                            this.$element.on("change.select2", function () {
                                b.dataAdapter.current(function (a) {
                                    b.trigger("selection:update", {
                                        data: a
                                    });
                                });
                            }), this.$element.on("focus.select2", function (a) {
                                b.trigger("focus", a);
                            }), this._syncA = c.bind(this._syncAttributes, this), this._syncS = c.bind(this._syncSubtree, this), this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
                            var d = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                            null != d ? (this._observer = new d(function (c) {
                                a.each(c, b._syncA), a.each(c, b._syncS);
                            }), this._observer.observe(this.$element[0], {
                                attributes: !0,
                                childList: !0,
                                subtree: !1
                            })) : this.$element[0].addEventListener && (this.$element[0].addEventListener("DOMAttrModified", b._syncA, !1), this.$element[0].addEventListener("DOMNodeInserted", b._syncS, !1), this.$element[0].addEventListener("DOMNodeRemoved", b._syncS, !1));
                        }, e.prototype._registerDataEvents = function () {
                            var a = this;
                            this.dataAdapter.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }, e.prototype._registerSelectionEvents = function () {
                            var b = this,
                                c = ["toggle", "focus"];
                            this.selection.on("toggle", function () {
                                b.toggleDropdown();
                            }), this.selection.on("focus", function (a) {
                                b.focus(a);
                            }), this.selection.on("*", function (d, e) {
                                -1 === a.inArray(d, c) && b.trigger(d, e);
                            });
                        }, e.prototype._registerDropdownEvents = function () {
                            var a = this;
                            this.dropdown.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }, e.prototype._registerResultsEvents = function () {
                            var a = this;
                            this.results.on("*", function (b, c) {
                                a.trigger(b, c);
                            });
                        }, e.prototype._registerEvents = function () {
                            var a = this;
                            this.on("open", function () {
                                a.$container.addClass("select2-container--open");
                            }), this.on("close", function () {
                                a.$container.removeClass("select2-container--open");
                            }), this.on("enable", function () {
                                a.$container.removeClass("select2-container--disabled");
                            }), this.on("disable", function () {
                                a.$container.addClass("select2-container--disabled");
                            }), this.on("blur", function () {
                                a.$container.removeClass("select2-container--focus");
                            }), this.on("query", function (b) {
                                a.isOpen() || a.trigger("open", {}), this.dataAdapter.query(b, function (c) {
                                    a.trigger("results:all", {
                                        data: c,
                                        query: b
                                    });
                                });
                            }), this.on("query:append", function (b) {
                                this.dataAdapter.query(b, function (c) {
                                    a.trigger("results:append", {
                                        data: c,
                                        query: b
                                    });
                                });
                            }), this.on("keypress", function (b) {
                                var c = b.which;
                                a.isOpen() ? c === d.ESC || c === d.TAB || c === d.UP && b.altKey ? (a.close(), b.preventDefault()) : c === d.ENTER ? (a.trigger("results:select", {}), b.preventDefault()) : c === d.SPACE && b.ctrlKey ? (a.trigger("results:toggle", {}), b.preventDefault()) : c === d.UP ? (a.trigger("results:previous", {}), b.preventDefault()) : c === d.DOWN && (a.trigger("results:next", {}), b.preventDefault()) : (c === d.ENTER || c === d.SPACE || c === d.DOWN && b.altKey) && (a.open(), b.preventDefault());
                            });
                        }, e.prototype._syncAttributes = function () {
                            this.options.set("disabled", this.$element.prop("disabled")), this.options.get("disabled") ? (this.isOpen() && this.close(), this.trigger("disable", {})) : this.trigger("enable", {});
                        }, e.prototype._syncSubtree = function (a, b) {
                            var c = !1,
                                d = this;

                            if (!a || !a.target || "OPTION" === a.target.nodeName || "OPTGROUP" === a.target.nodeName) {
                                if (b) {
                                    if (b.addedNodes && b.addedNodes.length > 0) for (var e = 0; e < b.addedNodes.length; e++) {
                                        var f = b.addedNodes[e];
                                        f.selected && (c = !0);
                                    } else b.removedNodes && b.removedNodes.length > 0 && (c = !0);
                                } else c = !0;
                                c && this.dataAdapter.current(function (a) {
                                    d.trigger("selection:update", {
                                        data: a
                                    });
                                });
                            }
                        }, e.prototype.trigger = function (a, b) {
                            var c = e.__super__.trigger,
                                d = {
                                    open: "opening",
                                    close: "closing",
                                    select: "selecting",
                                    unselect: "unselecting",
                                    clear: "clearing"
                                };

                            if (void 0 === b && (b = {}), a in d) {
                                var f = d[a],
                                    g = {
                                        prevented: !1,
                                        name: a,
                                        args: b
                                    };
                                if (c.call(this, f, g), g.prevented) return void (b.prevented = !0);
                            }

                            c.call(this, a, b);
                        }, e.prototype.toggleDropdown = function () {
                            this.options.get("disabled") || (this.isOpen() ? this.close() : this.open());
                        }, e.prototype.open = function () {
                            this.isOpen() || this.trigger("query", {});
                        }, e.prototype.close = function () {
                            this.isOpen() && this.trigger("close", {});
                        }, e.prototype.isOpen = function () {
                            return this.$container.hasClass("select2-container--open");
                        }, e.prototype.hasFocus = function () {
                            return this.$container.hasClass("select2-container--focus");
                        }, e.prototype.focus = function (a) {
                            this.hasFocus() || (this.$container.addClass("select2-container--focus"), this.trigger("focus", {}));
                        }, e.prototype.enable = function (a) {
                            this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'), null != a && 0 !== a.length || (a = [!0]);
                            var b = !a[0];
                            this.$element.prop("disabled", b);
                        }, e.prototype.data = function () {
                            this.options.get("debug") && arguments.length > 0 && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
                            var a = [];
                            return this.dataAdapter.current(function (b) {
                                a = b;
                            }), a;
                        }, e.prototype.val = function (b) {
                            if (this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'), null == b || 0 === b.length) return this.$element.val();
                            var c = b[0];
                            a.isArray(c) && (c = a.map(c, function (a) {
                                return a.toString();
                            })), this.$element.val(c).trigger("change");
                        }, e.prototype.destroy = function () {
                            this.$container.remove(), this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA), null != this._observer ? (this._observer.disconnect(), this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, !1), this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, !1), this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, !1)), this._syncA = null, this._syncS = null, this.$element.off(".select2"), this.$element.attr("tabindex", c.GetData(this.$element[0], "old-tabindex")), this.$element.removeClass("select2-hidden-accessible"), this.$element.attr("aria-hidden", "false"), c.RemoveData(this.$element[0]), this.$element.removeData("select2"), this.dataAdapter.destroy(), this.selection.destroy(), this.dropdown.destroy(), this.results.destroy(), this.dataAdapter = null, this.selection = null, this.dropdown = null, this.results = null;
                        }, e.prototype.render = function () {
                            var b = a('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
                            return b.attr("dir", this.options.get("dir")), this.$container = b, this.$container.addClass("select2-container--" + this.options.get("theme")), c.StoreData(b[0], "element", this.$element), b;
                        }, e;
                    }), b.define("jquery-mousewheel", ["jquery"], function (a) {
                        return a;
                    }), b.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function (a, b, c, d, e) {
                        if (null == a.fn.select2) {
                            var f = ["open", "close", "destroy"];

                            a.fn.select2 = function (b) {
                                if ("object" == _typeof(b = b || {})) return this.each(function () {
                                    var d = a.extend(!0, {}, b);
                                    new c(a(this), d);
                                }), this;

                                if ("string" == typeof b) {
                                    var d,
                                        g = Array.prototype.slice.call(arguments, 1);
                                    return this.each(function () {
                                        var a = e.GetData(this, "select2");
                                        null == a && window.console && console.error && console.error("The select2('" + b + "') method was called on an element that is not using Select2."), d = a[b].apply(a, g);
                                    }), a.inArray(b, f) > -1 ? this : d;
                                }

                                throw new Error("Invalid arguments for Select2: " + b);
                            };
                        }

                        return null == a.fn.select2.defaults && (a.fn.select2.defaults = d), c;
                    }), {
                        define: b.define,
                        require: b.require
                    };
                }(),
                c = b.require("jquery.select2");

            return a.fn.select2.amd = b, c;
        });

        /***/
    }),

    /***/ "./resources/js/myFiles/sweetalert.min.js":
    /*!************************************************!*\
  !*** ./resources/js/myFiles/sweetalert.min.js ***!
  \************************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (setImmediate, clearImmediate, module) {
            var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

            function _typeof(obj) {
                if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                    _typeof = function _typeof(obj) {
                        return typeof obj;
                    };
                } else {
                    _typeof = function _typeof(obj) {
                        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                    };
                }
                return _typeof(obj);
            }

            !function (t, e) {
                "object" == (false ? undefined : _typeof(exports)) && "object" == (false ? undefined : _typeof(module)) ? module.exports = e() : true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
                    __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                        (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
            }(this, function () {
                return function (t) {
                    function e(o) {
                        if (n[o]) return n[o].exports;
                        var r = n[o] = {
                            i: o,
                            l: !1,
                            exports: {}
                        };
                        return t[o].call(r.exports, r, r.exports, e), r.l = !0, r.exports;
                    }

                    var n = {};
                    return e.m = t, e.c = n, e.d = function (t, n, o) {
                        e.o(t, n) || Object.defineProperty(t, n, {
                            configurable: !1,
                            enumerable: !0,
                            get: o
                        });
                    }, e.n = function (t) {
                        var n = t && t.__esModule ? function () {
                            return t["default"];
                        } : function () {
                            return t;
                        };
                        return e.d(n, "a", n), n;
                    }, e.o = function (t, e) {
                        return Object.prototype.hasOwnProperty.call(t, e);
                    }, e.p = "", e(e.s = 8);
                }([function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = "swal-button";
                    e.CLASS_NAMES = {
                        MODAL: "swal-modal",
                        OVERLAY: "swal-overlay",
                        SHOW_MODAL: "swal-overlay--show-modal",
                        MODAL_TITLE: "swal-title",
                        MODAL_TEXT: "swal-text",
                        ICON: "swal-icon",
                        ICON_CUSTOM: "swal-icon--custom",
                        CONTENT: "swal-content",
                        FOOTER: "swal-footer",
                        BUTTON_CONTAINER: "swal-button-container",
                        BUTTON: o,
                        CONFIRM_BUTTON: o + "--confirm",
                        CANCEL_BUTTON: o + "--cancel",
                        DANGER_BUTTON: o + "--danger",
                        BUTTON_LOADING: o + "--loading",
                        BUTTON_LOADER: o + "__loader"
                    }, e["default"] = e.CLASS_NAMES;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.getNode = function (t) {
                        var e = "." + t;
                        return document.querySelector(e);
                    }, e.stringToNode = function (t) {
                        var e = document.createElement("div");
                        return e.innerHTML = t.trim(), e.firstChild;
                    }, e.insertAfter = function (t, e) {
                        var n = e.nextSibling;
                        e.parentNode.insertBefore(t, n);
                    }, e.removeNode = function (t) {
                        t.parentElement.removeChild(t);
                    }, e.throwErr = function (t) {
                        throw t = t.replace(/ +(?= )/g, ""), "SweetAlert: " + (t = t.trim());
                    }, e.isPlainObject = function (t) {
                        if ("[object Object]" !== Object.prototype.toString.call(t)) return !1;
                        var e = Object.getPrototypeOf(t);
                        return null === e || e === Object.prototype;
                    }, e.ordinalSuffixOf = function (t) {
                        var e = t % 10,
                            n = t % 100;
                        return 1 === e && 11 !== n ? t + "st" : 2 === e && 12 !== n ? t + "nd" : 3 === e && 13 !== n ? t + "rd" : t + "th";
                    };
                }, function (t, e, n) {
                    "use strict";

                    function o(t) {
                        for (var n in t) {
                            e.hasOwnProperty(n) || (e[n] = t[n]);
                        }
                    }

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), o(n(25));
                    var r = n(26);
                    e.overlayMarkup = r["default"], o(n(27)), o(n(28)), o(n(29));
                    var i = n(0),
                        a = i["default"].MODAL_TITLE,
                        s = i["default"].MODAL_TEXT,
                        c = i["default"].ICON,
                        l = i["default"].FOOTER;
                    e.iconMarkup = '\n  <div class="' + c + '"></div>', e.titleMarkup = '\n  <div class="' + a + '"></div>\n', e.textMarkup = '\n  <div class="' + s + '"></div>', e.footerMarkup = '\n  <div class="' + l + '"></div>\n';
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1);
                    e.CONFIRM_KEY = "confirm", e.CANCEL_KEY = "cancel";
                    var r = {
                            visible: !0,
                            text: null,
                            value: null,
                            className: "",
                            closeModal: !0
                        },
                        i = Object.assign({}, r, {
                            visible: !1,
                            text: "Cancel",
                            value: null
                        }),
                        a = Object.assign({}, r, {
                            text: "OK",
                            value: !0
                        });
                    e.defaultButtonList = {
                        cancel: i,
                        confirm: a
                    };

                    var s = function s(t) {
                            switch (t) {
                                case e.CONFIRM_KEY:
                                    return a;

                                case e.CANCEL_KEY:
                                    return i;

                                default:
                                    var n = t.charAt(0).toUpperCase() + t.slice(1);
                                    return Object.assign({}, r, {
                                        text: n,
                                        value: t
                                    });
                            }
                        },
                        c = function c(t, e) {
                            var n = s(t);
                            return !0 === e ? Object.assign({}, n, {
                                visible: !0
                            }) : "string" == typeof e ? Object.assign({}, n, {
                                visible: !0,
                                text: e
                            }) : o.isPlainObject(e) ? Object.assign({
                                visible: !0
                            }, n, e) : Object.assign({}, n, {
                                visible: !1
                            });
                        },
                        l = function l(t) {
                            for (var e = {}, n = 0, o = Object.keys(t); n < o.length; n++) {
                                var r = o[n],
                                    a = t[r],
                                    s = c(r, a);
                                e[r] = s;
                            }

                            return e.cancel || (e.cancel = i), e;
                        },
                        u = function u(t) {
                            var n = {};

                            switch (t.length) {
                                case 1:
                                    n[e.CANCEL_KEY] = Object.assign({}, i, {
                                        visible: !1
                                    });
                                    break;

                                case 2:
                                    n[e.CANCEL_KEY] = c(e.CANCEL_KEY, t[0]), n[e.CONFIRM_KEY] = c(e.CONFIRM_KEY, t[1]);
                                    break;

                                default:
                                    o.throwErr("Invalid number of 'buttons' in array (" + t.length + ").\n      If you want more than 2 buttons, you need to use an object!");
                            }

                            return n;
                        };

                    e.getButtonListOpts = function (t) {
                        var n = e.defaultButtonList;
                        return "string" == typeof t ? n[e.CONFIRM_KEY] = c(e.CONFIRM_KEY, t) : Array.isArray(t) ? n = u(t) : o.isPlainObject(t) ? n = l(t) : !0 === t ? n = u([!0, !0]) : !1 === t ? n = u([!1, !1]) : void 0 === t && (n = e.defaultButtonList), n;
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1),
                        r = n(2),
                        i = n(0),
                        a = i["default"].MODAL,
                        s = i["default"].OVERLAY,
                        c = n(30),
                        l = n(31),
                        u = n(32),
                        f = n(33);

                    e.injectElIntoModal = function (t) {
                        var e = o.getNode(a),
                            n = o.stringToNode(t);
                        return e.appendChild(n), n;
                    };

                    var d = function d(t) {
                            t.className = a, t.textContent = "";
                        },
                        p = function p(t, e) {
                            d(t);
                            var n = e.className;
                            n && t.classList.add(n);
                        };

                    e.initModalContent = function (t) {
                        var e = o.getNode(a);
                        p(e, t), c["default"](t.icon), l.initTitle(t.title), l.initText(t.text), f["default"](t.content), u["default"](t.buttons, t.dangerMode);
                    };

                    var m = function m() {
                        var t = o.getNode(s),
                            e = o.stringToNode(r.modalMarkup);
                        t.appendChild(e);
                    };

                    e["default"] = m;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(3),
                        r = {
                            isOpen: !1,
                            promise: null,
                            actions: {},
                            timer: null
                        },
                        i = Object.assign({}, r);
                    e.resetState = function () {
                        i = Object.assign({}, r);
                    }, e.setActionValue = function (t) {
                        if ("string" == typeof t) return a(o.CONFIRM_KEY, t);

                        for (var e in t) {
                            a(e, t[e]);
                        }
                    };

                    var a = function a(t, e) {
                        i.actions[t] || (i.actions[t] = {}), Object.assign(i.actions[t], {
                            value: e
                        });
                    };

                    e.setActionOptionsFor = function (t, e) {
                        var n = (void 0 === e ? {} : e).closeModal,
                            o = void 0 === n || n;
                        Object.assign(i.actions[t], {
                            closeModal: o
                        });
                    }, e["default"] = i;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1),
                        r = n(3),
                        i = n(0),
                        a = i["default"].OVERLAY,
                        s = i["default"].SHOW_MODAL,
                        c = i["default"].BUTTON,
                        l = i["default"].BUTTON_LOADING,
                        u = n(5);

                    e.openModal = function () {
                        o.getNode(a).classList.add(s), u["default"].isOpen = !0;
                    };

                    var f = function f() {
                        o.getNode(a).classList.remove(s), u["default"].isOpen = !1;
                    };

                    e.onAction = function (t) {
                        void 0 === t && (t = r.CANCEL_KEY);
                        var e = u["default"].actions[t],
                            n = e.value;

                        if (!1 === e.closeModal) {
                            var i = c + "--" + t;
                            o.getNode(i).classList.add(l);
                        } else f();

                        u["default"].promise.resolve(n);
                    }, e.getState = function () {
                        var t = Object.assign({}, u["default"]);
                        return delete t.promise, delete t.timer, t;
                    }, e.stopLoading = function () {
                        for (var t = document.querySelectorAll("." + c), e = 0; e < t.length; e++) {
                            t[e].classList.remove(l);
                        }
                    };
                }, function (t, e) {
                    var n;

                    n = function () {
                        return this;
                    }();

                    try {
                        n = n || Function("return this")() || (0, eval)("this");
                    } catch (t) {
                        "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) && (n = window);
                    }

                    t.exports = n;
                }, function (t, e, n) {
                    (function (e) {
                        t.exports = e.sweetAlert = n(9);
                    }).call(e, n(7));
                }, function (t, e, n) {
                    (function (e) {
                        t.exports = e.swal = n(10);
                    }).call(e, n(7));
                }, function (t, e, n) {
                    "undefined" != typeof window && n(11), n(16);
                    var o = n(23)["default"];
                    t.exports = o;
                }, function (t, e, n) {
                    var o = n(12);
                    "string" == typeof o && (o = [[t.i, o, ""]]);
                    var r = {
                        insertAt: "top"
                    };
                    r.transform = void 0;
                    n(14)(o, r);
                    o.locals && (t.exports = o.locals);
                }, function (t, e, n) {
                    e = t.exports = n(13)(void 0), e.push([t.i, '.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}', ""]);
                }, function (t, e) {
                    function n(t, e) {
                        var n = t[1] || "",
                            r = t[3];
                        if (!r) return n;

                        if (e && "function" == typeof btoa) {
                            var i = o(r);
                            return [n].concat(r.sources.map(function (t) {
                                return "/*# sourceURL=" + r.sourceRoot + t + " */";
                            })).concat([i]).join("\n");
                        }

                        return [n].join("\n");
                    }

                    function o(t) {
                        return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(t)))) + " */";
                    }

                    t.exports = function (t) {
                        var e = [];
                        return e.toString = function () {
                            return this.map(function (e) {
                                var o = n(e, t);
                                return e[2] ? "@media " + e[2] + "{" + o + "}" : o;
                            }).join("");
                        }, e.i = function (t, n) {
                            "string" == typeof t && (t = [[null, t, ""]]);

                            for (var o = {}, r = 0; r < this.length; r++) {
                                var i = this[r][0];
                                "number" == typeof i && (o[i] = !0);
                            }

                            for (r = 0; r < t.length; r++) {
                                var a = t[r];
                                "number" == typeof a[0] && o[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"), e.push(a));
                            }
                        }, e;
                    };
                }, function (t, e, n) {
                    function o(t, e) {
                        for (var n = 0; n < t.length; n++) {
                            var o = t[n],
                                r = m[o.id];

                            if (r) {
                                r.refs++;

                                for (var i = 0; i < r.parts.length; i++) {
                                    r.parts[i](o.parts[i]);
                                }

                                for (; i < o.parts.length; i++) {
                                    r.parts.push(u(o.parts[i], e));
                                }
                            } else {
                                for (var a = [], i = 0; i < o.parts.length; i++) {
                                    a.push(u(o.parts[i], e));
                                }

                                m[o.id] = {
                                    id: o.id,
                                    refs: 1,
                                    parts: a
                                };
                            }
                        }
                    }

                    function r(t, e) {
                        for (var n = [], o = {}, r = 0; r < t.length; r++) {
                            var i = t[r],
                                a = e.base ? i[0] + e.base : i[0],
                                s = i[1],
                                c = i[2],
                                l = i[3],
                                u = {
                                    css: s,
                                    media: c,
                                    sourceMap: l
                                };
                            o[a] ? o[a].parts.push(u) : n.push(o[a] = {
                                id: a,
                                parts: [u]
                            });
                        }

                        return n;
                    }

                    function i(t, e) {
                        var n = v(t.insertInto);
                        if (!n) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
                        var o = w[w.length - 1];
                        if ("top" === t.insertAt) o ? o.nextSibling ? n.insertBefore(e, o.nextSibling) : n.appendChild(e) : n.insertBefore(e, n.firstChild), w.push(e); else {
                            if ("bottom" !== t.insertAt) throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
                            n.appendChild(e);
                        }
                    }

                    function a(t) {
                        if (null === t.parentNode) return !1;
                        t.parentNode.removeChild(t);
                        var e = w.indexOf(t);
                        e >= 0 && w.splice(e, 1);
                    }

                    function s(t) {
                        var e = document.createElement("style");
                        return t.attrs.type = "text/css", l(e, t.attrs), i(t, e), e;
                    }

                    function c(t) {
                        var e = document.createElement("link");
                        return t.attrs.type = "text/css", t.attrs.rel = "stylesheet", l(e, t.attrs), i(t, e), e;
                    }

                    function l(t, e) {
                        Object.keys(e).forEach(function (n) {
                            t.setAttribute(n, e[n]);
                        });
                    }

                    function u(t, e) {
                        var n, o, r, i;

                        if (e.transform && t.css) {
                            if (!(i = e.transform(t.css))) return function () {
                            };
                            t.css = i;
                        }

                        if (e.singleton) {
                            var l = h++;
                            n = g || (g = s(e)), o = f.bind(null, n, l, !1), r = f.bind(null, n, l, !0);
                        } else t.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = c(e), o = p.bind(null, n, e), r = function r() {
                            a(n), n.href && URL.revokeObjectURL(n.href);
                        }) : (n = s(e), o = d.bind(null, n), r = function r() {
                            a(n);
                        });

                        return o(t), function (e) {
                            if (e) {
                                if (e.css === t.css && e.media === t.media && e.sourceMap === t.sourceMap) return;
                                o(t = e);
                            } else r();
                        };
                    }

                    function f(t, e, n, o) {
                        var r = n ? "" : o.css;
                        if (t.styleSheet) t.styleSheet.cssText = x(e, r); else {
                            var i = document.createTextNode(r),
                                a = t.childNodes;
                            a[e] && t.removeChild(a[e]), a.length ? t.insertBefore(i, a[e]) : t.appendChild(i);
                        }
                    }

                    function d(t, e) {
                        var n = e.css,
                            o = e.media;
                        if (o && t.setAttribute("media", o), t.styleSheet) t.styleSheet.cssText = n; else {
                            for (; t.firstChild;) {
                                t.removeChild(t.firstChild);
                            }

                            t.appendChild(document.createTextNode(n));
                        }
                    }

                    function p(t, e, n) {
                        var o = n.css,
                            r = n.sourceMap,
                            i = void 0 === e.convertToAbsoluteUrls && r;
                        (e.convertToAbsoluteUrls || i) && (o = y(o)), r && (o += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r)))) + " */");
                        var a = new Blob([o], {
                                type: "text/css"
                            }),
                            s = t.href;
                        t.href = URL.createObjectURL(a), s && URL.revokeObjectURL(s);
                    }

                    var m = {},
                        b = function (t) {
                            var e;
                            return function () {
                                return void 0 === e && (e = t.apply(this, arguments)), e;
                            };
                        }(function () {
                            return window && document && document.all && !window.atob;
                        }),
                        v = function (t) {
                            var e = {};
                            return function (n) {
                                return void 0 === e[n] && (e[n] = t.call(this, n)), e[n];
                            };
                        }(function (t) {
                            return document.querySelector(t);
                        }),
                        g = null,
                        h = 0,
                        w = [],
                        y = n(15);

                    t.exports = function (t, e) {
                        if ("undefined" != typeof DEBUG && DEBUG && "object" != (typeof document === "undefined" ? "undefined" : _typeof(document))) throw new Error("The style-loader cannot be used in a non-browser environment");
                        e = e || {}, e.attrs = "object" == _typeof(e.attrs) ? e.attrs : {}, e.singleton || (e.singleton = b()), e.insertInto || (e.insertInto = "head"), e.insertAt || (e.insertAt = "bottom");
                        var n = r(t, e);
                        return o(n, e), function (t) {
                            for (var i = [], a = 0; a < n.length; a++) {
                                var s = n[a],
                                    c = m[s.id];
                                c.refs--, i.push(c);
                            }

                            if (t) {
                                o(r(t, e), e);
                            }

                            for (var a = 0; a < i.length; a++) {
                                var c = i[a];

                                if (0 === c.refs) {
                                    for (var l = 0; l < c.parts.length; l++) {
                                        c.parts[l]();
                                    }

                                    delete m[c.id];
                                }
                            }
                        };
                    };

                    var x = function () {
                        var t = [];
                        return function (e, n) {
                            return t[e] = n, t.filter(Boolean).join("\n");
                        };
                    }();
                }, function (t, e) {
                    t.exports = function (t) {
                        var e = "undefined" != typeof window && window.location;
                        if (!e) throw new Error("fixUrls requires window.location");
                        if (!t || "string" != typeof t) return t;
                        var n = e.protocol + "//" + e.host,
                            o = n + e.pathname.replace(/\/[^\/]*$/, "/");
                        return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (t, e) {
                            var r = e.trim().replace(/^"(.*)"$/, function (t, e) {
                                return e;
                            }).replace(/^'(.*)'$/, function (t, e) {
                                return e;
                            });
                            if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r)) return t;
                            var i;
                            return i = 0 === r.indexOf("//") ? r : 0 === r.indexOf("/") ? n + r : o + r.replace(/^\.\//, ""), "url(" + JSON.stringify(i) + ")";
                        });
                    };
                }, function (t, e, n) {
                    var o = n(17);
                    "undefined" == typeof window || window.Promise || (window.Promise = o), n(21), String.prototype.includes || (String.prototype.includes = function (t, e) {
                        "use strict";

                        return "number" != typeof e && (e = 0), !(e + t.length > this.length) && -1 !== this.indexOf(t, e);
                    }), Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
                        value: function value(t, e) {
                            if (null == this) throw new TypeError('"this" is null or not defined');
                            var n = Object(this),
                                o = n.length >>> 0;
                            if (0 === o) return !1;

                            for (var r = 0 | e, i = Math.max(r >= 0 ? r : o - Math.abs(r), 0); i < o;) {
                                if (function (t, e) {
                                    return t === e || "number" == typeof t && "number" == typeof e && isNaN(t) && isNaN(e);
                                }(n[i], t)) return !0;
                                i++;
                            }

                            return !1;
                        }
                    }), "undefined" != typeof window && function (t) {
                        t.forEach(function (t) {
                            t.hasOwnProperty("remove") || Object.defineProperty(t, "remove", {
                                configurable: !0,
                                enumerable: !0,
                                writable: !0,
                                value: function value() {
                                    this.parentNode.removeChild(this);
                                }
                            });
                        });
                    }([Element.prototype, CharacterData.prototype, DocumentType.prototype]);
                }, function (t, e, n) {
                    (function (e) {
                        !function (n) {
                            function o() {
                            }

                            function r(t, e) {
                                return function () {
                                    t.apply(e, arguments);
                                };
                            }

                            function i(t) {
                                if ("object" != _typeof(this)) throw new TypeError("Promises must be constructed via new");
                                if ("function" != typeof t) throw new TypeError("not a function");
                                this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], f(t, this);
                            }

                            function a(t, e) {
                                for (; 3 === t._state;) {
                                    t = t._value;
                                }

                                if (0 === t._state) return void t._deferreds.push(e);
                                t._handled = !0, i._immediateFn(function () {
                                    var n = 1 === t._state ? e.onFulfilled : e.onRejected;
                                    if (null === n) return void (1 === t._state ? s : c)(e.promise, t._value);
                                    var o;

                                    try {
                                        o = n(t._value);
                                    } catch (t) {
                                        return void c(e.promise, t);
                                    }

                                    s(e.promise, o);
                                });
                            }

                            function s(t, e) {
                                try {
                                    if (e === t) throw new TypeError("A promise cannot be resolved with itself.");

                                    if (e && ("object" == _typeof(e) || "function" == typeof e)) {
                                        var n = e.then;
                                        if (e instanceof i) return t._state = 3, t._value = e, void l(t);
                                        if ("function" == typeof n) return void f(r(n, e), t);
                                    }

                                    t._state = 1, t._value = e, l(t);
                                } catch (e) {
                                    c(t, e);
                                }
                            }

                            function c(t, e) {
                                t._state = 2, t._value = e, l(t);
                            }

                            function l(t) {
                                2 === t._state && 0 === t._deferreds.length && i._immediateFn(function () {
                                    t._handled || i._unhandledRejectionFn(t._value);
                                });

                                for (var e = 0, n = t._deferreds.length; e < n; e++) {
                                    a(t, t._deferreds[e]);
                                }

                                t._deferreds = null;
                            }

                            function u(t, e, n) {
                                this.onFulfilled = "function" == typeof t ? t : null, this.onRejected = "function" == typeof e ? e : null, this.promise = n;
                            }

                            function f(t, e) {
                                var n = !1;

                                try {
                                    t(function (t) {
                                        n || (n = !0, s(e, t));
                                    }, function (t) {
                                        n || (n = !0, c(e, t));
                                    });
                                } catch (t) {
                                    if (n) return;
                                    n = !0, c(e, t);
                                }
                            }

                            var d = setTimeout;
                            i.prototype["catch"] = function (t) {
                                return this.then(null, t);
                            }, i.prototype.then = function (t, e) {
                                var n = new this.constructor(o);
                                return a(this, new u(t, e, n)), n;
                            }, i.all = function (t) {
                                var e = Array.prototype.slice.call(t);
                                return new i(function (t, n) {
                                    function o(i, a) {
                                        try {
                                            if (a && ("object" == _typeof(a) || "function" == typeof a)) {
                                                var s = a.then;
                                                if ("function" == typeof s) return void s.call(a, function (t) {
                                                    o(i, t);
                                                }, n);
                                            }

                                            e[i] = a, 0 == --r && t(e);
                                        } catch (t) {
                                            n(t);
                                        }
                                    }

                                    if (0 === e.length) return t([]);

                                    for (var r = e.length, i = 0; i < e.length; i++) {
                                        o(i, e[i]);
                                    }
                                });
                            }, i.resolve = function (t) {
                                return t && "object" == _typeof(t) && t.constructor === i ? t : new i(function (e) {
                                    e(t);
                                });
                            }, i.reject = function (t) {
                                return new i(function (e, n) {
                                    n(t);
                                });
                            }, i.race = function (t) {
                                return new i(function (e, n) {
                                    for (var o = 0, r = t.length; o < r; o++) {
                                        t[o].then(e, n);
                                    }
                                });
                            }, i._immediateFn = "function" == typeof e && function (t) {
                                e(t);
                            } || function (t) {
                                d(t, 0);
                            }, i._unhandledRejectionFn = function (t) {
                                "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", t);
                            }, i._setImmediateFn = function (t) {
                                i._immediateFn = t;
                            }, i._setUnhandledRejectionFn = function (t) {
                                i._unhandledRejectionFn = t;
                            }, void 0 !== t && t.exports ? t.exports = i : n.Promise || (n.Promise = i);
                        }(this);
                    }).call(e, n(18).setImmediate);
                }, function (t, e, n) {
                    function o(t, e) {
                        this._id = t, this._clearFn = e;
                    }

                    var r = Function.prototype.apply;
                    e.setTimeout = function () {
                        return new o(r.call(setTimeout, window, arguments), clearTimeout);
                    }, e.setInterval = function () {
                        return new o(r.call(setInterval, window, arguments), clearInterval);
                    }, e.clearTimeout = e.clearInterval = function (t) {
                        t && t.close();
                    }, o.prototype.unref = o.prototype.ref = function () {
                    }, o.prototype.close = function () {
                        this._clearFn.call(window, this._id);
                    }, e.enroll = function (t, e) {
                        clearTimeout(t._idleTimeoutId), t._idleTimeout = e;
                    }, e.unenroll = function (t) {
                        clearTimeout(t._idleTimeoutId), t._idleTimeout = -1;
                    }, e._unrefActive = e.active = function (t) {
                        clearTimeout(t._idleTimeoutId);
                        var e = t._idleTimeout;
                        e >= 0 && (t._idleTimeoutId = setTimeout(function () {
                            t._onTimeout && t._onTimeout();
                        }, e));
                    }, n(19), e.setImmediate = setImmediate, e.clearImmediate = clearImmediate;
                }, function (t, e, n) {
                    (function (t, e) {
                        !function (t, n) {
                            "use strict";

                            function o(t) {
                                "function" != typeof t && (t = new Function("" + t));

                                for (var e = new Array(arguments.length - 1), n = 0; n < e.length; n++) {
                                    e[n] = arguments[n + 1];
                                }

                                var o = {
                                    callback: t,
                                    args: e
                                };
                                return l[c] = o, s(c), c++;
                            }

                            function r(t) {
                                delete l[t];
                            }

                            function i(t) {
                                var e = t.callback,
                                    o = t.args;

                                switch (o.length) {
                                    case 0:
                                        e();
                                        break;

                                    case 1:
                                        e(o[0]);
                                        break;

                                    case 2:
                                        e(o[0], o[1]);
                                        break;

                                    case 3:
                                        e(o[0], o[1], o[2]);
                                        break;

                                    default:
                                        e.apply(n, o);
                                }
                            }

                            function a(t) {
                                if (u) setTimeout(a, 0, t); else {
                                    var e = l[t];

                                    if (e) {
                                        u = !0;

                                        try {
                                            i(e);
                                        } finally {
                                            r(t), u = !1;
                                        }
                                    }
                                }
                            }

                            if (!t.setImmediate) {
                                var s,
                                    c = 1,
                                    l = {},
                                    u = !1,
                                    f = t.document,
                                    d = Object.getPrototypeOf && Object.getPrototypeOf(t);
                                d = d && d.setTimeout ? d : t, "[object process]" === {}.toString.call(t.process) ? function () {
                                    s = function s(t) {
                                        e.nextTick(function () {
                                            a(t);
                                        });
                                    };
                                }() : function () {
                                    if (t.postMessage && !t.importScripts) {
                                        var e = !0,
                                            n = t.onmessage;
                                        return t.onmessage = function () {
                                            e = !1;
                                        }, t.postMessage("", "*"), t.onmessage = n, e;
                                    }
                                }() ? function () {
                                    var e = "setImmediate$" + Math.random() + "$",
                                        n = function n(_n) {
                                            _n.source === t && "string" == typeof _n.data && 0 === _n.data.indexOf(e) && a(+_n.data.slice(e.length));
                                        };

                                    t.addEventListener ? t.addEventListener("message", n, !1) : t.attachEvent("onmessage", n), s = function s(n) {
                                        t.postMessage(e + n, "*");
                                    };
                                }() : t.MessageChannel ? function () {
                                    var t = new MessageChannel();
                                    t.port1.onmessage = function (t) {
                                        a(t.data);
                                    }, s = function s(e) {
                                        t.port2.postMessage(e);
                                    };
                                }() : f && "onreadystatechange" in f.createElement("script") ? function () {
                                    var t = f.documentElement;

                                    s = function s(e) {
                                        var n = f.createElement("script");
                                        n.onreadystatechange = function () {
                                            a(e), n.onreadystatechange = null, t.removeChild(n), n = null;
                                        }, t.appendChild(n);
                                    };
                                }() : function () {
                                    s = function s(t) {
                                        setTimeout(a, 0, t);
                                    };
                                }(), d.setImmediate = o, d.clearImmediate = r;
                            }
                        }("undefined" == typeof self ? void 0 === t ? this : t : self);
                    }).call(e, n(7), n(20));
                }, function (t, e) {
                    function n() {
                        throw new Error("setTimeout has not been defined");
                    }

                    function o() {
                        throw new Error("clearTimeout has not been defined");
                    }

                    function r(t) {
                        if (u === setTimeout) return setTimeout(t, 0);
                        if ((u === n || !u) && setTimeout) return u = setTimeout, setTimeout(t, 0);

                        try {
                            return u(t, 0);
                        } catch (e) {
                            try {
                                return u.call(null, t, 0);
                            } catch (e) {
                                return u.call(this, t, 0);
                            }
                        }
                    }

                    function i(t) {
                        if (f === clearTimeout) return clearTimeout(t);
                        if ((f === o || !f) && clearTimeout) return f = clearTimeout, clearTimeout(t);

                        try {
                            return f(t);
                        } catch (e) {
                            try {
                                return f.call(null, t);
                            } catch (e) {
                                return f.call(this, t);
                            }
                        }
                    }

                    function a() {
                        b && p && (b = !1, p.length ? m = p.concat(m) : v = -1, m.length && s());
                    }

                    function s() {
                        if (!b) {
                            var t = r(a);
                            b = !0;

                            for (var e = m.length; e;) {
                                for (p = m, m = []; ++v < e;) {
                                    p && p[v].run();
                                }

                                v = -1, e = m.length;
                            }

                            p = null, b = !1, i(t);
                        }
                    }

                    function c(t, e) {
                        this.fun = t, this.array = e;
                    }

                    function l() {
                    }

                    var u,
                        f,
                        d = t.exports = {};
                    !function () {
                        try {
                            u = "function" == typeof setTimeout ? setTimeout : n;
                        } catch (t) {
                            u = n;
                        }

                        try {
                            f = "function" == typeof clearTimeout ? clearTimeout : o;
                        } catch (t) {
                            f = o;
                        }
                    }();
                    var p,
                        m = [],
                        b = !1,
                        v = -1;
                    d.nextTick = function (t) {
                        var e = new Array(arguments.length - 1);
                        if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {
                            e[n - 1] = arguments[n];
                        }
                        m.push(new c(t, e)), 1 !== m.length || b || r(s);
                    }, c.prototype.run = function () {
                        this.fun.apply(null, this.array);
                    }, d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.version = "", d.versions = {}, d.on = l, d.addListener = l, d.once = l, d.off = l, d.removeListener = l, d.removeAllListeners = l, d.emit = l, d.prependListener = l, d.prependOnceListener = l, d.listeners = function (t) {
                        return [];
                    }, d.binding = function (t) {
                        throw new Error("process.binding is not supported");
                    }, d.cwd = function () {
                        return "/";
                    }, d.chdir = function (t) {
                        throw new Error("process.chdir is not supported");
                    }, d.umask = function () {
                        return 0;
                    };
                }, function (t, e, n) {
                    "use strict";

                    n(22).polyfill();
                }, function (t, e, n) {
                    "use strict";

                    function o(t, e) {
                        if (void 0 === t || null === t) throw new TypeError("Cannot convert first argument to object");

                        for (var n = Object(t), o = 1; o < arguments.length; o++) {
                            var r = arguments[o];
                            if (void 0 !== r && null !== r) for (var i = Object.keys(Object(r)), a = 0, s = i.length; a < s; a++) {
                                var c = i[a],
                                    l = Object.getOwnPropertyDescriptor(r, c);
                                void 0 !== l && l.enumerable && (n[c] = r[c]);
                            }
                        }

                        return n;
                    }

                    function r() {
                        Object.assign || Object.defineProperty(Object, "assign", {
                            enumerable: !1,
                            configurable: !0,
                            writable: !0,
                            value: o
                        });
                    }

                    t.exports = {
                        assign: o,
                        polyfill: r
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(24),
                        r = n(6),
                        i = n(5),
                        a = n(36),
                        s = function s() {
                            for (var t = [], e = 0; e < arguments.length; e++) {
                                t[e] = arguments[e];
                            }

                            if ("undefined" != typeof window) {
                                var n = a.getOpts.apply(void 0, t);
                                return new Promise(function (t, e) {
                                    i["default"].promise = {
                                        resolve: t,
                                        reject: e
                                    }, o["default"](n), setTimeout(function () {
                                        r.openModal();
                                    });
                                });
                            }
                        };

                    s.close = r.onAction, s.getState = r.getState, s.setActionValue = i.setActionValue, s.stopLoading = r.stopLoading, s.setDefaults = a.setDefaults, e["default"] = s;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1),
                        r = n(0),
                        i = r["default"].MODAL,
                        a = n(4),
                        s = n(34),
                        c = n(35),
                        l = n(1);
                    e.init = function (t) {
                        o.getNode(i) || (document.body || l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"), s["default"](), a["default"]()), a.initModalContent(t), c["default"](t);
                    }, e["default"] = e.init;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(0),
                        r = o["default"].MODAL;
                    e.modalMarkup = '\n  <div class="' + r + '" role="dialog" aria-modal="true"></div>', e["default"] = e.modalMarkup;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(0),
                        r = o["default"].OVERLAY,
                        i = '<div \n    class="' + r + '"\n    tabIndex="-1">\n  </div>';
                    e["default"] = i;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(0),
                        r = o["default"].ICON;
                    e.errorIconMarkup = function () {
                        var t = r + "--error",
                            e = t + "__line";
                        return '\n    <div class="' + t + '__x-mark">\n      <span class="' + e + " " + e + '--left"></span>\n      <span class="' + e + " " + e + '--right"></span>\n    </div>\n  ';
                    }, e.warningIconMarkup = function () {
                        var t = r + "--warning";
                        return '\n    <span class="' + t + '__body">\n      <span class="' + t + '__dot"></span>\n    </span>\n  ';
                    }, e.successIconMarkup = function () {
                        var t = r + "--success";
                        return '\n    <span class="' + t + "__line " + t + '__line--long"></span>\n    <span class="' + t + "__line " + t + '__line--tip"></span>\n\n    <div class="' + t + '__ring"></div>\n    <div class="' + t + '__hide-corners"></div>\n  ';
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(0),
                        r = o["default"].CONTENT;
                    e.contentMarkup = '\n  <div class="' + r + '">\n\n  </div>\n';
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(0),
                        r = o["default"].BUTTON_CONTAINER,
                        i = o["default"].BUTTON,
                        a = o["default"].BUTTON_LOADER;
                    e.buttonMarkup = '\n  <div class="' + r + '">\n\n    <button\n      class="' + i + '"\n    ></button>\n\n    <div class="' + a + '">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n';
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(4),
                        r = n(2),
                        i = n(0),
                        a = i["default"].ICON,
                        s = i["default"].ICON_CUSTOM,
                        c = ["error", "warning", "success", "info"],
                        l = {
                            error: r.errorIconMarkup(),
                            warning: r.warningIconMarkup(),
                            success: r.successIconMarkup()
                        },
                        u = function u(t, e) {
                            var n = a + "--" + t;
                            e.classList.add(n);
                            var o = l[t];
                            o && (e.innerHTML = o);
                        },
                        f = function f(t, e) {
                            e.classList.add(s);
                            var n = document.createElement("img");
                            n.src = t, e.appendChild(n);
                        },
                        d = function d(t) {
                            if (t) {
                                var e = o.injectElIntoModal(r.iconMarkup);
                                c.includes(t) ? u(t, e) : f(t, e);
                            }
                        };

                    e["default"] = d;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(2),
                        r = n(4),
                        i = function i(t) {
                            navigator.userAgent.includes("AppleWebKit") && (t.style.display = "none", t.offsetHeight, t.style.display = "");
                        };

                    e.initTitle = function (t) {
                        if (t) {
                            var e = r.injectElIntoModal(o.titleMarkup);
                            e.textContent = t, i(e);
                        }
                    }, e.initText = function (t) {
                        if (t) {
                            var e = document.createDocumentFragment();
                            t.split("\n").forEach(function (t, n, o) {
                                e.appendChild(document.createTextNode(t)), n < o.length - 1 && e.appendChild(document.createElement("br"));
                            });
                            var n = r.injectElIntoModal(o.textMarkup);
                            n.appendChild(e), i(n);
                        }
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(1),
                        r = n(4),
                        i = n(0),
                        a = i["default"].BUTTON,
                        s = i["default"].DANGER_BUTTON,
                        c = n(3),
                        l = n(2),
                        u = n(6),
                        f = n(5),
                        d = function d(t, e, n) {
                            var r = e.text,
                                i = e.value,
                                d = e.className,
                                p = e.closeModal,
                                m = o.stringToNode(l.buttonMarkup),
                                b = m.querySelector("." + a),
                                v = a + "--" + t;

                            if (b.classList.add(v), d) {
                                (Array.isArray(d) ? d : d.split(" ")).filter(function (t) {
                                    return t.length > 0;
                                }).forEach(function (t) {
                                    b.classList.add(t);
                                });
                            }

                            n && t === c.CONFIRM_KEY && b.classList.add(s), b.textContent = r;
                            var g = {};
                            return g[t] = i, f.setActionValue(g), f.setActionOptionsFor(t, {
                                closeModal: p
                            }), b.addEventListener("click", function () {
                                return u.onAction(t);
                            }), m;
                        },
                        p = function p(t, e) {
                            var n = r.injectElIntoModal(l.footerMarkup);

                            for (var o in t) {
                                var i = t[o],
                                    a = d(o, i, e);
                                i.visible && n.appendChild(a);
                            }

                            0 === n.children.length && n.remove();
                        };

                    e["default"] = p;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(3),
                        r = n(4),
                        i = n(2),
                        a = n(5),
                        s = n(6),
                        c = n(0),
                        l = c["default"].CONTENT,
                        u = function u(t) {
                            t.addEventListener("input", function (t) {
                                var e = t.target,
                                    n = e.value;
                                a.setActionValue(n);
                            }), t.addEventListener("keyup", function (t) {
                                if ("Enter" === t.key) return s.onAction(o.CONFIRM_KEY);
                            }), setTimeout(function () {
                                t.focus(), a.setActionValue("");
                            }, 0);
                        },
                        f = function f(t, e, n) {
                            var o = document.createElement(e),
                                r = l + "__" + e;
                            o.classList.add(r);

                            for (var i in n) {
                                var a = n[i];
                                o[i] = a;
                            }

                            "input" === e && u(o), t.appendChild(o);
                        },
                        d = function d(t) {
                            if (t) {
                                var e = r.injectElIntoModal(i.contentMarkup),
                                    n = t.element,
                                    o = t.attributes;
                                "string" == typeof n ? f(e, n, o) : e.appendChild(n);
                            }
                        };

                    e["default"] = d;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(1),
                        r = n(2),
                        i = function i() {
                            var t = o.stringToNode(r.overlayMarkup);
                            document.body.appendChild(t);
                        };

                    e["default"] = i;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });

                    var o = n(5),
                        r = n(6),
                        i = n(1),
                        a = n(3),
                        s = n(0),
                        c = s["default"].MODAL,
                        l = s["default"].BUTTON,
                        u = s["default"].OVERLAY,
                        f = function f(t) {
                            t.preventDefault(), v();
                        },
                        d = function d(t) {
                            t.preventDefault(), g();
                        },
                        p = function p(t) {
                            if (o["default"].isOpen) switch (t.key) {
                                case "Escape":
                                    return r.onAction(a.CANCEL_KEY);
                            }
                        },
                        m = function m(t) {
                            if (o["default"].isOpen) switch (t.key) {
                                case "Tab":
                                    return f(t);
                            }
                        },
                        b = function b(t) {
                            if (o["default"].isOpen) return "Tab" === t.key && t.shiftKey ? d(t) : void 0;
                        },
                        v = function v() {
                            var t = i.getNode(l);
                            t && (t.tabIndex = 0, t.focus());
                        },
                        g = function g() {
                            var t = i.getNode(c),
                                e = t.querySelectorAll("." + l),
                                n = e.length - 1,
                                o = e[n];
                            o && o.focus();
                        },
                        h = function h(t) {
                            t[t.length - 1].addEventListener("keydown", m);
                        },
                        w = function w(t) {
                            t[0].addEventListener("keydown", b);
                        },
                        y = function y() {
                            var t = i.getNode(c),
                                e = t.querySelectorAll("." + l);
                            e.length && (h(e), w(e));
                        },
                        x = function x(t) {
                            if (i.getNode(u) === t.target) return r.onAction(a.CANCEL_KEY);
                        },
                        _ = function _(t) {
                            var e = i.getNode(u);
                            e.removeEventListener("click", x), t && e.addEventListener("click", x);
                        },
                        k = function k(t) {
                            o["default"].timer && clearTimeout(o["default"].timer), t && (o["default"].timer = window.setTimeout(function () {
                                return r.onAction(a.CANCEL_KEY);
                            }, t));
                        },
                        O = function O(t) {
                            t.closeOnEsc ? document.addEventListener("keyup", p) : document.removeEventListener("keyup", p), t.dangerMode ? v() : g(), y(), _(t.closeOnClickOutside), k(t.timer);
                        };

                    e["default"] = O;
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1),
                        r = n(3),
                        i = n(37),
                        a = n(38),
                        s = {
                            title: null,
                            text: null,
                            icon: null,
                            buttons: r.defaultButtonList,
                            content: null,
                            className: null,
                            closeOnClickOutside: !0,
                            closeOnEsc: !0,
                            dangerMode: !1,
                            timer: null
                        },
                        c = Object.assign({}, s);

                    e.setDefaults = function (t) {
                        c = Object.assign({}, s, t);
                    };

                    var l = function l(t) {
                            var e = t && t.button,
                                n = t && t.buttons;
                            return void 0 !== e && void 0 !== n && o.throwErr("Cannot set both 'button' and 'buttons' options!"), void 0 !== e ? {
                                confirm: e
                            } : n;
                        },
                        u = function u(t) {
                            return o.ordinalSuffixOf(t + 1);
                        },
                        f = function f(t, e) {
                            o.throwErr(u(e) + " argument ('" + t + "') is invalid");
                        },
                        d = function d(t, e) {
                            var n = t + 1,
                                r = e[n];
                            o.isPlainObject(r) || void 0 === r || o.throwErr("Expected " + u(n) + " argument ('" + r + "') to be a plain object");
                        },
                        p = function p(t, e) {
                            var n = t + 1,
                                r = e[n];
                            void 0 !== r && o.throwErr("Unexpected " + u(n) + " argument (" + r + ")");
                        },
                        m = function m(t, e, n, r) {
                            var i = _typeof(e),
                                a = "string" === i,
                                s = e instanceof Element;

                            if (a) {
                                if (0 === n) return {
                                    text: e
                                };
                                if (1 === n) return {
                                    text: e,
                                    title: r[0]
                                };
                                if (2 === n) return d(n, r), {
                                    icon: e
                                };
                                f(e, n);
                            } else {
                                if (s && 0 === n) return d(n, r), {
                                    content: e
                                };
                                if (o.isPlainObject(e)) return p(n, r), e;
                                f(e, n);
                            }
                        };

                    e.getOpts = function () {
                        for (var t = [], e = 0; e < arguments.length; e++) {
                            t[e] = arguments[e];
                        }

                        var n = {};
                        t.forEach(function (e, o) {
                            var r = m(0, e, o, t);
                            Object.assign(n, r);
                        });
                        var o = l(n);
                        n.buttons = r.getButtonListOpts(o), delete n.button, n.content = i.getContentOpts(n.content);
                        var u = Object.assign({}, s, c, n);
                        return Object.keys(u).forEach(function (t) {
                            a.DEPRECATED_OPTS[t] && a.logDeprecation(t);
                        }), u;
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    });
                    var o = n(1),
                        r = {
                            element: "input",
                            attributes: {
                                placeholder: ""
                            }
                        };

                    e.getContentOpts = function (t) {
                        var e = {};
                        return o.isPlainObject(t) ? Object.assign(e, t) : t instanceof Element ? {
                            element: t
                        } : "input" === t ? r : null;
                    };
                }, function (t, e, n) {
                    "use strict";

                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.logDeprecation = function (t) {
                        var n = e.DEPRECATED_OPTS[t],
                            o = n.onlyRename,
                            r = n.replacement,
                            i = n.subOption,
                            a = n.link,
                            s = o ? "renamed" : "deprecated",
                            c = 'SweetAlert warning: "' + t + '" option has been ' + s + ".";

                        if (r) {
                            c += " Please use" + (i ? ' "' + i + '" in ' : " ") + '"' + r + '" instead.';
                        }

                        var l = "https://sweetalert.js.org";
                        c += a ? " More details: " + l + a : " More details: " + l + "/guides/#upgrading-from-1x", console.warn(c);
                    }, e.DEPRECATED_OPTS = {
                        type: {
                            replacement: "icon",
                            link: "/docs/#icon"
                        },
                        imageUrl: {
                            replacement: "icon",
                            link: "/docs/#icon"
                        },
                        customClass: {
                            replacement: "className",
                            onlyRename: !0,
                            link: "/docs/#classname"
                        },
                        imageSize: {},
                        showCancelButton: {
                            replacement: "buttons",
                            link: "/docs/#buttons"
                        },
                        showConfirmButton: {
                            replacement: "button",
                            link: "/docs/#button"
                        },
                        confirmButtonText: {
                            replacement: "button",
                            link: "/docs/#button"
                        },
                        confirmButtonColor: {},
                        cancelButtonText: {
                            replacement: "buttons",
                            link: "/docs/#buttons"
                        },
                        closeOnConfirm: {
                            replacement: "button",
                            subOption: "closeModal",
                            link: "/docs/#button"
                        },
                        closeOnCancel: {
                            replacement: "buttons",
                            subOption: "closeModal",
                            link: "/docs/#buttons"
                        },
                        showLoaderOnConfirm: {
                            replacement: "buttons"
                        },
                        animation: {},
                        inputType: {
                            replacement: "content",
                            link: "/docs/#content"
                        },
                        inputValue: {
                            replacement: "content",
                            link: "/docs/#content"
                        },
                        inputPlaceholder: {
                            replacement: "content",
                            link: "/docs/#content"
                        },
                        html: {
                            replacement: "content",
                            link: "/docs/#content"
                        },
                        allowEscapeKey: {
                            replacement: "closeOnEsc",
                            onlyRename: !0,
                            link: "/docs/#closeonesc"
                        },
                        allowClickOutside: {
                            replacement: "closeOnClickOutside",
                            onlyRename: !0,
                            link: "/docs/#closeonclickoutside"
                        }
                    };
                }]);
            });
            /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(/*! ./../../../node_modules/timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate, __webpack_require__(/*! ./../../../node_modules/timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").clearImmediate, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

        /***/
    }),

    /***/ 0:
    /*!************************************!*\
  !*** multi ./resources/js/main.js ***!
  \************************************/
    /*! no static exports found */
    /***/ (function (module, exports, __webpack_require__) {

        module.exports = __webpack_require__(/*! C:\xampp\htdocs\lifeStrategy\resources\js\main.js */"./resources/js/main.js");


        /***/
    })

    /******/
});